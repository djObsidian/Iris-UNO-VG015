
SX1262_test.elf:     file format elf32-littleriscv
SX1262_test.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x80000000

Program Header:
0x70000003 off    0x0005473a vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x00000041 memsz 0x00000000 flags r--
    LOAD off    0x00000000 vaddr 0x4003f000 paddr 0x4003f000 align 2**12
         filesz 0x000000d4 memsz 0x00001000 flags rw-
    LOAD off    0x00001000 vaddr 0x80000000 paddr 0x80000000 align 2**12
         filesz 0x00001d41 memsz 0x00001d41 flags r-x
    LOAD off    0x00003000 vaddr 0x40000000 paddr 0x80001d44 align 2**12
         filesz 0x00000244 memsz 0x0000025c flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .text.startup     00000160  80000000  80000000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text.crt         00000184  80000180  80000180  00001180  2**6  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             00001722  80000304  80000304  00001304  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .tbss             00000000  80001a28  80001a28  00000000  2**2  ALLOC, THREAD_LOCAL
  4 .rodata           00000319  80001a28  80001a28  00002a28  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .sdata            00000008  40000000  80001d44  00003000  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data             0000023c  40000008  80001d4c  00003008  2**3  CONTENTS, ALLOC, LOAD, DATA
  7 .sbss             00000018  40000244  80001f88  00003244  2**2  ALLOC
  8 .bss              00000000  4000025c  80001fa0  00000000  2**2  ALLOC
  9 .stack            00000800  4003f800  4003f800  00000800  2**0  ALLOC
 10 .debug_info       000166c9  00000000  00000000  00003244  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev     0000153b  00000000  00000000  0001990d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_loclists   00001289  00000000  00000000  0001ae48  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges    00000220  00000000  00000000  0001c0d8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists   000001a9  00000000  00000000  0001c2f8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line       00003660  00000000  00000000  0001c4a1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str        0003470d  00000000  00000000  0001fb01  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line_str   0000051a  00000000  00000000  0005420e  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment          00000012  00000000  00000000  00054728  2**0  CONTENTS, READONLY
 19 .riscv.attributes 00000041  00000000  00000000  0005473a  2**0  CONTENTS, READONLY
 20 .debug_frame      000006c0  00000000  00000000  0005477c  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro      00011c44  00000000  00000000  00054e3c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
80000000 l    d  .text.startup	00000000 .text.startup
80000180 l    d  .text.crt	00000000 .text.crt
80000304 l    d  .text	00000000 .text
80001a28 l    d  .tbss	00000000 .tbss
80001a28 l    d  .rodata	00000000 .rodata
40000000 l    d  .sdata	00000000 .sdata
40000008 l    d  .data	00000000 .data
40000244 l    d  .sbss	00000000 .sbss
4000025c l    d  .bss	00000000 .bss
4003f800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 startup_k1921vg015.o
80000304 l     F .text	0000000e GPIO_PullModeConfig
80000312 l     F .text	0000003c GPIO_AltFuncNumConfig
8000034e l     F .text	00000044 SPI_Init
80000392 l     F .text	00000016 SPI_StructInit
800003a8 l     F .text	0000001a PLIC_SetIrqHandler
40000088 l     O .data	00000080 mach_plic_handler
40000008 l     O .data	00000080 supervisor_plic_handler
800003c2 l     F .text	0000000c PLIC_SetPriority
800003ce l     F .text	0000002a PLIC_IntEnable
800003f8 l     F .text	00000012 PLIC_ClaimIrq
8000040a l     F .text	00000012 PLIC_ClaimComplete
8000041c l     F .text	00000012 PLIC_SetThreshold
8000042e l     F .text	0000002a PLIC_MachHandler
80000458 l     F .text	00000008 PutChar
80000460 l     F .text	00000018 PutString
80000478 l     F .text	00000082 PutUnsignedInt
800004fa l     F .text	000000d2 PutSignedInt
800005cc l     F .text	0000008a PutHexa
80000656 l     F .text	00000166 vsnprintf
800007bc l     F .text	00000014 vsprintf
800007d0 l     F .text	00000250 SystemCoreClockUpdate
40000258 l     O .sbss	00000004 SystemCoreClock
40000254 l     O .sbss	00000004 SystemPll0Clock
40000250 l     O .sbss	00000004 SystemPll1Clock
4000024c l     O .sbss	00000004 USBClock
80000a20 l     F .text	000000e6 ClkInit
80000b06 l     F .text	00000026 InterruptEnable
80000b2c l     F .text	0000000c SystemInit
80000b38 l     F .text	00000032 sx126x_convert_freq_in_hz_to_pll_step
80000b6a l     F .text	00000026 sx126x_hal_wait_on_busy
80000b90 l     F .text	0000000e sx126x_hal_nss_low
80000b9e l     F .text	0000000e sx126x_hal_nss_high
80000bac l     F .text	0000002a sx126x_hal_check_device_ready
40000004 l     O .sdata	00000004 radio_mode
80000bd6 l     F .text	0000004a spi_transmit
80000c20 l     F .text	00000072 sx126x_hal_write
80000c92 l     F .text	00000020 sx126x_set_standby
80000cb2 l     F .text	00000020 sx126x_cal
80000cd2 l     F .text	0000003c sx126x_set_pa_cfg
80000d0e l     F .text	00000026 sx126x_write_register
80000d34 l     F .text	00000038 sx126x_set_rf_freq_in_pll_steps
80000d6c l     F .text	0000001a sx126x_set_rf_freq
80000d86 l     F .text	00000020 sx126x_set_pkt_type
80000da6 l     F .text	00000024 sx126x_set_tx_params
80000dca l     F .text	00000072 spi_receive
80000e3c l     F .text	00000058 sx126x_hal_read
80000e94 l     F .text	0000002a sx126x_read_register
80000ebe l     F .text	000000ae sx126x_set_lora_pkt_params
80000f6c l     F .text	00000072 sx126x_tx_modulation_workaround
80000fde l     F .text	00000056 sx126x_set_lora_mod_params
80001034 l     F .text	0000003c sx126x_get_status
80001070 l     F .text	0000007a gpio_init
800010ea l     F .text	0000000e GPIO_IRQHandler
800010f8 l     F .text	000000c0 SPI0_init
800011b8 l     F .text	0000000a SPI0_IRQHandler
800011c2 l     F .text	0000006c retarget_init
8000122e l     F .text	00000018 periph_init
80001246 l     F .text	00000016 retarget_put_char
8000125c l     F .text	0000000c PrintChar
80001268 l     F .text	00000032 fputc
40000108 l     O .data	00000120 r
8000129a l     F .text	00000036 fputs
800012d0 l     F .text	00000066 vfprintf
80001336 l     F .text	00000016 vprintf
8000134c l     F .text	0000001e printf
800000a0 l     F .text.startup	000000b4 plf_init_generic
40000248 l     O .sbss	00000004 led_shift
40000234 l     O .data	00000010 mod_params
40000228 l     O .data	0000000c pkt_params
40000000 l     O .sdata	00000004 pa_cfg
40000244 l     O .sbss	00000004 pb12_state
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-memcpy.o
00000000 l    df *ABS*	00000000 _udivdi3.o
00000800 g       *ABS*	00000000 STACK_SIZE
40000780 g       *ABS*	00000000 __global_pointer$
00005f08  w      .debug_info	00000000 .hidden printf.c.50f58540
40040000 g       .stack	00000000 __TLS0_BASE__
80000084 g       .text.startup	00000000 _hart_halt
40000000 g       .sdata	00000000 __SDATA_BEGIN__
80001594 g     F .text	000000ec memcpy
80001a28 g       *ABS*	00000000 __fini_array_source_start
40000000 g       .data	00000000 __fini_array_target_start
40000008 g       .sdata	00000000 __sdata_target_end
40000000 g       .data	00000000 __init_array_target_start
4003f800 g       *ABS*	00000000 _heap_end
40000000 g       .data	00000000 __fini_array_target_end
4000025c g       .bss	00000000 __bss_end
80001680 g     F .text	000003a6 .hidden __udivdi3
80000098  w      .text.startup	00000000 abort
00006c4b  w      .debug_info	00000000 .hidden system_k1921vg015.c.3bcc5b64
0000cd61  w      .debug_info	00000000 .hidden sx126x_hal.c.c997900b
40000244 g       .data	00000000 __data_target_end
40000260 g       *ABS*	00000000 _heap_start
8000136a g     F .text	00000018 trap_handler
80000000 g       *ABS*	00000000 __TEXT_INIT_START__
80000000 g       .text.startup	00000000 _start
80001d44 g       *ABS*	00000000 __sdata_source_start
00005b6a  w      .debug_info	00000000 .hidden plic.c.fd8a32c5
4000025c g       .bss	00000000 __BSS_END__
00000160 g       *ABS*	00000000 __TEXT_INIT_SIZE__
0000a91e  w      .debug_info	00000000 .hidden sx126x.c.41c7145a
8000009c  w      .text.startup	00000000 app_init
40000244 g       .sbss	00000000 __bss_start
800014ec g     F .text	000000a8 memset
80001382 g     F .text	0000016a main
80000180  w    F .text.crt	0000014c trap_entry
40000008 g       .data	00000000 __data_target_start
80001a28 g       *ABS*	00000000 __init_array_source_start
80001a28 g     O .rodata	00000100 .hidden __clz_tab
40000000 g       .sdata	00000000 __sdata_target_start
0000f34a  w      .debug_info	00000000 .hidden main.c.494f4ad7
800000a0 g     F .text.startup	000000b4 plf_init
00001e3b  w      .debug_info	00000000 .hidden plib015_gpio.c.ff9925b6
40000000 g       .data	00000000 __init_array_target_end
40000008 g       .data	00000000 __DATA_BEGIN__
40000244 g       .data	00000000 _edata
0000474a  w      .debug_info	00000000 .hidden plib015_spi.c.7f152e7f
80000094  w      .text.startup	00000000 exit
80001a28 g       .text	00000000 _tdata_start
00006a7e  w      .debug_info	00000000 .hidden sys_init.c.09118c5c
80001a28 g       .tbss	00000000 _tbss_end
00000000 g       *ABS*	00000000 __TLS_SIZE__
80001d4c g       *ABS*	00000000 __data_source_start
000137d2  w      .debug_info	00000000 .hidden retarget.c.370f3c8d
4003f800 g       .stack	00000000 __STACK_START__



Disassembly of section .text.startup:

80000000 <_start>:
_start():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:21
    .section ".startup.entry","ax",@progbits

    ## Entry point
_start:
    ## reset mstatus
    csrw  mstatus, zero
80000000:	30001073          	csrw	mstatus,zero
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:31
    init_regs_const 16, 31, 0
#endif // !__riscv_32e
#endif // PLF_INIT_REGS

    ## setup gp
    load_addrword_abs gp, __global_pointer$
80000004:	400001b7          	lui	gp,0x40000
80000008:	78018193          	addi	gp,gp,1920 # 40000780 <__global_pointer$>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:33
    ## setup MTVEC
    load_addrword_abs t0, trap_entry
8000000c:	800002b7          	lui	t0,0x80000
80000010:	18028293          	addi	t0,t0,384 # 80000180 <trap_entry>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:34
    csrw  mtvec, t0
80000014:	30529073          	csrw	mtvec,t0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:38
    ## setup MIE, MIP


    csrw  mie, zero
80000018:	30401073          	csrw	mie,zero
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:39
    csrw  mip, zero
8000001c:	34401073          	csrw	mip,zero
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:49
    load_const_int32 t1, __TEXT_INIT_SIZE__
    cache_flush t0, t1
#endif // PLF_CACHE_CFG

    ## init FPU (if supported)
    csrr  a0, misa
80000020:	30102573          	csrr	a0,misa
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:50
    andi  a0, a0, (1 << ('F' - 'A')) | (1 << ('D' - 'A'))
80000024:	02857513          	andi	a0,a0,40
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:51
    beqz  a0, 1f
80000028:	00050863          	beqz	a0,80000038 <_start+0x38>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:52
    li    a0, (1 << 13) // mstatus.FS = 1 (initial)
8000002c:	00002537          	lui	a0,0x2
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:53
    csrs  mstatus, a0
80000030:	30052073          	csrs	mstatus,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:54
    csrw  fcsr, zero
80000034:	00301073          	fscsr	zero
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:64
#else
#define slave_hart_start _hart_halt
#endif // PLF_SMP_SUPPORT

    ## park/prep SMP slaves
    csrr  a0, mhartid
80000038:	f1402573          	csrr	a0,mhartid
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:73
#if PLF_SMP_MASTER_HARTID > 0
    li    t0, PLF_SMP_MASTER_HARTID
    bne   a0, t0, slave_hart_start
#endif // PLF_SMP_MASTER_HARTID > 0
#else // PLF_SMP_MASTER_HARTID
    bnez  a0, slave_hart_start
8000003c:	04051463          	bnez	a0,80000084 <_hart_halt>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:77
#endif // PLF_SMP_MASTER_HARTID

    ## init HART#0 sp, tp
    load_addrword_abs sp, __TLS0_BASE__
80000040:	40040137          	lui	sp,0x40040
80000044:	00010113          	mv	sp,sp
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:78
    mv    tp, sp
80000048:	00010213          	mv	tp,sp
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:79
    csrw  mscratch, sp
8000004c:	34011073          	csrw	mscratch,sp
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:86
    // reserve trap stack space
    li    t0, PLF_TRAP_STACK
    sub   sp, sp, t0
#endif // PLF_TRAP_STACK
    ## platform init
    load_addrword t0, plf_init
80000050:	800002b7          	lui	t0,0x80000
80000054:	0a028293          	addi	t0,t0,160 # 800000a0 <plf_init>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:87
    jalr  t0
80000058:	000280e7          	jalr	t0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:90
    ## jal  plf_init
    ## application-specific initialization hook
    load_addrword t0, app_init
8000005c:	800002b7          	lui	t0,0x80000
80000060:	09c28293          	addi	t0,t0,156 # 8000009c <app_init>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:91
    jalr  t0
80000064:	000280e7          	jalr	t0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:94
    ## jal  app_init
    ## main() args
    li    a0, 0
80000068:	00000513          	li	a0,0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:95
    li    a1, 0
8000006c:	00000593          	li	a1,0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:107
#if PLF_SMP_NON_COHERENT
    clflush t1
#endif // PLF_SMP_NON_COHERENT
#endif // PLF_SMP_SUPPORT
    ## start main
    load_addrword t0, main
80000070:	800012b7          	lui	t0,0x80001
80000074:	38228293          	addi	t0,t0,898 # 80001382 <main>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:108
    load_addrword ra, exit
80000078:	800000b7          	lui	ra,0x80000
8000007c:	09408093          	addi	ra,ra,148 # 80000094 <exit>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:109
    jr    t0
80000080:	00028067          	jr	t0

80000084 <_hart_halt>:
_hart_halt():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:156
1:  wfi
    j     1b
#endif // PLF_SMP_SUPPORT
#else // PLF_HTIF_BASE
    ## disable interrupts
    csrci mstatus, 0xf
80000084:	3007f073          	csrci	mstatus,15
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:157
    csrw  mie, zero
80000088:	30401073          	csrw	mie,zero
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:158
1:  wfi
8000008c:	10500073          	wfi
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:159
    j     1b
80000090:	ffdff06f          	j	8000008c <_hart_halt+0x8>

80000094 <exit>:
exit():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:163
#endif // PLF_HTIF_BASE

exit:
    nop
80000094:	00000013          	nop

80000098 <abort>:
abort():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:165
abort:
    j     _hart_halt
80000098:	fedff06f          	j	80000084 <_hart_halt>

8000009c <app_init>:
app_init():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:213
    jr    t0
#endif // PLF_SMP_SUPPORT

    ## stubs
app_init:
    ret
8000009c:	00008067          	ret

800000a0 <plf_init>:
plf_init_generic():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:38
{
    // do nothing
}

void __init plf_init_generic(void)
{
800000a0:	1141                	addi	sp,sp,-16 # 4003fff0 <__STACK_START__+0x7f0>
800000a2:	c606                	sw	ra,12(sp)
800000a4:	c422                	sw	s0,8(sp)
800000a6:	c226                	sw	s1,4(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:40
    // init BSS
    memset(__bss_start, 0, (size_t)(__bss_end - __bss_start));
800000a8:	ac418613          	addi	a2,gp,-1340 # 40000244 <pb12_state>
800000ac:	adc18793          	addi	a5,gp,-1316 # 4000025c <__BSS_END__>
800000b0:	40c78633          	sub	a2,a5,a2
800000b4:	4581                	li	a1,0
800000b6:	ac418513          	addi	a0,gp,-1340 # 40000244 <pb12_state>
800000ba:	432010ef          	jal	800014ec <memset>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:44

    memcpy((void*)&__data_target_start,
           (const void*)&__data_source_start,
           (&__data_target_end - &__data_target_start));
800000be:	88818613          	addi	a2,gp,-1912 # 40000008 <supervisor_plic_handler>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:42
    memcpy((void*)&__data_target_start,
800000c2:	ac418793          	addi	a5,gp,-1340 # 40000244 <pb12_state>
800000c6:	40c78633          	sub	a2,a5,a2
800000ca:	800025b7          	lui	a1,0x80002
800000ce:	d4c58593          	addi	a1,a1,-692 # 80001d4c <__data_source_start>
800000d2:	88818513          	addi	a0,gp,-1912 # 40000008 <supervisor_plic_handler>
800000d6:	4be010ef          	jal	80001594 <memcpy>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:48

    memcpy((void*)&__sdata_target_start,
              (const void*)&__sdata_source_start,
              (&__sdata_target_end - &__sdata_target_start));
800000da:	88018613          	addi	a2,gp,-1920 # 40000000 <pa_cfg>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:46
    memcpy((void*)&__sdata_target_start,
800000de:	88818793          	addi	a5,gp,-1912 # 40000008 <supervisor_plic_handler>
800000e2:	40c78633          	sub	a2,a5,a2
800000e6:	800025b7          	lui	a1,0x80002
800000ea:	d4458593          	addi	a1,a1,-700 # 80001d44 <__sdata_source_start>
800000ee:	88018513          	addi	a0,gp,-1920 # 40000000 <pa_cfg>
800000f2:	4a2010ef          	jal	80001594 <memcpy>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:52

    memcpy((void*)&__init_array_target_start,
              (const void*)&__init_array_source_start,
              (&__init_array_target_end - &__init_array_target_start));
800000f6:	88018793          	addi	a5,gp,-1920 # 40000000 <pa_cfg>
800000fa:	88018493          	addi	s1,gp,-1920 # 40000000 <pa_cfg>
800000fe:	8c9d                	sub	s1,s1,a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:50
    memcpy((void*)&__init_array_target_start,
80000100:	8626                	mv	a2,s1
80000102:	800025b7          	lui	a1,0x80002
80000106:	a2858593          	addi	a1,a1,-1496 # 80001a28 <__clz_tab>
8000010a:	88018513          	addi	a0,gp,-1920 # 40000000 <pa_cfg>
8000010e:	486010ef          	jal	80001594 <memcpy>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:56

    memcpy((void*)&__fini_array_target_start,
              (const void*)&__fini_array_source_start,
              (&__fini_array_target_end - &__fini_array_target_start));
80000112:	88018613          	addi	a2,gp,-1920 # 40000000 <pa_cfg>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:54
    memcpy((void*)&__fini_array_target_start,
80000116:	88018793          	addi	a5,gp,-1920 # 40000000 <pa_cfg>
8000011a:	40c78633          	sub	a2,a5,a2
8000011e:	800025b7          	lui	a1,0x80002
80000122:	a2858593          	addi	a1,a1,-1496 # 80001a28 <__clz_tab>
80000126:	88018513          	addi	a0,gp,-1920 # 40000000 <pa_cfg>
8000012a:	46a010ef          	jal	80001594 <memcpy>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:59

    // init functions for cpp
    for (uint32_t i = 0; i < ((uint32_t) (&__init_array_target_end - &__init_array_target_start)) >> 2; i++)
8000012e:	4401                	li	s0,0
80000130:	a809                	j	80000142 <plf_init+0xa2>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:60
    	((void (*)())((uint32_t*)&__init_array_target_start)[i])();
80000132:	00241793          	slli	a5,s0,0x2
80000136:	88018713          	addi	a4,gp,-1920 # 40000000 <pa_cfg>
8000013a:	97ba                	add	a5,a5,a4
8000013c:	439c                	lw	a5,0(a5)
8000013e:	9782                	jalr	a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:59 (discriminator 3)
    for (uint32_t i = 0; i < ((uint32_t) (&__init_array_target_end - &__init_array_target_start)) >> 2; i++)
80000140:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:59 (discriminator 1)
80000142:	0024d793          	srli	a5,s1,0x2
80000146:	fef466e3          	bltu	s0,a5,80000132 <plf_init+0x92>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/sys_init.c:61
}
8000014a:	40b2                	lw	ra,12(sp)
8000014c:	4422                	lw	s0,8(sp)
8000014e:	4492                	lw	s1,4(sp)
80000150:	0141                	addi	sp,sp,16
80000152:	8082                	ret
	...

Disassembly of section .text.crt:

80000180 <trap_entry>:
trap_entry():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:247
    .section ".text.crt.trap_entry","ax",@progbits
    .align 6
    .type trap_entry, @function
trap_entry:
    ## save context
    context_save
80000180:	fe512e23          	sw	t0,-4(sp)
80000184:	00010293          	mv	t0,sp
80000188:	f8010113          	addi	sp,sp,-128
8000018c:	ff017113          	andi	sp,sp,-16
80000190:	00112223          	sw	ra,4(sp)
80000194:	00512423          	sw	t0,8(sp)
80000198:	ffc2a283          	lw	t0,-4(t0)
8000019c:	00312623          	sw	gp,12(sp)
800001a0:	00412823          	sw	tp,16(sp)
800001a4:	00512a23          	sw	t0,20(sp)
800001a8:	00612c23          	sw	t1,24(sp)
800001ac:	00712e23          	sw	t2,28(sp)
800001b0:	02812023          	sw	s0,32(sp)
800001b4:	02912223          	sw	s1,36(sp)
800001b8:	02a12423          	sw	a0,40(sp)
800001bc:	02b12623          	sw	a1,44(sp)
800001c0:	02c12823          	sw	a2,48(sp)
800001c4:	02d12a23          	sw	a3,52(sp)
800001c8:	02e12c23          	sw	a4,56(sp)
800001cc:	02f12e23          	sw	a5,60(sp)
800001d0:	05012023          	sw	a6,64(sp)
800001d4:	05112223          	sw	a7,68(sp)
800001d8:	05212423          	sw	s2,72(sp)
800001dc:	05312623          	sw	s3,76(sp)
800001e0:	05412823          	sw	s4,80(sp)
800001e4:	05512a23          	sw	s5,84(sp)
800001e8:	05612c23          	sw	s6,88(sp)
800001ec:	05712e23          	sw	s7,92(sp)
800001f0:	07812023          	sw	s8,96(sp)
800001f4:	07912223          	sw	s9,100(sp)
800001f8:	07a12423          	sw	s10,104(sp)
800001fc:	07b12623          	sw	s11,108(sp)
80000200:	07c12823          	sw	t3,112(sp)
80000204:	07d12a23          	sw	t4,116(sp)
80000208:	07e12c23          	sw	t5,120(sp)
8000020c:	07f12e23          	sw	t6,124(sp)
80000210:	34002273          	csrr	tp,mscratch
80000214:	34102373          	csrr	t1,mepc
80000218:	00612023          	sw	t1,0(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:249
    ## save mstatus priv stack
    csrr s0, mstatus
8000021c:	30002473          	csrr	s0,mstatus
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:251
    ## load trap handler args
    csrr a0, mcause
80000220:	34202573          	csrr	a0,mcause
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:252
    csrr a1, mepc
80000224:	341025f3          	csrr	a1,mepc
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:253
    mv   a2, sp
80000228:	00010613          	mv	a2,sp
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:256

    ## setup gp
    load_addrword_abs gp, __global_pointer$
8000022c:	400001b7          	lui	gp,0x40000
80000230:	78018193          	addi	gp,gp,1920 # 40000780 <__global_pointer$>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:258
    ## call trap handler
    load_addrword t0, trap_handler
80000234:	800012b7          	lui	t0,0x80001
80000238:	36a28293          	addi	t0,t0,874 # 8000136a <trap_handler>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:259
    jalr t0
8000023c:	000280e7          	jalr	t0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:262

    ## restore mstatus priv stack
    csrw mstatus, s0
80000240:	30041073          	csrw	mstatus,s0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:264
    ## restore context
    context_restore
80000244:	00012303          	lw	t1,0(sp)
80000248:	34131073          	csrw	mepc,t1
8000024c:	00c12183          	lw	gp,12(sp)
80000250:	01012203          	lw	tp,16(sp)
80000254:	01412283          	lw	t0,20(sp)
80000258:	01812303          	lw	t1,24(sp)
8000025c:	01c12383          	lw	t2,28(sp)
80000260:	02012403          	lw	s0,32(sp)
80000264:	02412483          	lw	s1,36(sp)
80000268:	02812503          	lw	a0,40(sp)
8000026c:	02c12583          	lw	a1,44(sp)
80000270:	03012603          	lw	a2,48(sp)
80000274:	03412683          	lw	a3,52(sp)
80000278:	03812703          	lw	a4,56(sp)
8000027c:	03c12783          	lw	a5,60(sp)
80000280:	04012803          	lw	a6,64(sp)
80000284:	04412883          	lw	a7,68(sp)
80000288:	04812903          	lw	s2,72(sp)
8000028c:	04c12983          	lw	s3,76(sp)
80000290:	05012a03          	lw	s4,80(sp)
80000294:	05412a83          	lw	s5,84(sp)
80000298:	05812b03          	lw	s6,88(sp)
8000029c:	05c12b83          	lw	s7,92(sp)
800002a0:	06012c03          	lw	s8,96(sp)
800002a4:	06412c83          	lw	s9,100(sp)
800002a8:	06812d03          	lw	s10,104(sp)
800002ac:	06c12d83          	lw	s11,108(sp)
800002b0:	07012e03          	lw	t3,112(sp)
800002b4:	07412e83          	lw	t4,116(sp)
800002b8:	07812f03          	lw	t5,120(sp)
800002bc:	07c12f83          	lw	t6,124(sp)
800002c0:	00412083          	lw	ra,4(sp)
800002c4:	00812103          	lw	sp,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/startup_k1921vg015.S:265
    mret
800002c8:	30200073          	mret
	...

Disassembly of section .text:

80000304 <GPIO_PullModeConfig>:
GPIO_PullModeConfig():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:104
{
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GPIO_PIN(Pin));
    assert_param(IS_GPIO_PULL_MODE(PullMode));

    MODIFY_REG(GPIOx->PULLMODE, Pin, (uint32_t)PullMode);
80000304:	511c                	lw	a5,32(a0)
80000306:	fff5c593          	not	a1,a1
8000030a:	8dfd                	and	a1,a1,a5
8000030c:	8dd1                	or	a1,a1,a2
8000030e:	d10c                	sw	a1,32(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:105
}
80000310:	8082                	ret

80000312 <GPIO_AltFuncNumConfig>:
GPIO_AltFuncNumConfig():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:122
    assert_param(IS_GPIO_PIN(Pin));
    assert_param(IS_GPIO_ALT_FUNC_NUM(AltFuncNum));

    uint32_t temp;

    temp = GPIOx->ALTFUNCNUM;
80000312:	03c52803          	lw	a6,60(a0) # 203c <plib015_gpio.c.ff9925b6+0x201>
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:124

    for (uint32_t i = 0; i < 16; i++) {
80000316:	4701                	li	a4,0
80000318:	a011                	j	8000031c <GPIO_AltFuncNumConfig+0xa>
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:124 (discriminator 2)
8000031a:	0705                	addi	a4,a4,1
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:124 (discriminator 1)
8000031c:	47bd                	li	a5,15
8000031e:	02e7e563          	bltu	a5,a4,80000348 <GPIO_AltFuncNumConfig+0x36>
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:125
    	if (Pin & (1 << i))
80000322:	4785                	li	a5,1
80000324:	00e797b3          	sll	a5,a5,a4
80000328:	8fed                	and	a5,a5,a1
8000032a:	dbe5                	beqz	a5,8000031a <GPIO_AltFuncNumConfig+0x8>
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:127
    	{
    		temp &= ~(0x3UL << i * 0x2UL);
8000032c:	00171693          	slli	a3,a4,0x1
80000330:	478d                	li	a5,3
80000332:	00d797b3          	sll	a5,a5,a3
80000336:	fff7c793          	not	a5,a5
8000033a:	0107f833          	and	a6,a5,a6
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:128
    		temp |= (uint32_t)AltFuncNum << i * 0x2UL;
8000033e:	00d616b3          	sll	a3,a2,a3
80000342:	0106e833          	or	a6,a3,a6
80000346:	bfd1                	j	8000031a <GPIO_AltFuncNumConfig+0x8>
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:143
//                temp1 |= (uint32_t)AltFuncNum << (i - 8) * 0x4UL;
//            }
//        }
    }

    GPIOx->ALTFUNCNUM = temp;
80000348:	03052e23          	sw	a6,60(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_gpio.c:144
}
8000034c:	8082                	ret

8000034e <SPI_Init>:
SPI_Init():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:85
  */
void SPI_Init(SPI_TypeDef* SPIx, SPI_Init_TypeDef* InitStruct)
{
    assert_param(IS_SPI_PERIPH(SPIx));

    SPI_SCKDivConfig(SPIx, InitStruct->SCKDiv, InitStruct->SCKDivExtra);
8000034e:	499c                	lw	a5,16(a1)
SPI_SCKDivConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:307
{
    assert_param(IS_SPI_PERIPH(SPIx));
    assert_param(IS_SPI_SCK_DIV(SCKDiv));
    assert_param(IS_SPI_SCK_DIV_EXTRA(SCKDivExtra));

    WRITE_REG(SPIx->CR0_bit.SCR, SCKDiv);
80000350:	00c5c703          	lbu	a4,12(a1)
80000354:	00e500a3          	sb	a4,1(a0)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:308
    WRITE_REG(SPIx->CPSR, SCKDivExtra);
80000358:	c91c                	sw	a5,16(a0)
SPI_Init():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:86
    SPI_DataWidthConfig(SPIx, InitStruct->DataWidth);
8000035a:	4598                	lw	a4,8(a1)
SPI_DataWidthConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:259
    WRITE_REG(SPIx->CR0_bit.DSS, DataWidth);
8000035c:	8b3d                	andi	a4,a4,15
8000035e:	00055783          	lhu	a5,0(a0)
80000362:	9bc1                	andi	a5,a5,-16
80000364:	8fd9                	or	a5,a5,a4
80000366:	00f51023          	sh	a5,0(a0)
SPI_Init():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:87
    SPI_FrameFormatConfig(SPIx, InitStruct->FrameFormat);
8000036a:	41d8                	lw	a4,4(a1)
SPI_FrameFormatConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:287
    WRITE_REG(SPIx->CR0_bit.FRF, FrameFormat);
8000036c:	8b0d                	andi	a4,a4,3
8000036e:	0712                	slli	a4,a4,0x4
80000370:	00055783          	lhu	a5,0(a0)
80000374:	fcf7f793          	andi	a5,a5,-49
80000378:	8fd9                	or	a5,a5,a4
8000037a:	00f51023          	sh	a5,0(a0)
SPI_Init():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:88
    SPI_ModeConfig(SPIx, InitStruct->Mode);
8000037e:	4198                	lw	a4,0(a1)
SPI_ModeConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:273
    WRITE_REG(SPIx->CR1_bit.MS, Mode);
80000380:	8b05                	andi	a4,a4,1
80000382:	070a                	slli	a4,a4,0x2
80000384:	00455783          	lhu	a5,4(a0)
80000388:	9bed                	andi	a5,a5,-5
8000038a:	8fd9                	or	a5,a5,a4
8000038c:	00f51223          	sh	a5,4(a0)
SPI_Init():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:89
}
80000390:	8082                	ret

80000392 <SPI_StructInit>:
SPI_StructInit():
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:99
  *                      которую необходимо проинициализировать.
  * @retval  void
  */
void SPI_StructInit(SPI_Init_TypeDef* InitStruct)
{
    InitStruct->SCKDiv = 0;
80000392:	00052623          	sw	zero,12(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:100
    InitStruct->SCKDivExtra = 2;
80000396:	4789                	li	a5,2
80000398:	c91c                	sw	a5,16(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:101
    InitStruct->DataWidth = SPI_DataWidth_8;
8000039a:	479d                	li	a5,7
8000039c:	c51c                	sw	a5,8(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:102
    InitStruct->FrameFormat = SPI_FrameFormat_SPI;
8000039e:	00052223          	sw	zero,4(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:103
    InitStruct->Mode = SPI_Mode_Master;
800003a2:	00052023          	sw	zero,0(a0)
D:\workspace\NIIET\SX1262_test\Debug/../plib015/src/plib015_spi.c:104
}
800003a6:	8082                	ret

800003a8 <PLIC_SetIrqHandler>:
PLIC_SetIrqHandler():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:53
 * Set PLIC handler function for isr num
 */

void PLIC_SetIrqHandler (uint8_t target, uint32_t isr_num, irqfunc* func)
{
    if(target == Plic_Mach_Target) {
800003a8:	e519                	bnez	a0,800003b6 <PLIC_SetIrqHandler+0xe>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:54
        mach_plic_handler[isr_num] = func;
800003aa:	058a                	slli	a1,a1,0x2
800003ac:	90818793          	addi	a5,gp,-1784 # 40000088 <mach_plic_handler>
800003b0:	97ae                	add	a5,a5,a1
800003b2:	c390                	sw	a2,0(a5)
800003b4:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:56
    } else {
        supervisor_plic_handler[isr_num] = func;
800003b6:	058a                	slli	a1,a1,0x2
800003b8:	88818793          	addi	a5,gp,-1912 # 40000008 <supervisor_plic_handler>
800003bc:	97ae                	add	a5,a5,a1
800003be:	c390                	sw	a2,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:58
    }
}
800003c0:	8082                	ret

800003c2 <PLIC_SetPriority>:
PLIC_SetPriority():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:65
 * Set PLIC irq priority
 */

void PLIC_SetPriority (uint32_t isr_num, uint8_t pri)
{
    PLIC->PRI[isr_num] = pri;
800003c2:	050a                	slli	a0,a0,0x2
800003c4:	0c0007b7          	lui	a5,0xc000
800003c8:	97aa                	add	a5,a5,a0
800003ca:	c38c                	sw	a1,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:66
}
800003cc:	8082                	ret

800003ce <PLIC_IntEnable>:
PLIC_IntEnable():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:87
{
	uint32_t value;

	//read - modify - write operation

    if(target == Plic_Mach_Target) {
800003ce:	e911                	bnez	a0,800003e2 <PLIC_IntEnable+0x14>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:88
    	value  = PLIC->MIEM0;
800003d0:	0c002737          	lui	a4,0xc002
800003d4:	4314                	lw	a3,0(a4)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:89
    	value |= (1<<isr_num);
800003d6:	4785                	li	a5,1
800003d8:	00b797b3          	sll	a5,a5,a1
800003dc:	8fd5                	or	a5,a5,a3
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:90
    	PLIC->MIEM0 = value;
800003de:	c31c                	sw	a5,0(a4)
800003e0:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:92
    } else {
    	value = PLIC->UIEM0;
800003e2:	0c002737          	lui	a4,0xc002
800003e6:	08072683          	lw	a3,128(a4) # c002080 <retarget.c.370f3c8d+0xbfee8ae>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:93
    	value |= (1<<isr_num);
800003ea:	4785                	li	a5,1
800003ec:	00b797b3          	sll	a5,a5,a1
800003f0:	8fd5                	or	a5,a5,a3
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:94
    	PLIC->UIEM0 = value;
800003f2:	08f72023          	sw	a5,128(a4)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:96
    }
}
800003f6:	8082                	ret

800003f8 <PLIC_ClaimIrq>:
PLIC_ClaimIrq():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:125
 * Get current isr number
 */

uint32_t PLIC_ClaimIrq (uint8_t target)
{
	if(target == Plic_Mach_Target) {
800003f8:	e509                	bnez	a0,80000402 <PLIC_ClaimIrq+0xa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:126
		return (uint32_t)(PLIC->MICC);
800003fa:	0c2007b7          	lui	a5,0xc200
800003fe:	43c8                	lw	a0,4(a5)
80000400:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:128
	} else {
		return (uint32_t)(PLIC->UICC);
80000402:	0c2017b7          	lui	a5,0xc201
80000406:	43c8                	lw	a0,4(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:130
	}
}
80000408:	8082                	ret

8000040a <PLIC_ClaimComplete>:
PLIC_ClaimComplete():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:138
 * Set current isr as completed
 */

void PLIC_ClaimComplete (uint8_t target, uint32_t isrnum)
{
	if(target == Plic_Mach_Target) {
8000040a:	e509                	bnez	a0,80000414 <PLIC_ClaimComplete+0xa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:139
		PLIC->MICC = isrnum;
8000040c:	0c2007b7          	lui	a5,0xc200
80000410:	c3cc                	sw	a1,4(a5)
80000412:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:141
	} else {
		PLIC->UICC = isrnum;
80000414:	0c2017b7          	lui	a5,0xc201
80000418:	c3cc                	sw	a1,4(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:143
	}
}
8000041a:	8082                	ret

8000041c <PLIC_SetThreshold>:
PLIC_SetThreshold():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:150
/*
 * Set threshold for irqs
 */

void PLIC_SetThreshold(uint8_t target, uint32_t value) {
	if(target == Plic_Mach_Target) {
8000041c:	e509                	bnez	a0,80000426 <PLIC_SetThreshold+0xa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:151
		PLIC->MTHR = value;
8000041e:	0c2007b7          	lui	a5,0xc200
80000422:	c38c                	sw	a1,0(a5)
80000424:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:153
	} else {
		PLIC->UTHR = value;
80000426:	0c2017b7          	lui	a5,0xc201
8000042a:	c38c                	sw	a1,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:155
	}
}
8000042c:	8082                	ret

8000042e <PLIC_MachHandler>:
PLIC_MachHandler():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:158


void PLIC_MachHandler(void) {
8000042e:	1141                	addi	sp,sp,-16
80000430:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:161

	// handle interrupt
	uint32_t isr_num = PLIC_ClaimIrq(Plic_Mach_Target);
80000432:	4501                	li	a0,0
80000434:	37d1                	jal	800003f8 <PLIC_ClaimIrq>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:163
	// check if handler exist
	if(mach_plic_handler[isr_num] != NULL_IRQ) {
80000436:	00251713          	slli	a4,a0,0x2
8000043a:	90818793          	addi	a5,gp,-1784 # 40000088 <mach_plic_handler>
8000043e:	97ba                	add	a5,a5,a4
80000440:	439c                	lw	a5,0(a5)
80000442:	cb81                	beqz	a5,80000452 <PLIC_MachHandler+0x24>
80000444:	c422                	sw	s0,8(sp)
80000446:	842a                	mv	s0,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:165
		// call isr handler
		mach_plic_handler[isr_num]();
80000448:	9782                	jalr	a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:167
		// set isr completes
		PLIC_ClaimComplete(Plic_Mach_Target, isr_num);
8000044a:	85a2                	mv	a1,s0
8000044c:	4501                	li	a0,0
8000044e:	3f75                	jal	8000040a <PLIC_ClaimComplete>
80000450:	4422                	lw	s0,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:169
	}
}
80000452:	40b2                	lw	ra,12(sp)
80000454:	0141                	addi	sp,sp,16
80000456:	8082                	ret

80000458 <PutChar>:
PutChar():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:41
 * @param  pStr	Storage string.
 * @param  c    Character to write.
 */
signed int PutChar(char *pStr, char c)
{
    *pStr = c;
80000458:	00b50023          	sb	a1,0(a0)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:43
    return 1;
}
8000045c:	4505                	li	a0,1
8000045e:	8082                	ret

80000460 <PutString>:
PutString():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:54
 * @param  pStr     Storage string.
 * @param  pSource  Source string.
 * @return  The size of the written
 */
signed int PutString(char *pStr, const char *pSource)
{
80000460:	87aa                	mv	a5,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:55
    signed int num = 0;
80000462:	4501                	li	a0,0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:57

    while (*pSource != 0) {
80000464:	a031                	j	80000470 <PutString+0x10>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:59

        *pStr++ = *pSource++;
80000466:	0585                	addi	a1,a1,1
80000468:	00e78023          	sb	a4,0(a5) # c201000 <retarget.c.370f3c8d+0xc1ed82e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:60
        num++;
8000046c:	0505                	addi	a0,a0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:59
        *pStr++ = *pSource++;
8000046e:	0785                	addi	a5,a5,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:57
    while (*pSource != 0) {
80000470:	00058703          	lb	a4,0(a1)
80000474:	fb6d                	bnez	a4,80000466 <PutString+0x6>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:64
    }

    return num;
}
80000476:	8082                	ret

80000478 <PutUnsignedInt>:
PutUnsignedInt():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:81
signed int PutUnsignedInt(
    char *pStr,
    char fill,
    signed int width,
    unsigned int value)
{
80000478:	1101                	addi	sp,sp,-32
8000047a:	ce06                	sw	ra,28(sp)
8000047c:	cc22                	sw	s0,24(sp)
8000047e:	ca26                	sw	s1,20(sp)
80000480:	c84a                	sw	s2,16(sp)
80000482:	c64e                	sw	s3,12(sp)
80000484:	c452                	sw	s4,8(sp)
80000486:	842a                	mv	s0,a0
80000488:	89ae                	mv	s3,a1
8000048a:	8a36                	mv	s4,a3
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:85
    signed int num = 0;

    /* Take current digit into account when calculating width */
    width--;
8000048c:	fff60493          	addi	s1,a2,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:88

    /* Recursively write upper digits */
    if ((value / 10) > 0) {
80000490:	47a5                	li	a5,9
80000492:	00d7e463          	bltu	a5,a3,8000049a <PutUnsignedInt+0x22>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:82
    signed int num = 0;
80000496:	4901                	li	s2,0
80000498:	a01d                	j	800004be <PutUnsignedInt+0x46>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:90

        num = PutUnsignedInt(pStr, fill, width, value / 10);
8000049a:	ccccd6b7          	lui	a3,0xccccd
8000049e:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaf81>
800004a2:	02da36b3          	mulhu	a3,s4,a3
800004a6:	828d                	srli	a3,a3,0x3
800004a8:	8626                	mv	a2,s1
800004aa:	37f9                	jal	80000478 <PutUnsignedInt>
800004ac:	892a                	mv	s2,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:91
        pStr += num;
800004ae:	942a                	add	s0,s0,a0
800004b0:	a809                	j	800004c2 <PutUnsignedInt+0x4a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:99
    /* Write filler characters */
    else {

        while (width > 0) {

            PutChar(pStr, fill);
800004b2:	85ce                	mv	a1,s3
800004b4:	8522                	mv	a0,s0
800004b6:	374d                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:100
            pStr++;
800004b8:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:101
            num++;
800004ba:	0905                	addi	s2,s2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:102
            width--;
800004bc:	14fd                	addi	s1,s1,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:97
        while (width > 0) {
800004be:	fe904ae3          	bgtz	s1,800004b2 <PutUnsignedInt+0x3a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:107
        }
    }

    /* Write lower digit */
    num += PutChar(pStr, (value % 10) + '0');
800004c2:	ccccd5b7          	lui	a1,0xccccd
800004c6:	ccd58593          	addi	a1,a1,-819 # cccccccd <__data_source_start+0x4cccaf81>
800004ca:	02ba35b3          	mulhu	a1,s4,a1
800004ce:	818d                	srli	a1,a1,0x3
800004d0:	00259793          	slli	a5,a1,0x2
800004d4:	97ae                	add	a5,a5,a1
800004d6:	0786                	slli	a5,a5,0x1
800004d8:	40fa05b3          	sub	a1,s4,a5
800004dc:	03058593          	addi	a1,a1,48
800004e0:	05e2                	slli	a1,a1,0x18
800004e2:	85e1                	srai	a1,a1,0x18
800004e4:	8522                	mv	a0,s0
800004e6:	3f8d                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:110

    return num;
}
800004e8:	954a                	add	a0,a0,s2
800004ea:	40f2                	lw	ra,28(sp)
800004ec:	4462                	lw	s0,24(sp)
800004ee:	44d2                	lw	s1,20(sp)
800004f0:	4942                	lw	s2,16(sp)
800004f2:	49b2                	lw	s3,12(sp)
800004f4:	4a22                	lw	s4,8(sp)
800004f6:	6105                	addi	sp,sp,32
800004f8:	8082                	ret

800004fa <PutSignedInt>:
PutSignedInt():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:127
signed int PutSignedInt(
    char *pStr,
    char fill,
    signed int width,
    signed int value)
{
800004fa:	1101                	addi	sp,sp,-32
800004fc:	ce06                	sw	ra,28(sp)
800004fe:	cc22                	sw	s0,24(sp)
80000500:	ca26                	sw	s1,20(sp)
80000502:	c84a                	sw	s2,16(sp)
80000504:	c64e                	sw	s3,12(sp)
80000506:	c452                	sw	s4,8(sp)
80000508:	c256                	sw	s5,4(sp)
8000050a:	842a                	mv	s0,a0
8000050c:	89ae                	mv	s3,a1
8000050e:	8a36                	mv	s4,a3
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:132
    signed int num = 0;
    unsigned int absolute;

    /* Compute absolute value */
    if (value < 0) {
80000510:	0606c463          	bltz	a3,80000578 <PutSignedInt+0x7e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:138

        absolute = -value;
    }
    else {

        absolute = value;
80000514:	8ab6                	mv	s5,a3
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:142
    }

    /* Take current digit into account when calculating width */
    width--;
80000516:	fff60493          	addi	s1,a2,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:145

    /* Recursively write upper digits */
    if ((absolute / 10) > 0) {
8000051a:	47a5                	li	a5,9
8000051c:	0957f063          	bgeu	a5,s5,8000059c <PutSignedInt+0xa2>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:147

        if (value < 0) {
80000520:	040a4f63          	bltz	s4,8000057e <PutSignedInt+0x84>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:153

            num = PutSignedInt(pStr, fill, width, -(absolute / 10));
        }
        else {

            num = PutSignedInt(pStr, fill, width, absolute / 10);
80000524:	ccccd6b7          	lui	a3,0xccccd
80000528:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaf81>
8000052c:	02dab6b3          	mulhu	a3,s5,a3
80000530:	828d                	srli	a3,a3,0x3
80000532:	8626                	mv	a2,s1
80000534:	85ce                	mv	a1,s3
80000536:	8522                	mv	a0,s0
80000538:	37c9                	jal	800004fa <PutSignedInt>
8000053a:	892a                	mv	s2,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:155
        }
        pStr += num;
8000053c:	944a                	add	s0,s0,s2
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:183
            pStr++;
        }
    }

    /* Write lower digit */
    num += PutChar(pStr, (absolute % 10) + '0');
8000053e:	ccccd5b7          	lui	a1,0xccccd
80000542:	ccd58593          	addi	a1,a1,-819 # cccccccd <__data_source_start+0x4cccaf81>
80000546:	02bab5b3          	mulhu	a1,s5,a1
8000054a:	818d                	srli	a1,a1,0x3
8000054c:	00259793          	slli	a5,a1,0x2
80000550:	97ae                	add	a5,a5,a1
80000552:	0786                	slli	a5,a5,0x1
80000554:	40fa85b3          	sub	a1,s5,a5
80000558:	03058593          	addi	a1,a1,48
8000055c:	05e2                	slli	a1,a1,0x18
8000055e:	85e1                	srai	a1,a1,0x18
80000560:	8522                	mv	a0,s0
80000562:	3ddd                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:186

    return num;
}
80000564:	954a                	add	a0,a0,s2
80000566:	40f2                	lw	ra,28(sp)
80000568:	4462                	lw	s0,24(sp)
8000056a:	44d2                	lw	s1,20(sp)
8000056c:	4942                	lw	s2,16(sp)
8000056e:	49b2                	lw	s3,12(sp)
80000570:	4a22                	lw	s4,8(sp)
80000572:	4a92                	lw	s5,4(sp)
80000574:	6105                	addi	sp,sp,32
80000576:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:134
        absolute = -value;
80000578:	40d00ab3          	neg	s5,a3
8000057c:	bf69                	j	80000516 <PutSignedInt+0x1c>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:149
            num = PutSignedInt(pStr, fill, width, -(absolute / 10));
8000057e:	ccccd6b7          	lui	a3,0xccccd
80000582:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaf81>
80000586:	02dab6b3          	mulhu	a3,s5,a3
8000058a:	828d                	srli	a3,a3,0x3
8000058c:	40d006b3          	neg	a3,a3
80000590:	8626                	mv	a2,s1
80000592:	85ce                	mv	a1,s3
80000594:	8522                	mv	a0,s0
80000596:	3795                	jal	800004fa <PutSignedInt>
80000598:	892a                	mv	s2,a0
8000059a:	b74d                	j	8000053c <PutSignedInt+0x42>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:160
        if (value < 0) {
8000059c:	000a4463          	bltz	s4,800005a4 <PutSignedInt+0xaa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:127
{
800005a0:	4901                	li	s2,0
800005a2:	a811                	j	800005b6 <PutSignedInt+0xbc>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:162
            width--;
800005a4:	ffe60493          	addi	s1,a2,-2
800005a8:	bfe5                	j	800005a0 <PutSignedInt+0xa6>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:168
            PutChar(pStr, fill);
800005aa:	85ce                	mv	a1,s3
800005ac:	8522                	mv	a0,s0
800005ae:	356d                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:169
            pStr++;
800005b0:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:170
            num++;
800005b2:	0905                	addi	s2,s2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:171
            width--;
800005b4:	14fd                	addi	s1,s1,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:166
        while (width > 0) {
800005b6:	fe904ae3          	bgtz	s1,800005aa <PutSignedInt+0xb0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:175
        if (value < 0) {
800005ba:	f80a52e3          	bgez	s4,8000053e <PutSignedInt+0x44>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:177
            num += PutChar(pStr, '-');
800005be:	02d00593          	li	a1,45
800005c2:	8522                	mv	a0,s0
800005c4:	3d51                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:177 (discriminator 1)
800005c6:	992a                	add	s2,s2,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:178
            pStr++;
800005c8:	0405                	addi	s0,s0,1
800005ca:	bf95                	j	8000053e <PutSignedInt+0x44>

800005cc <PutHexa>:
PutHexa():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:207
    char *pStr,
    char fill,
    signed int width,
    unsigned char maj,
    unsigned int value)
{
800005cc:	1101                	addi	sp,sp,-32
800005ce:	ce06                	sw	ra,28(sp)
800005d0:	cc22                	sw	s0,24(sp)
800005d2:	ca26                	sw	s1,20(sp)
800005d4:	c84a                	sw	s2,16(sp)
800005d6:	c64e                	sw	s3,12(sp)
800005d8:	c452                	sw	s4,8(sp)
800005da:	c256                	sw	s5,4(sp)
800005dc:	842a                	mv	s0,a0
800005de:	89ae                	mv	s3,a1
800005e0:	8ab6                	mv	s5,a3
800005e2:	8a3a                	mv	s4,a4
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:211
    signed int num = 0;

    /* Decrement width */
    width--;
800005e4:	fff60493          	addi	s1,a2,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:214

    /* Recursively output upper digits */
    if ((value >> 4) > 0) {
800005e8:	8311                	srli	a4,a4,0x4
800005ea:	e319                	bnez	a4,800005f0 <PutHexa+0x24>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:208
    signed int num = 0;
800005ec:	4901                	li	s2,0
800005ee:	a821                	j	80000606 <PutHexa+0x3a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:216

        num += PutHexa(pStr, fill, width, maj, value >> 4);
800005f0:	8626                	mv	a2,s1
800005f2:	3fe9                	jal	800005cc <PutHexa>
800005f4:	892a                	mv	s2,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:217
        pStr += num;
800005f6:	942a                	add	s0,s0,a0
800005f8:	a809                	j	8000060a <PutHexa+0x3e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:224
    /* Write filler chars */
    else {

        while (width > 0) {

            PutChar(pStr, fill);
800005fa:	85ce                	mv	a1,s3
800005fc:	8522                	mv	a0,s0
800005fe:	3da9                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:225
            pStr++;
80000600:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:226
            num++;
80000602:	0905                	addi	s2,s2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:227
            width--;
80000604:	14fd                	addi	s1,s1,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:222
        while (width > 0) {
80000606:	fe904ae3          	bgtz	s1,800005fa <PutHexa+0x2e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:232
        }
    }

    /* Write current digit */
    if ((value & 0xF) < 10) {
8000060a:	00fa7793          	andi	a5,s4,15
8000060e:	4725                	li	a4,9
80000610:	02f77563          	bgeu	a4,a5,8000063a <PutHexa+0x6e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:236

        PutChar(pStr, (value & 0xF) + '0');
    }
    else if (maj) {
80000614:	020a8863          	beqz	s5,80000644 <PutHexa+0x78>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:238

        PutChar(pStr, (value & 0xF) - 10 + 'A');
80000618:	00fa7593          	andi	a1,s4,15
8000061c:	03758593          	addi	a1,a1,55
80000620:	8522                	mv	a0,s0
80000622:	3d1d                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:247
        PutChar(pStr, (value & 0xF) - 10 + 'a');
    }
    num++;

    return num;
}
80000624:	00190513          	addi	a0,s2,1
80000628:	40f2                	lw	ra,28(sp)
8000062a:	4462                	lw	s0,24(sp)
8000062c:	44d2                	lw	s1,20(sp)
8000062e:	4942                	lw	s2,16(sp)
80000630:	49b2                	lw	s3,12(sp)
80000632:	4a22                	lw	s4,8(sp)
80000634:	4a92                	lw	s5,4(sp)
80000636:	6105                	addi	sp,sp,32
80000638:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:234
        PutChar(pStr, (value & 0xF) + '0');
8000063a:	03078593          	addi	a1,a5,48
8000063e:	8522                	mv	a0,s0
80000640:	3d21                	jal	80000458 <PutChar>
80000642:	b7cd                	j	80000624 <PutHexa+0x58>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:242
        PutChar(pStr, (value & 0xF) - 10 + 'a');
80000644:	00fa7593          	andi	a1,s4,15
80000648:	05758593          	addi	a1,a1,87
8000064c:	05e2                	slli	a1,a1,0x18
8000064e:	85e1                	srai	a1,a1,0x18
80000650:	8522                	mv	a0,s0
80000652:	3519                	jal	80000458 <PutChar>
80000654:	bfc1                	j	80000624 <PutHexa+0x58>

80000656 <vsnprintf>:
vsnprintf():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:266
 * @param ap      Argument list.
 *
 * @return  The number of characters written.
 */
signed int vsnprintf(char *pStr, size_t length, const char *pFormat, va_list ap)
{
80000656:	7179                	addi	sp,sp,-48
80000658:	d606                	sw	ra,44(sp)
8000065a:	d226                	sw	s1,36(sp)
8000065c:	d04a                	sw	s2,32(sp)
8000065e:	ce4e                	sw	s3,28(sp)
80000660:	892a                	mv	s2,a0
80000662:	89ae                	mv	s3,a1
80000664:	c636                	sw	a3,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:273
    unsigned char width;
    signed int    num = 0;
    signed int    size = 0;

    /* Clear the string */
    if (pStr) {
80000666:	c119                	beqz	a0,8000066c <vsnprintf+0x16>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:275

        *pStr = 0;
80000668:	00050023          	sb	zero,0(a0)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:290
            size++;
        }
        /* Escaped '%' */
        else if (*(pFormat+1) == '%') {

            *pStr++ = '%';
8000066c:	4481                	li	s1,0
8000066e:	a821                	j	80000686 <vsnprintf+0x30>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:288
        else if (*(pFormat+1) == '%') {
80000670:	00160583          	lb	a1,1(a2)
80000674:	02500793          	li	a5,37
80000678:	02f59763          	bne	a1,a5,800006a6 <vsnprintf+0x50>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:290
            *pStr++ = '%';
8000067c:	00f90023          	sb	a5,0(s2)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:291
            pFormat += 2;
80000680:	0609                	addi	a2,a2,2
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:292
            size++;
80000682:	0485                	addi	s1,s1,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:290
            *pStr++ = '%';
80000684:	0905                	addi	s2,s2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:279
    while (*pFormat != 0 && size < length) {
80000686:	00060783          	lb	a5,0(a2)
8000068a:	10078763          	beqz	a5,80000798 <vsnprintf+0x142>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:279 (discriminator 1)
8000068e:	1134f563          	bgeu	s1,s3,80000798 <vsnprintf+0x142>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:282
        if (*pFormat != '%') {
80000692:	02500713          	li	a4,37
80000696:	fce78de3          	beq	a5,a4,80000670 <vsnprintf+0x1a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:284
            *pStr++ = *pFormat++;
8000069a:	0605                	addi	a2,a2,1
8000069c:	00f90023          	sb	a5,0(s2)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:285
            size++;
800006a0:	0485                	addi	s1,s1,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:284
            *pStr++ = *pFormat++;
800006a2:	0905                	addi	s2,s2,1
800006a4:	b7cd                	j	80000686 <vsnprintf+0x30>
800006a6:	d422                	sw	s0,40(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:299
        /* Token delimiter */
        else {

            fill = ' ';
            width = 0;
            pFormat++;
800006a8:	00160413          	addi	s0,a2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:302

            /* Parse filler */
            if (*pFormat == '0') {
800006ac:	03000793          	li	a5,48
800006b0:	00f58663          	beq	a1,a5,800006bc <vsnprintf+0x66>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:297
            fill = ' ';
800006b4:	02000593          	li	a1,32
800006b8:	4601                	li	a2,0
800006ba:	a005                	j	800006da <vsnprintf+0x84>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:305

                fill = '0';
                pFormat++;
800006bc:	00260413          	addi	s0,a2,2
800006c0:	bfe5                	j	800006b8 <vsnprintf+0x62>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:311
            }

            /* Parse width */
            while ((*pFormat >= '0') && (*pFormat <= '9')) {

                width = (width*10) + *pFormat-'0';
800006c2:	00261713          	slli	a4,a2,0x2
800006c6:	9732                	add	a4,a4,a2
800006c8:	0706                	slli	a4,a4,0x1
800006ca:	97ba                	add	a5,a5,a4
800006cc:	0ff7f793          	zext.b	a5,a5
800006d0:	fd078793          	addi	a5,a5,-48
800006d4:	0ff7f613          	zext.b	a2,a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:312
                pFormat++;
800006d8:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:309
            while ((*pFormat >= '0') && (*pFormat <= '9')) {
800006da:	00040683          	lb	a3,0(s0)
800006de:	0ff6f793          	zext.b	a5,a3
800006e2:	fd078713          	addi	a4,a5,-48
800006e6:	0ff77713          	zext.b	a4,a4
800006ea:	4525                	li	a0,9
800006ec:	fce57be3          	bgeu	a0,a4,800006c2 <vsnprintf+0x6c>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:316
            }

            /* Check if there is enough space */
            if (size + width > length) {
800006f0:	009607b3          	add	a5,a2,s1
800006f4:	00f9f963          	bgeu	s3,a5,80000706 <vsnprintf+0xb0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:318

                width = length - size;
800006f8:	0ff9f613          	zext.b	a2,s3
800006fc:	0ff4f793          	zext.b	a5,s1
80000700:	8e1d                	sub	a2,a2,a5
80000702:	0ff67613          	zext.b	a2,a2
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:322
            }

            /* Parse type */
            switch (*pFormat) {
80000706:	fa868693          	addi	a3,a3,-88
8000070a:	0ff6f713          	zext.b	a4,a3
8000070e:	02000793          	li	a5,32
80000712:	08e7ec63          	bltu	a5,a4,800007aa <vsnprintf+0x154>
80000716:	00271693          	slli	a3,a4,0x2
8000071a:	800027b7          	lui	a5,0x80002
8000071e:	b2878793          	addi	a5,a5,-1240 # 80001b28 <_tdata_start+0x100>
80000722:	96be                	add	a3,a3,a5
80000724:	429c                	lw	a5,0(a3)
80000726:	8782                	jr	a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:324
            case 'd':
            case 'i': num = PutSignedInt(pStr, fill, width, va_arg(ap, signed int)); break;
80000728:	47b2                	lw	a5,12(sp)
8000072a:	00478713          	addi	a4,a5,4
8000072e:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:324 (discriminator 1)
80000730:	4394                	lw	a3,0(a5)
80000732:	854a                	mv	a0,s2
80000734:	33d9                	jal	800004fa <PutSignedInt>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:334
            case 'c': num = PutChar(pStr, va_arg(ap, unsigned int)); break;
            default:
                return EOF;
            }

            pFormat++;
80000736:	00140613          	addi	a2,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:335
            pStr += num;
8000073a:	992a                	add	s2,s2,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:336
            size += num;
8000073c:	94aa                	add	s1,s1,a0
8000073e:	5422                	lw	s0,40(sp)
80000740:	b799                	j	80000686 <vsnprintf+0x30>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:325
            case 'u': num = PutUnsignedInt(pStr, fill, width, va_arg(ap, unsigned int)); break;
80000742:	47b2                	lw	a5,12(sp)
80000744:	00478713          	addi	a4,a5,4
80000748:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:325 (discriminator 1)
8000074a:	4394                	lw	a3,0(a5)
8000074c:	854a                	mv	a0,s2
8000074e:	332d                	jal	80000478 <PutUnsignedInt>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:325
80000750:	b7dd                	j	80000736 <vsnprintf+0xe0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:326
            case 'x': num = PutHexa(pStr, fill, width, 0, va_arg(ap, unsigned int)); break;
80000752:	47b2                	lw	a5,12(sp)
80000754:	00478713          	addi	a4,a5,4
80000758:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:326 (discriminator 1)
8000075a:	4398                	lw	a4,0(a5)
8000075c:	4681                	li	a3,0
8000075e:	854a                	mv	a0,s2
80000760:	35b5                	jal	800005cc <PutHexa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:326
80000762:	bfd1                	j	80000736 <vsnprintf+0xe0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:327
            case 'X': num = PutHexa(pStr, fill, width, 1, va_arg(ap, unsigned int)); break;
80000764:	47b2                	lw	a5,12(sp)
80000766:	00478713          	addi	a4,a5,4
8000076a:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:327 (discriminator 1)
8000076c:	4398                	lw	a4,0(a5)
8000076e:	4685                	li	a3,1
80000770:	854a                	mv	a0,s2
80000772:	3da9                	jal	800005cc <PutHexa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:327
80000774:	b7c9                	j	80000736 <vsnprintf+0xe0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:328
            case 's': num = PutString(pStr, va_arg(ap, char *)); break;
80000776:	47b2                	lw	a5,12(sp)
80000778:	00478713          	addi	a4,a5,4
8000077c:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:328 (discriminator 1)
8000077e:	438c                	lw	a1,0(a5)
80000780:	854a                	mv	a0,s2
80000782:	39f9                	jal	80000460 <PutString>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:328
80000784:	bf4d                	j	80000736 <vsnprintf+0xe0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:329
            case 'c': num = PutChar(pStr, va_arg(ap, unsigned int)); break;
80000786:	47b2                	lw	a5,12(sp)
80000788:	00478713          	addi	a4,a5,4
8000078c:	c63a                	sw	a4,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:329 (discriminator 1)
8000078e:	00078583          	lb	a1,0(a5)
80000792:	854a                	mv	a0,s2
80000794:	31d1                	jal	80000458 <PutChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:329
80000796:	b745                	j	80000736 <vsnprintf+0xe0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:341
        }
    }

    /* NULL-terminated (final \0 is not counted) */
    if (size < length) {
80000798:	0134f563          	bgeu	s1,s3,800007a2 <vsnprintf+0x14c>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:343

        *pStr = 0;
8000079c:	00090023          	sb	zero,0(s2)
800007a0:	a039                	j	800007ae <vsnprintf+0x158>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:347
    }
    else {

        *(--pStr) = 0;
800007a2:	fe090fa3          	sb	zero,-1(s2)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:348
        size--;
800007a6:	14fd                	addi	s1,s1,-1
800007a8:	a019                	j	800007ae <vsnprintf+0x158>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:322
            switch (*pFormat) {
800007aa:	54fd                	li	s1,-1
800007ac:	5422                	lw	s0,40(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:352
    }

    return size;
}
800007ae:	8526                	mv	a0,s1
800007b0:	50b2                	lw	ra,44(sp)
800007b2:	5492                	lw	s1,36(sp)
800007b4:	5902                	lw	s2,32(sp)
800007b6:	49f2                	lw	s3,28(sp)
800007b8:	6145                	addi	sp,sp,48
800007ba:	8082                	ret

800007bc <vsprintf>:
vsprintf():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:391
 * @param ap       Argument list.
 *
 * @return  The number of characters written.
 */
signed int vsprintf(char *pString, const char *pFormat, va_list ap)
{
800007bc:	1141                	addi	sp,sp,-16
800007be:	c606                	sw	ra,12(sp)
800007c0:	86b2                	mv	a3,a2
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:392
   return vsnprintf(pString, MAX_STRING_SIZE, pFormat, ap);
800007c2:	862e                	mv	a2,a1
800007c4:	06400593          	li	a1,100
800007c8:	3579                	jal	80000656 <vsnprintf>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:393
}
800007ca:	40b2                	lw	ra,12(sp)
800007cc:	0141                	addi	sp,sp,16
800007ce:	8082                	ret

800007d0 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:34
uint32_t SystemPll1Clock; // System PLL1Clock Frequency
uint32_t USBClock; 		  // USB Clock Frequency (USB PLL Clock)

//-- Functions -----------------------------------------------------------------
void SystemCoreClockUpdate(void)
{
800007d0:	1101                	addi	sp,sp,-32
800007d2:	ce06                	sw	ra,28(sp)
800007d4:	ca26                	sw	s1,20(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:35
	SystemCoreClock = 0; 	// При ошибке вычислений значения переменных будут равны нулю
800007d6:	ac01ac23          	sw	zero,-1320(gp) # 40000258 <SystemCoreClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:36
	SystemPll0Clock = 0; 
800007da:	ac01aa23          	sw	zero,-1324(gp) # 40000254 <SystemPll0Clock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:37
	SystemPll1Clock = 0; 
800007de:	ac01a823          	sw	zero,-1328(gp) # 40000250 <SystemPll1Clock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:38
	USBClock = 0; 		 
800007e2:	ac01a623          	sw	zero,-1332(gp) # 4000024c <USBClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:40
				
	uint8_t refdiv = RCU->PLLSYSCFG0_bit.REFDIV;
800007e6:	3000e7b7          	lui	a5,0x3000e
800007ea:	4bb8                	lw	a4,80(a5)
800007ec:	831d                	srli	a4,a4,0x7
800007ee:	03f77593          	andi	a1,a4,63
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:41
	uint8_t pd0a = RCU->PLLSYSCFG0_bit.PD0A + 1;
800007f2:	4bb0                	lw	a2,80(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:42
	uint8_t pd0b = RCU->PLLSYSCFG0_bit.PD0B + 1;
800007f4:	4bb8                	lw	a4,80(a5)
800007f6:	8341                	srli	a4,a4,0x10
800007f8:	03f77713          	andi	a4,a4,63
800007fc:	00170693          	addi	a3,a4,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:43
	uint8_t pd1a = RCU->PLLSYSCFG0_bit.PD1A + 1;
80000800:	4bb8                	lw	a4,80(a5)
80000802:	8359                	srli	a4,a4,0x16
80000804:	8b1d                	andi	a4,a4,7
80000806:	00170493          	addi	s1,a4,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:44
	uint8_t pd1b = RCU->PLLSYSCFG0_bit.PD1B + 1;
8000080a:	4bb8                	lw	a4,80(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:46

	if (RCU->PLLSYSCFG0_bit.PLLEN)		// Если PLL включен
8000080c:	4bbc                	lw	a5,80(a5)
8000080e:	8b85                	andi	a5,a5,1
80000810:	cfd9                	beqz	a5,800008ae <SystemCoreClockUpdate+0xde>
80000812:	cc22                	sw	s0,24(sp)
80000814:	8235                	srli	a2,a2,0xd
80000816:	8a1d                	andi	a2,a2,7
80000818:	0605                	addi	a2,a2,1
8000081a:	8365                	srli	a4,a4,0x19
8000081c:	03f77713          	andi	a4,a4,63
80000820:	00170413          	addi	s0,a4,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:48
	{	
		if (RCU->PLLSYSCFG0_bit.DSMEN)	// Если дробный делитель включен
80000824:	3000e7b7          	lui	a5,0x3000e
80000828:	4bbc                	lw	a5,80(a5)
8000082a:	8391                	srli	a5,a5,0x4
8000082c:	8b85                	andi	a5,a5,1
8000082e:	14078963          	beqz	a5,80000980 <SystemCoreClockUpdate+0x1b0>
80000832:	c84a                	sw	s2,16(sp)
80000834:	c64e                	sw	s3,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:50
		{
			uint64_t fbdiv = RCU->PLLSYSCFG2_bit.FBDIV << 24;
80000836:	3000e537          	lui	a0,0x3000e
8000083a:	4d38                	lw	a4,88(a0)
8000083c:	6785                	lui	a5,0x1
8000083e:	17fd                	addi	a5,a5,-1 # fff <STACK_SIZE+0x7ff>
80000840:	8f7d                	and	a4,a4,a5
80000842:	0762                	slli	a4,a4,0x18
80000844:	41f75813          	srai	a6,a4,0x1f
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:51
			uint32_t frac = RCU->PLLSYSCFG1_bit.FRAC;
80000848:	497c                	lw	a5,84(a0)
8000084a:	01000537          	lui	a0,0x1000
8000084e:	157d                	addi	a0,a0,-1 # ffffff <retarget.c.370f3c8d+0xfec82d>
80000850:	8fe9                	and	a5,a5,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:52
			SystemPll0Clock = (((HSECLK_VAL / refdiv) * (fbdiv + frac)) >> 24) / (pd0a * pd0b);
80000852:	00b72537          	lui	a0,0xb72
80000856:	b0050513          	addi	a0,a0,-1280 # b71b00 <retarget.c.370f3c8d+0xb5e32e>
8000085a:	02b545b3          	div	a1,a0,a1
8000085e:	973e                	add	a4,a4,a5
80000860:	00f73933          	sltu	s2,a4,a5
80000864:	9942                	add	s2,s2,a6
80000866:	02b90933          	mul	s2,s2,a1
8000086a:	02e589b3          	mul	s3,a1,a4
8000086e:	02e5b5b3          	mulhu	a1,a1,a4
80000872:	992e                	add	s2,s2,a1
80000874:	00891793          	slli	a5,s2,0x8
80000878:	0189d993          	srli	s3,s3,0x18
8000087c:	0137e9b3          	or	s3,a5,s3
80000880:	01895913          	srli	s2,s2,0x18
80000884:	02d60633          	mul	a2,a2,a3
80000888:	4681                	li	a3,0
8000088a:	854e                	mv	a0,s3
8000088c:	85ca                	mv	a1,s2
8000088e:	5f3000ef          	jal	80001680 <__udivdi3>
80000892:	aca1aa23          	sw	a0,-1324(gp) # 40000254 <SystemPll0Clock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:53
			SystemPll1Clock = (((HSECLK_VAL / refdiv) * (fbdiv + frac)) >> 24) / (pd1a * pd1b);
80000896:	02848633          	mul	a2,s1,s0
8000089a:	4681                	li	a3,0
8000089c:	854e                	mv	a0,s3
8000089e:	85ca                	mv	a1,s2
800008a0:	5e1000ef          	jal	80001680 <__udivdi3>
800008a4:	aca1a823          	sw	a0,-1328(gp) # 40000250 <SystemPll1Clock>
800008a8:	4462                	lw	s0,24(sp)
800008aa:	4942                	lw	s2,16(sp)
800008ac:	49b2                	lw	s3,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:61
			SystemPll0Clock = (HSECLK_VAL * fbdiv) / (refdiv * pd0a * pd0b);
			SystemPll1Clock = (HSECLK_VAL * fbdiv) / (refdiv * pd1a * pd1b);
		}
	}

	switch (RCU->CLKSTAT_bit.SRC) {		// Определение источника тактирования ядра
800008ae:	3000e7b7          	lui	a5,0x3000e
800008b2:	5fdc                	lw	a5,60(a5)
800008b4:	8b8d                	andi	a5,a5,3
800008b6:	4709                	li	a4,2
800008b8:	10e78f63          	beq	a5,a4,800009d6 <SystemCoreClockUpdate+0x206>
800008bc:	470d                	li	a4,3
800008be:	10e78863          	beq	a5,a4,800009ce <SystemCoreClockUpdate+0x1fe>
800008c2:	4705                	li	a4,1
800008c4:	0ee78e63          	beq	a5,a4,800009c0 <SystemCoreClockUpdate+0x1f0>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:63
		case RCU_CLKSTAT_SRC_HSICLK:
			SystemCoreClock = HSICLK_VAL;
800008c8:	000f47b7          	lui	a5,0xf4
800008cc:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
800008d0:	acf1ac23          	sw	a5,-1320(gp) # 40000258 <SystemCoreClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:76
		case RCU_CLKSTAT_SRC_SYSPLL0CLK:
			SystemCoreClock = SystemPll0Clock;
			break;	
    }
		
	if (RCU->RSTDISAHB_bit.USBEN)	// Если USB используется
800008d4:	3000e7b7          	lui	a5,0x3000e
800008d8:	4b9c                	lw	a5,16(a5)
800008da:	8385                	srli	a5,a5,0x1
800008dc:	8b85                	andi	a5,a5,1
800008de:	12078d63          	beqz	a5,80000a18 <SystemCoreClockUpdate+0x248>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:78
	{
		if (USB->PLLUSBCFG3_bit.USBCLKSEL == USB_PLLUSBCFG3_USBCLKSEL_PLLUSBClk)
800008e2:	200117b7          	lui	a5,0x20011
800008e6:	80c7a783          	lw	a5,-2036(a5) # 2001080c <retarget.c.370f3c8d+0x1fffd03a>
800008ea:	83e1                	srli	a5,a5,0x18
800008ec:	8b85                	andi	a5,a5,1
800008ee:	12079163          	bnez	a5,80000a10 <SystemCoreClockUpdate+0x240>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:80
		{	
			refdiv = USB->PLLUSBCFG0_bit.REFDIV;
800008f2:	200116b7          	lui	a3,0x20011
800008f6:	8006a703          	lw	a4,-2048(a3) # 20010800 <retarget.c.370f3c8d+0x1fffd02e>
800008fa:	831d                	srli	a4,a4,0x7
800008fc:	03f77713          	andi	a4,a4,63
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:81
			pd0a = USB->PLLUSBCFG0_bit.PD0A + 1;
80000900:	8006a603          	lw	a2,-2048(a3)
80000904:	8235                	srli	a2,a2,0xd
80000906:	8a1d                	andi	a2,a2,7
80000908:	0605                	addi	a2,a2,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:82
			pd0b = USB->PLLUSBCFG0_bit.PD0B + 1;
8000090a:	8006a783          	lw	a5,-2048(a3)
8000090e:	83c1                	srli	a5,a5,0x10
80000910:	03f7f793          	andi	a5,a5,63
80000914:	0785                	addi	a5,a5,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:84

			if (USB->PLLUSBCFG0_bit.DSMEN)		// Если дробный делитель включен
80000916:	8006a683          	lw	a3,-2048(a3)
8000091a:	8291                	srli	a3,a3,0x4
8000091c:	8a85                	andi	a3,a3,1
8000091e:	c2e9                	beqz	a3,800009e0 <SystemCoreClockUpdate+0x210>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:86
			{
				uint64_t fbdiv = USB->PLLUSBCFG2_bit.FBDIV << 24;
80000920:	20011537          	lui	a0,0x20011
80000924:	80852583          	lw	a1,-2040(a0) # 20010808 <retarget.c.370f3c8d+0x1fffd036>
80000928:	6685                	lui	a3,0x1
8000092a:	16fd                	addi	a3,a3,-1 # fff <STACK_SIZE+0x7ff>
8000092c:	8df5                	and	a1,a1,a3
8000092e:	05e2                	slli	a1,a1,0x18
80000930:	41f5d893          	srai	a7,a1,0x1f
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:87
				uint32_t frac = USB->PLLUSBCFG1_bit.FRAC;
80000934:	80452683          	lw	a3,-2044(a0)
80000938:	01000537          	lui	a0,0x1000
8000093c:	157d                	addi	a0,a0,-1 # ffffff <retarget.c.370f3c8d+0xfec82d>
8000093e:	8ee9                	and	a3,a3,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:89

				USBClock = (((HSECLK_VAL / refdiv) * (fbdiv + frac)) >> 24) / (pd0a * pd0b);
80000940:	00b72837          	lui	a6,0xb72
80000944:	b0080813          	addi	a6,a6,-1280 # b71b00 <retarget.c.370f3c8d+0xb5e32e>
80000948:	02e84833          	div	a6,a6,a4
8000094c:	00b68733          	add	a4,a3,a1
80000950:	00d735b3          	sltu	a1,a4,a3
80000954:	95c6                	add	a1,a1,a7
80000956:	030585b3          	mul	a1,a1,a6
8000095a:	02e806b3          	mul	a3,a6,a4
8000095e:	02e83833          	mulhu	a6,a6,a4
80000962:	95c2                	add	a1,a1,a6
80000964:	00859513          	slli	a0,a1,0x8
80000968:	0186d713          	srli	a4,a3,0x18
8000096c:	02f60633          	mul	a2,a2,a5
80000970:	4681                	li	a3,0
80000972:	8d59                	or	a0,a0,a4
80000974:	81e1                	srli	a1,a1,0x18
80000976:	50b000ef          	jal	80001680 <__udivdi3>
8000097a:	aca1a623          	sw	a0,-1332(gp) # 4000024c <USBClock>
8000097e:	a869                	j	80000a18 <SystemCoreClockUpdate+0x248>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:55
			uint32_t fbdiv = RCU->PLLSYSCFG2_bit.FBDIV;			
80000980:	3000e7b7          	lui	a5,0x3000e
80000984:	4fbc                	lw	a5,88(a5)
80000986:	6705                	lui	a4,0x1
80000988:	177d                	addi	a4,a4,-1 # fff <STACK_SIZE+0x7ff>
8000098a:	8ff9                	and	a5,a5,a4
8000098c:	07c2                	slli	a5,a5,0x10
8000098e:	83c1                	srli	a5,a5,0x10
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:56
			SystemPll0Clock = (HSECLK_VAL * fbdiv) / (refdiv * pd0a * pd0b);
80000990:	00b72737          	lui	a4,0xb72
80000994:	b0070713          	addi	a4,a4,-1280 # b71b00 <retarget.c.370f3c8d+0xb5e32e>
80000998:	02e787b3          	mul	a5,a5,a4
8000099c:	02b60633          	mul	a2,a2,a1
800009a0:	02c68733          	mul	a4,a3,a2
800009a4:	02e7d733          	divu	a4,a5,a4
800009a8:	ace1aa23          	sw	a4,-1324(gp) # 40000254 <SystemPll0Clock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:57
			SystemPll1Clock = (HSECLK_VAL * fbdiv) / (refdiv * pd1a * pd1b);
800009ac:	02b48733          	mul	a4,s1,a1
800009b0:	02e40733          	mul	a4,s0,a4
800009b4:	02e7d7b3          	divu	a5,a5,a4
800009b8:	acf1a823          	sw	a5,-1328(gp) # 40000250 <SystemPll1Clock>
800009bc:	4462                	lw	s0,24(sp)
800009be:	bdc5                	j	800008ae <SystemCoreClockUpdate+0xde>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:66
			SystemCoreClock = HSECLK_VAL;
800009c0:	00b727b7          	lui	a5,0xb72
800009c4:	b0078793          	addi	a5,a5,-1280 # b71b00 <retarget.c.370f3c8d+0xb5e32e>
800009c8:	acf1ac23          	sw	a5,-1320(gp) # 40000258 <SystemCoreClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:67
			break;		
800009cc:	b721                	j	800008d4 <SystemCoreClockUpdate+0x104>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:69
			SystemCoreClock = LSICLK_VAL;
800009ce:	6721                	lui	a4,0x8
800009d0:	ace1ac23          	sw	a4,-1320(gp) # 40000258 <SystemCoreClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:70
			break;
800009d4:	b701                	j	800008d4 <SystemCoreClockUpdate+0x104>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:72
			SystemCoreClock = SystemPll0Clock;
800009d6:	ad41a703          	lw	a4,-1324(gp) # 40000254 <SystemPll0Clock>
800009da:	ace1ac23          	sw	a4,-1320(gp) # 40000258 <SystemCoreClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:73
			break;	
800009de:	bddd                	j	800008d4 <SystemCoreClockUpdate+0x104>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:91
			} else {
				uint32_t fbdiv = USB->PLLUSBCFG2_bit.FBDIV;			
800009e0:	200116b7          	lui	a3,0x20011
800009e4:	8086a683          	lw	a3,-2040(a3) # 20010808 <retarget.c.370f3c8d+0x1fffd036>
800009e8:	6585                	lui	a1,0x1
800009ea:	15fd                	addi	a1,a1,-1 # fff <STACK_SIZE+0x7ff>
800009ec:	8eed                	and	a3,a3,a1
800009ee:	06c2                	slli	a3,a3,0x10
800009f0:	82c1                	srli	a3,a3,0x10
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:92
				USBClock = (HSECLK_VAL * fbdiv) / (refdiv * pd0a * pd0b);
800009f2:	00b725b7          	lui	a1,0xb72
800009f6:	b0058593          	addi	a1,a1,-1280 # b71b00 <retarget.c.370f3c8d+0xb5e32e>
800009fa:	02b686b3          	mul	a3,a3,a1
800009fe:	02c70733          	mul	a4,a4,a2
80000a02:	02e787b3          	mul	a5,a5,a4
80000a06:	02f6d6b3          	divu	a3,a3,a5
80000a0a:	acd1a623          	sw	a3,-1332(gp) # 4000024c <USBClock>
80000a0e:	a029                	j	80000a18 <SystemCoreClockUpdate+0x248>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:95
			}		
		} 
		else USBClock = SystemCoreClock;
80000a10:	ad81a703          	lw	a4,-1320(gp) # 40000258 <SystemCoreClock>
80000a14:	ace1a623          	sw	a4,-1332(gp) # 4000024c <USBClock>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:97
	}
}
80000a18:	40f2                	lw	ra,28(sp)
80000a1a:	44d2                	lw	s1,20(sp)
80000a1c:	6105                	addi	sp,sp,32
80000a1e:	8082                	ret

80000a20 <ClkInit>:
ClkInit():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:107
    uint32_t sysclk_source;

    //clockout control
    #ifndef CKO_NONE
        //C7 clockout
        RCU->CGCFGAHB_bit.GPIOCEN = 1;
80000a20:	3000e7b7          	lui	a5,0x3000e
80000a24:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.370f3c8d+0x2fffa82e>
80000a28:	40076713          	ori	a4,a4,1024
80000a2c:	00e79023          	sh	a4,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:108
        RCU->RSTDISAHB_bit.GPIOCEN = 1;
80000a30:	0107d703          	lhu	a4,16(a5)
80000a34:	40076713          	ori	a4,a4,1024
80000a38:	00e79823          	sh	a4,16(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:109
        GPIOC->ALTFUNCNUM_bit.PIN7 = 3;
80000a3c:	28002737          	lui	a4,0x28002
80000a40:	5f54                	lw	a3,60(a4)
80000a42:	6631                	lui	a2,0xc
80000a44:	8ed1                	or	a3,a3,a2
80000a46:	df54                	sw	a3,60(a4)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:110
        GPIOC->ALTFUNCSET_bit.PIN7 = 1;
80000a48:	03475683          	lhu	a3,52(a4) # 28002034 <retarget.c.370f3c8d+0x27fee862>
80000a4c:	0806e693          	ori	a3,a3,128
80000a50:	02d71a23          	sh	a3,52(a4)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:124
        RCU->CLKOUTCFG = (RCU_CLKOUTCFG_CLKSEL_HSE << RCU_CLKOUTCFG_CLKSEL_Pos) |
				  	  	  (1 << RCU_CLKOUTCFG_DIVN_Pos) |
						  (0 << RCU_CLKOUTCFG_DIVEN_Pos) |
						  RCU_CLKOUTCFG_RSTDIS_Msk | RCU_CLKOUTCFG_CLKEN_Msk; //CKO = HSECLK
    #elif defined CKO_PLL0
        RCU->CLKOUTCFG = (RCU_CLKOUTCFG_CLKSEL_PLL0 << RCU_CLKOUTCFG_CLKSEL_Pos) |
80000a54:	6745                	lui	a4,0x11
80000a56:	12170713          	addi	a4,a4,289 # 11121 <main.c.494f4ad7+0x1dd7>
80000a5a:	0ae7ae23          	sw	a4,188(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:149
//select system clock
#ifdef SYSCLK_PLL
	//PLLCLK = REFCLK * (FBDIV+FRAC/2^24) / (REFDIV*(1+PD0A)*(1+PD0B))
	
	//select HSE as source system clock while config PLL
	RCU->SYSCLKCFG = (RCU_SYSCLKCFG_SRC_HSECLK << RCU_SYSCLKCFG_SRC_Pos);
80000a5e:	4705                	li	a4,1
80000a60:	db98                	sw	a4,48(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:151
    // Wait switching done
    timeout_counter = 0;
80000a62:	4681                	li	a3,0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:152
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)){ //SYSCLK_SWITCH_TIMEOUT))
80000a64:	a011                	j	80000a68 <ClkInit+0x48>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:153
        timeout_counter++;
80000a66:	0685                	addi	a3,a3,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:152
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)){ //SYSCLK_SWITCH_TIMEOUT))
80000a68:	3000e7b7          	lui	a5,0x3000e
80000a6c:	5fd8                	lw	a4,60(a5)
80000a6e:	8b0d                	andi	a4,a4,3
80000a70:	5b9c                	lw	a5,48(a5)
80000a72:	8b8d                	andi	a5,a5,3
80000a74:	00f70663          	beq	a4,a5,80000a80 <ClkInit+0x60>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:152 (discriminator 1)
80000a78:	06300793          	li	a5,99
80000a7c:	fed7f5e3          	bgeu	a5,a3,80000a66 <ClkInit+0x46>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:173
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
	RCU->PLLSYSCFG2 = 100;         //FBDIV
#elif (HSECLK_VAL == 12000000)
// Fout0 = 50 000 000 Hz
// Fout1 = 25 000 000 Hz
	RCU->PLLSYSCFG0 =( 5 << RCU_PLLSYSCFG0_PD1B_Pos) |  //PD1B
80000a80:	3000e7b7          	lui	a5,0x3000e
80000a84:	0bc3a737          	lui	a4,0xbc3a
80000a88:	08770713          	addi	a4,a4,135 # bc3a087 <retarget.c.370f3c8d+0xbc268b5>
80000a8c:	cbb8                	sw	a4,80(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:183
					 ( 0 << RCU_PLLSYSCFG0_FOUTEN_Pos)    |  //fouten
					 ( 0 << RCU_PLLSYSCFG0_DSMEN_Pos)     |  //dsmen
					 ( 0 << RCU_PLLSYSCFG0_DACEN_Pos)     |  //dacen
					 ( 3 << RCU_PLLSYSCFG0_BYP_Pos)       |  //bypass
					 ( 1 << RCU_PLLSYSCFG0_PLLEN_Pos);       //en
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
80000a8e:	0407aa23          	sw	zero,84(a5) # 3000e054 <retarget.c.370f3c8d+0x2fffa882>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:184
	RCU->PLLSYSCFG2 = 100;         //FBDIV
80000a92:	06400713          	li	a4,100
80000a96:	cfb8                	sw	a4,88(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:233
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
	RCU->PLLSYSCFG2 = 100;         //FBDIV
#else
#error "Please define HSECLK_VAL with correct values!"
#endif
	RCU->PLLSYSCFG0_bit.FOUTEN = 1; 	// Fout0 Enable
80000a98:	4bb8                	lw	a4,80(a5)
80000a9a:	f9f77713          	andi	a4,a4,-97
80000a9e:	02076713          	ori	a4,a4,32
80000aa2:	cbb8                	sw	a4,80(a5)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:234
	timeout_counter = 1000;
80000aa4:	3e800793          	li	a5,1000
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:235
	while(timeout_counter) timeout_counter--;
80000aa8:	a011                	j	80000aac <ClkInit+0x8c>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:235 (discriminator 2)
80000aaa:	17fd                	addi	a5,a5,-1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:235 (discriminator 1)
80000aac:	fffd                	bnez	a5,80000aaa <ClkInit+0x8a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:236 (discriminator 1)
	while((RCU->PLLSYSSTAT_bit.LOCK) != 1)
80000aae:	3000e737          	lui	a4,0x3000e
80000ab2:	5338                	lw	a4,96(a4)
80000ab4:	8b05                	andi	a4,a4,1
80000ab6:	df65                	beqz	a4,80000aae <ClkInit+0x8e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:238
	{}; 								// wait lock signal
	RCU->PLLSYSCFG0_bit.BYP = 2; 		// Bypass for Fout1
80000ab8:	3000e637          	lui	a2,0x3000e
80000abc:	4a38                	lw	a4,80(a2)
80000abe:	9b65                	andi	a4,a4,-7
80000ac0:	00476713          	ori	a4,a4,4
80000ac4:	ca38                	sw	a4,80(a2)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:242
	//select PLL as source system clock
	sysclk_source = RCU_SYSCLKCFG_SRC_SYSPLL0CLK;
    // FLASH control settings
    FLASH->CTRL_bit.LAT = 3;
80000ac6:	3000d6b7          	lui	a3,0x3000d
80000aca:	46f8                	lw	a4,76(a3)
80000acc:	fff105b7          	lui	a1,0xfff10
80000ad0:	15fd                	addi	a1,a1,-1 # fff0ffff <__data_source_start+0x7ff0e2b3>
80000ad2:	8f6d                	and	a4,a4,a1
80000ad4:	000305b7          	lui	a1,0x30
80000ad8:	8f4d                	or	a4,a4,a1
80000ada:	c6f8                	sw	a4,76(a3)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:243
    FLASH->CTRL_bit.CEN = 1;
80000adc:	46f8                	lw	a4,76(a3)
80000ade:	00276713          	ori	a4,a4,2
80000ae2:	c6f8                	sw	a4,76(a3)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:255
#else
#error "Please define SYSCLK source (SYSCLK_PLL | SYSCLK_HSE | SYSCLK_HSI | SYSCLK_LSI)!"
#endif

    //switch sysclk
    RCU->SYSCLKCFG = (sysclk_source << RCU_SYSCLKCFG_SRC_Pos);
80000ae4:	4709                	li	a4,2
80000ae6:	da18                	sw	a4,48(a2)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:258
    // Wait switching done
    timeout_counter = 0;
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)) //SYSCLK_SWITCH_TIMEOUT))
80000ae8:	3000e737          	lui	a4,0x3000e
80000aec:	5f54                	lw	a3,60(a4)
80000aee:	8a8d                	andi	a3,a3,3
80000af0:	5b18                	lw	a4,48(a4)
80000af2:	8b0d                	andi	a4,a4,3
80000af4:	00e68863          	beq	a3,a4,80000b04 <ClkInit+0xe4>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:258 (discriminator 1)
80000af8:	06300713          	li	a4,99
80000afc:	00f76463          	bltu	a4,a5,80000b04 <ClkInit+0xe4>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:259
        timeout_counter++;
80000b00:	0785                	addi	a5,a5,1
80000b02:	b7dd                	j	80000ae8 <ClkInit+0xc8>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:264
/*    if (timeout_counter == SYSCLK_SWITCH_TIMEOUT) //SYSCLK failed to switch
        while (1) {
        };*/

}
80000b04:	8082                	ret

80000b06 <InterruptEnable>:
InterruptEnable():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:267

void InterruptEnable()
{
80000b06:	1141                	addi	sp,sp,-16
80000b08:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:269
	// Разрешаем все прерывания в machine mode
	PLIC_SetThreshold (Plic_Mach_Target, 0);
80000b0a:	4581                	li	a1,0
80000b0c:	4501                	li	a0,0
80000b0e:	3239                	jal	8000041c <PLIC_SetThreshold>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:271
    // Выключаем прерывание от MTIMER (если MTIMER используется в проекте - закомментировать следующую строку)
    clear_csr(mie, MIE_MTIMER);
80000b10:	08000793          	li	a5,128
80000b14:	3047b7f3          	csrrc	a5,mie,a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:273
    // Разрешаем внешнее прерывание (PLIC) в machine mode
    set_csr(mie, MIE_MEXTERNAL);
80000b18:	6785                	lui	a5,0x1
80000b1a:	80078793          	addi	a5,a5,-2048 # 800 <STACK_SIZE>
80000b1e:	3047a7f3          	csrrs	a5,mie,a5
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:275
    // Разрешаем прерывания на глобальном уровне
    set_csr(mstatus, MSTATUS_MIE);
80000b22:	300467f3          	csrrsi	a5,mstatus,8
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:276
}
80000b26:	40b2                	lw	ra,12(sp)
80000b28:	0141                	addi	sp,sp,16
80000b2a:	8082                	ret

80000b2c <SystemInit>:
SystemInit():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:289
    // Запрещаем прерывания на глобальном уровне
    clear_csr(mstatus, MSTATUS_MIE);
}

void SystemInit(void)
{
80000b2c:	1141                	addi	sp,sp,-16
80000b2e:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:290
	ClkInit();
80000b30:	3dc5                	jal	80000a20 <ClkInit>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/system_k1921vg015.c:291
}
80000b32:	40b2                	lw	ra,12(sp)
80000b34:	0141                	addi	sp,sp,16
80000b36:	8082                	ret

80000b38 <sx126x_convert_freq_in_hz_to_pll_step>:
sx126x_convert_freq_in_hz_to_pll_step():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1257
{
    uint32_t steps_int;
    uint32_t steps_frac;

    // Get integer and fractional parts of the frequency computed with a PLL step scaled value
    steps_int  = freq_in_hz / SX126X_PLL_STEP_SCALED;
80000b38:	431be737          	lui	a4,0x431be
80000b3c:	e8370713          	addi	a4,a4,-381 # 431bde83 <__TLS0_BASE__+0x317de83>
80000b40:	02e537b3          	mulhu	a5,a0,a4
80000b44:	83b1                	srli	a5,a5,0xc
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1261
    steps_frac = freq_in_hz - ( steps_int * SX126X_PLL_STEP_SCALED );

    // Apply the scaling factor to retrieve a frequency in Hz (+ ceiling)
    return ( steps_int << SX126X_PLL_STEP_SHIFT_AMOUNT ) +
80000b46:	00e79613          	slli	a2,a5,0xe
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1262
           ( ( ( steps_frac << SX126X_PLL_STEP_SHIFT_AMOUNT ) + ( SX126X_PLL_STEP_SCALED >> 1 ) ) /
80000b4a:	6691                	lui	a3,0x4
80000b4c:	d0968693          	addi	a3,a3,-759 # 3d09 <plib015_gpio.c.ff9925b6+0x1ece>
80000b50:	02d787b3          	mul	a5,a5,a3
80000b54:	8d1d                	sub	a0,a0,a5
80000b56:	053a                	slli	a0,a0,0xe
80000b58:	6789                	lui	a5,0x2
80000b5a:	e8478793          	addi	a5,a5,-380 # 1e84 <plib015_gpio.c.ff9925b6+0x49>
80000b5e:	953e                	add	a0,a0,a5
80000b60:	02e53533          	mulhu	a0,a0,a4
80000b64:	8131                	srli	a0,a0,0xc
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1264
             SX126X_PLL_STEP_SCALED );
}
80000b66:	9532                	add	a0,a0,a2
80000b68:	8082                	ret

80000b6a <sx126x_hal_wait_on_busy>:
sx126x_hal_wait_on_busy():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:188
    while (count--) {
        __asm("nop");
    }
}

static void sx126x_hal_wait_on_busy(const void* context) {
80000b6a:	1141                	addi	sp,sp,-16
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:189
    volatile uint32_t timeout = SX126X_TIMEOUT_COUNT;  // ~1M циклов, калибруйте под AHB-clock (100-200 MHz)
80000b6c:	000f47b7          	lui	a5,0xf4
80000b70:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000b74:	c63e                	sw	a5,12(sp)
GPIO_ReadBit():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:310
__STATIC_INLINE BitState GPIO_ReadBit(GPIO_TypeDef* GPIOx, uint32_t Pin)
{
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GET_GPIO_PIN(Pin));

    return (BitState)READ_BIT(GPIOx->DATA, (uint32_t)Pin);
80000b76:	280017b7          	lui	a5,0x28001
80000b7a:	439c                	lw	a5,0(a5)
80000b7c:	2007f793          	andi	a5,a5,512
80000b80:	c789                	beqz	a5,80000b8a <sx126x_hal_wait_on_busy+0x20>
sx126x_hal_wait_on_busy():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:190 (discriminator 1)
    while (GPIO_ReadBit(BUSYPort, BUSYPin) == SET && --timeout > 0) {
80000b82:	47b2                	lw	a5,12(sp)
80000b84:	17fd                	addi	a5,a5,-1 # 28000fff <retarget.c.370f3c8d+0x27fed82d>
80000b86:	c63e                	sw	a5,12(sp)
80000b88:	f7fd                	bnez	a5,80000b76 <sx126x_hal_wait_on_busy+0xc>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:193
        // Опционально: __asm("nop"); для точной задержки
    }
    if (timeout == 0) {
80000b8a:	47b2                	lw	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:197
        // Обработка ошибки: assert или return в HAL (не hang'ните систему)
        // e.g., #ifdef DEBUG assert(0 && "Busy timeout"); #endif
    }
}
80000b8c:	0141                	addi	sp,sp,16
80000b8e:	8082                	ret

80000b90 <sx126x_hal_nss_low>:
GPIO_WriteBit():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:373
{
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GET_GPIO_PIN(Pin));
    assert_param(IS_BIT_STATE(State));

    MODIFY_REG(GPIOx->DATAOUT, Pin, State ? (uint32_t)Pin : 0);
80000b90:	28001737          	lui	a4,0x28001
80000b94:	435c                	lw	a5,4(a4)
80000b96:	fbf7f793          	andi	a5,a5,-65
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:373 (discriminator 4)
80000b9a:	c35c                	sw	a5,4(a4)
sx126x_hal_nss_low():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:216

static void sx126x_hal_nss_low(const void* context)
{
    // Use globals from main.h
    GPIO_WriteBit(NSSPort, NSSPin, CLEAR);
}
80000b9c:	8082                	ret

80000b9e <sx126x_hal_nss_high>:
GPIO_WriteBit():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:373
80000b9e:	28001737          	lui	a4,0x28001
80000ba2:	435c                	lw	a5,4(a4)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:373 (discriminator 4)
80000ba4:	0407e793          	ori	a5,a5,64
80000ba8:	c35c                	sw	a5,4(a4)
sx126x_hal_nss_high():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:222

static void sx126x_hal_nss_high(const void* context)
{
    // Use globals from main.h
    GPIO_WriteBit(NSSPort, NSSPin, SET);
}
80000baa:	8082                	ret

80000bac <sx126x_hal_check_device_ready>:
sx126x_hal_check_device_ready():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:200
{
80000bac:	1141                	addi	sp,sp,-16
80000bae:	c606                	sw	ra,12(sp)
80000bb0:	c422                	sw	s0,8(sp)
80000bb2:	842a                	mv	s0,a0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:201
    if (radio_mode != RADIO_SLEEP) {
80000bb4:	8841a783          	lw	a5,-1916(gp) # 40000004 <radio_mode>
80000bb8:	c791                	beqz	a5,80000bc4 <sx126x_hal_check_device_ready+0x18>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:202
        sx126x_hal_wait_on_busy(context);
80000bba:	3f45                	jal	80000b6a <sx126x_hal_wait_on_busy>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:210
}
80000bbc:	40b2                	lw	ra,12(sp)
80000bbe:	4422                	lw	s0,8(sp)
80000bc0:	0141                	addi	sp,sp,16
80000bc2:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:205
        sx126x_hal_nss_low(context);
80000bc4:	37f1                	jal	80000b90 <sx126x_hal_nss_low>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:206
        sx126x_hal_wait_on_busy(context);
80000bc6:	8522                	mv	a0,s0
80000bc8:	374d                	jal	80000b6a <sx126x_hal_wait_on_busy>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:207
        sx126x_hal_nss_high(context);
80000bca:	8522                	mv	a0,s0
80000bcc:	3fc9                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:208
        radio_mode = RADIO_AWAKE;
80000bce:	4705                	li	a4,1
80000bd0:	88e1a223          	sw	a4,-1916(gp) # 40000004 <radio_mode>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:210
}
80000bd4:	b7e5                	j	80000bbc <sx126x_hal_check_device_ready+0x10>

80000bd6 <spi_transmit>:
spi_transmit():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:225

static sx126x_hal_status_t spi_transmit(const void* context, const uint8_t* buffer, uint16_t length)
{
80000bd6:	1141                	addi	sp,sp,-16
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:226
    volatile uint32_t timeout = SX126X_TIMEOUT_COUNT;
80000bd8:	000f47b7          	lui	a5,0xf4
80000bdc:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000be0:	c63e                	sw	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:232
    uint16_t i;

    // Ensure SPI is enabled and configured (assume done externally)
    // SPI0 is master, etc.

    for (i = 0; i < length; i++) {
80000be2:	4781                	li	a5,0
80000be4:	a819                	j	80000bfa <spi_transmit+0x24>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:233
        SPI_SendData(SPI0, buffer[i]);  // Send byte (8-bit width assumed)
80000be6:	00f58733          	add	a4,a1,a5
80000bea:	00074683          	lbu	a3,0(a4) # 28001000 <retarget.c.370f3c8d+0x27fed82e>
SPI_SendData():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:338
__STATIC_INLINE void SPI_SendData(SPI_TypeDef* SPIx, uint32_t Data)
{
    assert_param(IS_SPI_PERIPH(SPIx));
    assert_param(IS_SPI_DATA(Data));

    WRITE_REG(SPIx->DR, Data);
80000bee:	20050737          	lui	a4,0x20050
80000bf2:	c714                	sw	a3,8(a4)
spi_transmit():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:232 (discriminator 3)
    for (i = 0; i < length; i++) {
80000bf4:	0785                	addi	a5,a5,1
80000bf6:	07c2                	slli	a5,a5,0x10
80000bf8:	83c1                	srli	a5,a5,0x10
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:232 (discriminator 1)
80000bfa:	fec7e6e3          	bltu	a5,a2,80000be6 <spi_transmit+0x10>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:237
    }

    // Wait for transmission complete (Busy flag clear)
    timeout = SX126X_TIMEOUT_COUNT;
80000bfe:	000f47b7          	lui	a5,0xf4
80000c02:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000c06:	c63e                	sw	a5,12(sp)
SPI_FlagStatus():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:366
__STATIC_INLINE FlagStatus SPI_FlagStatus(SPI_TypeDef* SPIx, uint32_t Flag)
{
    assert_param(IS_SPI_PERIPH(SPIx));
    assert_param(IS_SPI_FLAG(Flag));

    return (FlagStatus)READ_BIT(SPIx->SR, Flag);
80000c08:	200507b7          	lui	a5,0x20050
80000c0c:	47c8                	lw	a0,12(a5)
80000c0e:	8941                	andi	a0,a0,16
80000c10:	c511                	beqz	a0,80000c1c <spi_transmit+0x46>
spi_transmit():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:239
    while (SPI_FlagStatus(SPI0, SPI_Flag_Busy) == SET) {
        if (--timeout == 0) return SX126X_HAL_STATUS_ERROR;
80000c12:	47b2                	lw	a5,12(sp)
80000c14:	17fd                	addi	a5,a5,-1 # 2004ffff <retarget.c.370f3c8d+0x2003c82d>
80000c16:	c63e                	sw	a5,12(sp)
80000c18:	fbe5                	bnez	a5,80000c08 <spi_transmit+0x32>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:239 (discriminator 1)
80000c1a:	450d                	li	a0,3
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:243
    }

    return SX126X_HAL_STATUS_OK;
}
80000c1c:	0141                	addi	sp,sp,16
80000c1e:	8082                	ret

80000c20 <sx126x_hal_write>:
sx126x_hal_write():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:82
{
80000c20:	1101                	addi	sp,sp,-32
80000c22:	ce06                	sw	ra,28(sp)
80000c24:	cc22                	sw	s0,24(sp)
80000c26:	ca26                	sw	s1,20(sp)
80000c28:	c84a                	sw	s2,16(sp)
80000c2a:	c64e                	sw	s3,12(sp)
80000c2c:	892e                	mv	s2,a1
80000c2e:	8432                	mv	s0,a2
80000c30:	89b6                	mv	s3,a3
80000c32:	84ba                	mv	s1,a4
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:85
    sx126x_hal_check_device_ready(ctx);
80000c34:	4501                	li	a0,0
80000c36:	3f9d                	jal	80000bac <sx126x_hal_check_device_ready>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:89
    sx126x_hal_nss_low(ctx);
80000c38:	4501                	li	a0,0
80000c3a:	3f99                	jal	80000b90 <sx126x_hal_nss_low>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:92
    if (command_length > 0) {
80000c3c:	e815                	bnez	s0,80000c70 <sx126x_hal_write+0x50>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:100
    if (data_length > 0) {
80000c3e:	c491                	beqz	s1,80000c4a <sx126x_hal_write+0x2a>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:101
        if (spi_transmit(ctx, data, data_length) != SX126X_HAL_STATUS_OK) {
80000c40:	8626                	mv	a2,s1
80000c42:	85ce                	mv	a1,s3
80000c44:	4501                	li	a0,0
80000c46:	3f41                	jal	80000bd6 <spi_transmit>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:101 (discriminator 1)
80000c48:	ed0d                	bnez	a0,80000c82 <sx126x_hal_write+0x62>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:108
    sx126x_hal_nss_high(ctx);
80000c4a:	4501                	li	a0,0
80000c4c:	3f89                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:110
    if (command_length > 0 && command[0] != 0x84) {
80000c4e:	c419                	beqz	s0,80000c5c <sx126x_hal_write+0x3c>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:110 (discriminator 1)
80000c50:	00094703          	lbu	a4,0(s2)
80000c54:	08400793          	li	a5,132
80000c58:	02f71963          	bne	a4,a5,80000c8a <sx126x_hal_write+0x6a>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:113
        radio_mode = RADIO_SLEEP;
80000c5c:	8801a223          	sw	zero,-1916(gp) # 40000004 <radio_mode>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:116
    return SX126X_HAL_STATUS_OK;
80000c60:	4501                	li	a0,0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:117
}
80000c62:	40f2                	lw	ra,28(sp)
80000c64:	4462                	lw	s0,24(sp)
80000c66:	44d2                	lw	s1,20(sp)
80000c68:	4942                	lw	s2,16(sp)
80000c6a:	49b2                	lw	s3,12(sp)
80000c6c:	6105                	addi	sp,sp,32
80000c6e:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:93
        if (spi_transmit(ctx, command, command_length) != SX126X_HAL_STATUS_OK) {
80000c70:	8622                	mv	a2,s0
80000c72:	85ca                	mv	a1,s2
80000c74:	4501                	li	a0,0
80000c76:	3785                	jal	80000bd6 <spi_transmit>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:93 (discriminator 1)
80000c78:	d179                	beqz	a0,80000c3e <sx126x_hal_write+0x1e>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:94
            sx126x_hal_nss_high(ctx);
80000c7a:	4501                	li	a0,0
80000c7c:	370d                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:95
            return SX126X_HAL_STATUS_ERROR;
80000c7e:	450d                	li	a0,3
80000c80:	b7cd                	j	80000c62 <sx126x_hal_write+0x42>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:102
            sx126x_hal_nss_high(ctx);
80000c82:	4501                	li	a0,0
80000c84:	3f29                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:103
            return SX126X_HAL_STATUS_ERROR;
80000c86:	450d                	li	a0,3
80000c88:	bfe9                	j	80000c62 <sx126x_hal_write+0x42>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:111
        sx126x_hal_check_device_ready(ctx);
80000c8a:	4501                	li	a0,0
80000c8c:	3705                	jal	80000bac <sx126x_hal_check_device_ready>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:116
    return SX126X_HAL_STATUS_OK;
80000c8e:	4501                	li	a0,0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:111
        sx126x_hal_check_device_ready(ctx);
80000c90:	bfc9                	j	80000c62 <sx126x_hal_write+0x42>

80000c92 <sx126x_set_standby>:
sx126x_set_standby():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:258
{
80000c92:	1101                	addi	sp,sp,-32
80000c94:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:259
    const uint8_t buf[SX126X_SIZE_SET_STANDBY] = {
80000c96:	f8000793          	li	a5,-128
80000c9a:	00f10623          	sb	a5,12(sp)
80000c9e:	00b106a3          	sb	a1,13(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:264
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_STANDBY, 0, 0 );
80000ca2:	4701                	li	a4,0
80000ca4:	4681                	li	a3,0
80000ca6:	4609                	li	a2,2
80000ca8:	006c                	addi	a1,sp,12
80000caa:	3f9d                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:265
}
80000cac:	40f2                	lw	ra,28(sp)
80000cae:	6105                	addi	sp,sp,32
80000cb0:	8082                	ret

80000cb2 <sx126x_cal>:
sx126x_cal():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:398
{
80000cb2:	1101                	addi	sp,sp,-32
80000cb4:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:399
    const uint8_t buf[SX126X_SIZE_CALIBRATE] = {
80000cb6:	f8900793          	li	a5,-119
80000cba:	00f10623          	sb	a5,12(sp)
80000cbe:	00b106a3          	sb	a1,13(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:404
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_CALIBRATE, 0, 0 );
80000cc2:	4701                	li	a4,0
80000cc4:	4681                	li	a3,0
80000cc6:	4609                	li	a2,2
80000cc8:	006c                	addi	a1,sp,12
80000cca:	3f99                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:405
}
80000ccc:	40f2                	lw	ra,28(sp)
80000cce:	6105                	addi	sp,sp,32
80000cd0:	8082                	ret

80000cd2 <sx126x_set_pa_cfg>:
sx126x_set_pa_cfg():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:431
{
80000cd2:	1101                	addi	sp,sp,-32
80000cd4:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:432
    const uint8_t buf[SX126X_SIZE_SET_PA_CFG] = {
80000cd6:	f9500793          	li	a5,-107
80000cda:	00f10423          	sb	a5,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:433
        SX126X_SET_PA_CFG, params->pa_duty_cycle, params->hp_max, params->device_sel, params->pa_lut,
80000cde:	0005c783          	lbu	a5,0(a1) # 30000 <retarget.c.370f3c8d+0x1c82e>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:432
    const uint8_t buf[SX126X_SIZE_SET_PA_CFG] = {
80000ce2:	00f104a3          	sb	a5,9(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:433
        SX126X_SET_PA_CFG, params->pa_duty_cycle, params->hp_max, params->device_sel, params->pa_lut,
80000ce6:	0015c783          	lbu	a5,1(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:432
    const uint8_t buf[SX126X_SIZE_SET_PA_CFG] = {
80000cea:	00f10523          	sb	a5,10(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:433
        SX126X_SET_PA_CFG, params->pa_duty_cycle, params->hp_max, params->device_sel, params->pa_lut,
80000cee:	0025c783          	lbu	a5,2(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:432
    const uint8_t buf[SX126X_SIZE_SET_PA_CFG] = {
80000cf2:	00f105a3          	sb	a5,11(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:433
        SX126X_SET_PA_CFG, params->pa_duty_cycle, params->hp_max, params->device_sel, params->pa_lut,
80000cf6:	0035c783          	lbu	a5,3(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:432
    const uint8_t buf[SX126X_SIZE_SET_PA_CFG] = {
80000cfa:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:436
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PA_CFG, 0, 0 );
80000cfe:	4701                	li	a4,0
80000d00:	4681                	li	a3,0
80000d02:	4615                	li	a2,5
80000d04:	002c                	addi	a1,sp,8
80000d06:	3f29                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:437
}
80000d08:	40f2                	lw	ra,28(sp)
80000d0a:	6105                	addi	sp,sp,32
80000d0c:	8082                	ret

80000d0e <sx126x_write_register>:
sx126x_write_register():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:455
{
80000d0e:	1101                	addi	sp,sp,-32
80000d10:	ce06                	sw	ra,28(sp)
80000d12:	8736                	mv	a4,a3
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:456
    const uint8_t buf[SX126X_SIZE_WRITE_REGISTER] = {
80000d14:	47b5                	li	a5,13
80000d16:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:458
        ( uint8_t )( address >> 8 ),
80000d1a:	0085d793          	srli	a5,a1,0x8
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:456
    const uint8_t buf[SX126X_SIZE_WRITE_REGISTER] = {
80000d1e:	00f106a3          	sb	a5,13(sp)
80000d22:	00b10723          	sb	a1,14(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:462
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_WRITE_REGISTER, buffer, size );
80000d26:	86b2                	mv	a3,a2
80000d28:	460d                	li	a2,3
80000d2a:	006c                	addi	a1,sp,12
80000d2c:	3dd5                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:463
}
80000d2e:	40f2                	lw	ra,28(sp)
80000d30:	6105                	addi	sp,sp,32
80000d32:	8082                	ret

80000d34 <sx126x_set_rf_freq_in_pll_steps>:
sx126x_set_rf_freq_in_pll_steps():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:594
{
80000d34:	1101                	addi	sp,sp,-32
80000d36:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:595
    const uint8_t buf[SX126X_SIZE_SET_RF_FREQUENCY] = {
80000d38:	f8600793          	li	a5,-122
80000d3c:	00f10423          	sb	a5,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:596
        SX126X_SET_RF_FREQUENCY,  ( uint8_t )( freq >> 24 ), ( uint8_t )( freq >> 16 ),
80000d40:	0185d793          	srli	a5,a1,0x18
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:595
    const uint8_t buf[SX126X_SIZE_SET_RF_FREQUENCY] = {
80000d44:	00f104a3          	sb	a5,9(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:596
        SX126X_SET_RF_FREQUENCY,  ( uint8_t )( freq >> 24 ), ( uint8_t )( freq >> 16 ),
80000d48:	0105d793          	srli	a5,a1,0x10
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:595
    const uint8_t buf[SX126X_SIZE_SET_RF_FREQUENCY] = {
80000d4c:	00f10523          	sb	a5,10(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:597
        ( uint8_t )( freq >> 8 ), ( uint8_t )( freq >> 0 ),
80000d50:	0085d793          	srli	a5,a1,0x8
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:595
    const uint8_t buf[SX126X_SIZE_SET_RF_FREQUENCY] = {
80000d54:	00f105a3          	sb	a5,11(sp)
80000d58:	00b10623          	sb	a1,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:600
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_RF_FREQUENCY, 0, 0 );
80000d5c:	4701                	li	a4,0
80000d5e:	4681                	li	a3,0
80000d60:	4615                	li	a2,5
80000d62:	002c                	addi	a1,sp,8
80000d64:	3d75                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:601
}
80000d66:	40f2                	lw	ra,28(sp)
80000d68:	6105                	addi	sp,sp,32
80000d6a:	8082                	ret

80000d6c <sx126x_set_rf_freq>:
sx126x_set_rf_freq():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:587
{
80000d6c:	1141                	addi	sp,sp,-16
80000d6e:	c606                	sw	ra,12(sp)
80000d70:	c422                	sw	s0,8(sp)
80000d72:	842a                	mv	s0,a0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:588
    const uint32_t freq = sx126x_convert_freq_in_hz_to_pll_step( freq_in_hz );
80000d74:	852e                	mv	a0,a1
80000d76:	33c9                	jal	80000b38 <sx126x_convert_freq_in_hz_to_pll_step>
80000d78:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:590
    return sx126x_set_rf_freq_in_pll_steps( context, freq );
80000d7a:	8522                	mv	a0,s0
80000d7c:	3f65                	jal	80000d34 <sx126x_set_rf_freq_in_pll_steps>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:591
}
80000d7e:	40b2                	lw	ra,12(sp)
80000d80:	4422                	lw	s0,8(sp)
80000d82:	0141                	addi	sp,sp,16
80000d84:	8082                	ret

80000d86 <sx126x_set_pkt_type>:
sx126x_set_pkt_type():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:604
{
80000d86:	1101                	addi	sp,sp,-32
80000d88:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:605
    const uint8_t buf[SX126X_SIZE_SET_PKT_TYPE] = {
80000d8a:	f8a00793          	li	a5,-118
80000d8e:	00f10623          	sb	a5,12(sp)
80000d92:	00b106a3          	sb	a1,13(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:610
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PKT_TYPE, 0, 0 );
80000d96:	4701                	li	a4,0
80000d98:	4681                	li	a3,0
80000d9a:	4609                	li	a2,2
80000d9c:	006c                	addi	a1,sp,12
80000d9e:	3549                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:611
}
80000da0:	40f2                	lw	ra,28(sp)
80000da2:	6105                	addi	sp,sp,32
80000da4:	8082                	ret

80000da6 <sx126x_set_tx_params>:
sx126x_set_tx_params():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:624
{
80000da6:	1101                	addi	sp,sp,-32
80000da8:	ce06                	sw	ra,28(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:625
    const uint8_t buf[SX126X_SIZE_SET_TX_PARAMS] = {
80000daa:	f8e00793          	li	a5,-114
80000dae:	00f10623          	sb	a5,12(sp)
80000db2:	00b106a3          	sb	a1,13(sp)
80000db6:	00c10723          	sb	a2,14(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:631
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_TX_PARAMS, 0, 0 );
80000dba:	4701                	li	a4,0
80000dbc:	4681                	li	a3,0
80000dbe:	460d                	li	a2,3
80000dc0:	006c                	addi	a1,sp,12
80000dc2:	3db9                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:632
}
80000dc4:	40f2                	lw	ra,28(sp)
80000dc6:	6105                	addi	sp,sp,32
80000dc8:	8082                	ret

80000dca <spi_receive>:
spi_receive():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:246

static sx126x_hal_status_t spi_receive(const void* context, uint8_t* buffer, uint16_t length)
{
80000dca:	1141                	addi	sp,sp,-16
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:247
    volatile uint32_t timeout = SX126X_TIMEOUT_COUNT;
80000dcc:	000f47b7          	lui	a5,0xf4
80000dd0:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000dd4:	c63e                	sw	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:250
    uint16_t i;

    for (i = 0; i < length; i++) {
80000dd6:	4701                	li	a4,0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:250 (discriminator 1)
80000dd8:	04c77263          	bgeu	a4,a2,80000e1c <spi_receive+0x52>
SPI_SendData():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:338
    WRITE_REG(SPIx->DR, Data);
80000ddc:	200507b7          	lui	a5,0x20050
80000de0:	0007a423          	sw	zero,8(a5) # 20050008 <retarget.c.370f3c8d+0x2003c836>
spi_receive():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:255
        // Transmit NOP to generate clock
        SPI_SendData(SPI0, SX126X_NOP);

        // Wait for Rx data available
        timeout = SX126X_TIMEOUT_COUNT;
80000de4:	000f47b7          	lui	a5,0xf4
80000de8:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000dec:	c63e                	sw	a5,12(sp)
SPI_FlagStatus():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:366
    return (FlagStatus)READ_BIT(SPIx->SR, Flag);
80000dee:	200507b7          	lui	a5,0x20050
80000df2:	47dc                	lw	a5,12(a5)
80000df4:	8b91                	andi	a5,a5,4
80000df6:	cf81                	beqz	a5,80000e0e <spi_receive+0x44>
SPI_RecieveData():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:350
    return READ_REG(SPIx->DR);
80000df8:	200507b7          	lui	a5,0x20050
80000dfc:	4794                	lw	a3,8(a5)
spi_receive():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:259 (discriminator 1)
        while (SPI_FlagStatus(SPI0, SPI_Flag_RxFIFONotEmpty) == CLEAR) {
            if (--timeout == 0) return SX126X_HAL_STATUS_ERROR;
        }
        buffer[i] = (uint8_t)SPI_RecieveData(SPI0);  // Read byte
80000dfe:	00e587b3          	add	a5,a1,a4
80000e02:	00d78023          	sb	a3,0(a5) # 20050000 <retarget.c.370f3c8d+0x2003c82e>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:250 (discriminator 2)
    for (i = 0; i < length; i++) {
80000e06:	0705                	addi	a4,a4,1 # 20050001 <retarget.c.370f3c8d+0x2003c82f>
80000e08:	0742                	slli	a4,a4,0x10
80000e0a:	8341                	srli	a4,a4,0x10
80000e0c:	b7f1                	j	80000dd8 <spi_receive+0xe>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:257
            if (--timeout == 0) return SX126X_HAL_STATUS_ERROR;
80000e0e:	47b2                	lw	a5,12(sp)
80000e10:	17fd                	addi	a5,a5,-1
80000e12:	c63e                	sw	a5,12(sp)
80000e14:	ffe9                	bnez	a5,80000dee <spi_receive+0x24>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:257 (discriminator 1)
80000e16:	450d                	li	a0,3
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:269
    while (SPI_FlagStatus(SPI0, SPI_Flag_Busy) == SET) {
        if (--timeout == 0) return SX126X_HAL_STATUS_ERROR;
    }

    return SX126X_HAL_STATUS_OK;
}
80000e18:	0141                	addi	sp,sp,16
80000e1a:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:263
    timeout = SX126X_TIMEOUT_COUNT;
80000e1c:	000f47b7          	lui	a5,0xf4
80000e20:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.370f3c8d+0xe0a6e>
80000e24:	c63e                	sw	a5,12(sp)
SPI_FlagStatus():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:366
    return (FlagStatus)READ_BIT(SPIx->SR, Flag);
80000e26:	200507b7          	lui	a5,0x20050
80000e2a:	47c8                	lw	a0,12(a5)
80000e2c:	8941                	andi	a0,a0,16
80000e2e:	d56d                	beqz	a0,80000e18 <spi_receive+0x4e>
spi_receive():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:265
        if (--timeout == 0) return SX126X_HAL_STATUS_ERROR;
80000e30:	47b2                	lw	a5,12(sp)
80000e32:	17fd                	addi	a5,a5,-1 # 2004ffff <retarget.c.370f3c8d+0x2003c82d>
80000e34:	c63e                	sw	a5,12(sp)
80000e36:	fbe5                	bnez	a5,80000e26 <spi_receive+0x5c>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:265 (discriminator 1)
80000e38:	450d                	li	a0,3
80000e3a:	bff9                	j	80000e18 <spi_receive+0x4e>

80000e3c <sx126x_hal_read>:
sx126x_hal_read():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:121
{
80000e3c:	1101                	addi	sp,sp,-32
80000e3e:	ce06                	sw	ra,28(sp)
80000e40:	cc22                	sw	s0,24(sp)
80000e42:	ca26                	sw	s1,20(sp)
80000e44:	c84a                	sw	s2,16(sp)
80000e46:	c64e                	sw	s3,12(sp)
80000e48:	89ae                	mv	s3,a1
80000e4a:	84b2                	mv	s1,a2
80000e4c:	8936                	mv	s2,a3
80000e4e:	843a                	mv	s0,a4
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:124
    sx126x_hal_check_device_ready(ctx);
80000e50:	4501                	li	a0,0
80000e52:	3ba9                	jal	80000bac <sx126x_hal_check_device_ready>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:128
    sx126x_hal_nss_low(ctx);
80000e54:	4501                	li	a0,0
80000e56:	3b2d                	jal	80000b90 <sx126x_hal_nss_low>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:131
    if (command_length > 0) {
80000e58:	e08d                	bnez	s1,80000e7a <sx126x_hal_read+0x3e>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:139
    if (data_length > 0) {
80000e5a:	c411                	beqz	s0,80000e66 <sx126x_hal_read+0x2a>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:140
        if (spi_receive(ctx, data, data_length) != SX126X_HAL_STATUS_OK) {
80000e5c:	8622                	mv	a2,s0
80000e5e:	85ca                	mv	a1,s2
80000e60:	4501                	li	a0,0
80000e62:	37a5                	jal	80000dca <spi_receive>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:140 (discriminator 1)
80000e64:	e505                	bnez	a0,80000e8c <sx126x_hal_read+0x50>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:147
    sx126x_hal_nss_high(ctx);
80000e66:	4501                	li	a0,0
80000e68:	3b1d                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:149
    return SX126X_HAL_STATUS_OK;
80000e6a:	4501                	li	a0,0
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:150
}
80000e6c:	40f2                	lw	ra,28(sp)
80000e6e:	4462                	lw	s0,24(sp)
80000e70:	44d2                	lw	s1,20(sp)
80000e72:	4942                	lw	s2,16(sp)
80000e74:	49b2                	lw	s3,12(sp)
80000e76:	6105                	addi	sp,sp,32
80000e78:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:132
        if (spi_transmit(ctx, command, command_length) != SX126X_HAL_STATUS_OK) {
80000e7a:	8626                	mv	a2,s1
80000e7c:	85ce                	mv	a1,s3
80000e7e:	4501                	li	a0,0
80000e80:	3b99                	jal	80000bd6 <spi_transmit>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:132 (discriminator 1)
80000e82:	dd61                	beqz	a0,80000e5a <sx126x_hal_read+0x1e>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:133
            sx126x_hal_nss_high(ctx);
80000e84:	4501                	li	a0,0
80000e86:	3b21                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:134
            return SX126X_HAL_STATUS_ERROR;
80000e88:	450d                	li	a0,3
80000e8a:	b7cd                	j	80000e6c <sx126x_hal_read+0x30>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:141
            sx126x_hal_nss_high(ctx);
80000e8c:	4501                	li	a0,0
80000e8e:	3b01                	jal	80000b9e <sx126x_hal_nss_high>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x_hal.c:142
            return SX126X_HAL_STATUS_ERROR;
80000e90:	450d                	li	a0,3
80000e92:	bfe9                	j	80000e6c <sx126x_hal_read+0x30>

80000e94 <sx126x_read_register>:
sx126x_read_register():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:466
{
80000e94:	1101                	addi	sp,sp,-32
80000e96:	ce06                	sw	ra,28(sp)
80000e98:	8736                	mv	a4,a3
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:467
    const uint8_t buf[SX126X_SIZE_READ_REGISTER] = {
80000e9a:	47f5                	li	a5,29
80000e9c:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:469
        ( uint8_t )( address >> 8 ),
80000ea0:	0085d793          	srli	a5,a1,0x8
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:467
    const uint8_t buf[SX126X_SIZE_READ_REGISTER] = {
80000ea4:	00f106a3          	sb	a5,13(sp)
80000ea8:	00b10723          	sb	a1,14(sp)
80000eac:	000107a3          	sb	zero,15(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:474
    return ( sx126x_status_t ) sx126x_hal_read( context, buf, SX126X_SIZE_READ_REGISTER, buffer, size );
80000eb0:	86b2                	mv	a3,a2
80000eb2:	4611                	li	a2,4
80000eb4:	006c                	addi	a1,sp,12
80000eb6:	3759                	jal	80000e3c <sx126x_hal_read>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:475
}
80000eb8:	40f2                	lw	ra,28(sp)
80000eba:	6105                	addi	sp,sp,32
80000ebc:	8082                	ret

80000ebe <sx126x_set_lora_pkt_params>:
sx126x_set_lora_pkt_params():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:730
{
80000ebe:	1101                	addi	sp,sp,-32
80000ec0:	ce06                	sw	ra,28(sp)
80000ec2:	cc22                	sw	s0,24(sp)
80000ec4:	ca26                	sw	s1,20(sp)
80000ec6:	84aa                	mv	s1,a0
80000ec8:	842e                	mv	s0,a1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000eca:	f8c00793          	li	a5,-116
80000ece:	00f10423          	sb	a5,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:733
        ( uint8_t )( params->preamble_len_in_symb >> 8 ),
80000ed2:	0005d783          	lhu	a5,0(a1)
80000ed6:	0087d713          	srli	a4,a5,0x8
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000eda:	00e104a3          	sb	a4,9(sp)
80000ede:	00f10523          	sb	a5,10(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:735
        ( uint8_t )( params->header_type ),
80000ee2:	0045c783          	lbu	a5,4(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000ee6:	00f105a3          	sb	a5,11(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:736
        params->pld_len_in_bytes,
80000eea:	0085c783          	lbu	a5,8(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000eee:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:737
        ( uint8_t )( params->crc_is_on ? 1 : 0 ),
80000ef2:	0095c783          	lbu	a5,9(a1)
80000ef6:	c795                	beqz	a5,80000f22 <sx126x_set_lora_pkt_params+0x64>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:737 (discriminator 1)
80000ef8:	4785                	li	a5,1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000efa:	00f106a3          	sb	a5,13(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:738
        ( uint8_t )( params->invert_iq_is_on ? 1 : 0 ),
80000efe:	00a44783          	lbu	a5,10(s0)
80000f02:	c395                	beqz	a5,80000f26 <sx126x_set_lora_pkt_params+0x68>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:738 (discriminator 1)
80000f04:	4785                	li	a5,1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:731
    const uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = {
80000f06:	00f10723          	sb	a5,14(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:742
        ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PKT_PARAMS_LORA, 0, 0 );
80000f0a:	4701                	li	a4,0
80000f0c:	4681                	li	a3,0
80000f0e:	461d                	li	a2,7
80000f10:	002c                	addi	a1,sp,8
80000f12:	8526                	mv	a0,s1
80000f14:	3331                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:745
    if( status == SX126X_STATUS_OK )
80000f16:	c911                	beqz	a0,80000f2a <sx126x_set_lora_pkt_params+0x6c>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:766
}
80000f18:	40f2                	lw	ra,28(sp)
80000f1a:	4462                	lw	s0,24(sp)
80000f1c:	44d2                	lw	s1,20(sp)
80000f1e:	6105                	addi	sp,sp,32
80000f20:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:737 (discriminator 2)
        ( uint8_t )( params->crc_is_on ? 1 : 0 ),
80000f22:	4781                	li	a5,0
80000f24:	bfd9                	j	80000efa <sx126x_set_lora_pkt_params+0x3c>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:738 (discriminator 2)
        ( uint8_t )( params->invert_iq_is_on ? 1 : 0 ),
80000f26:	4781                	li	a5,0
80000f28:	bff9                	j	80000f06 <sx126x_set_lora_pkt_params+0x48>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:747
        uint8_t reg_value = 0;
80000f2a:	000103a3          	sb	zero,7(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:749
        status = sx126x_read_register( context, SX126X_REG_IQ_POLARITY, &reg_value, 1 );
80000f2e:	4685                	li	a3,1
80000f30:	00710613          	addi	a2,sp,7
80000f34:	73600593          	li	a1,1846
80000f38:	8526                	mv	a0,s1
80000f3a:	3fa9                	jal	80000e94 <sx126x_read_register>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:750
        if( status == SX126X_STATUS_OK )
80000f3c:	fd71                	bnez	a0,80000f18 <sx126x_set_lora_pkt_params+0x5a>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:752
            if( params->invert_iq_is_on == true )
80000f3e:	00a44783          	lbu	a5,10(s0)
80000f42:	cf91                	beqz	a5,80000f5e <sx126x_set_lora_pkt_params+0xa0>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:754
                reg_value &= ~( 1 << 2 );  // Bit 2 set to 0 when using inverted IQ polarity
80000f44:	00714783          	lbu	a5,7(sp)
80000f48:	9bed                	andi	a5,a5,-5
80000f4a:	00f103a3          	sb	a5,7(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:760
            status = sx126x_write_register( context, SX126X_REG_IQ_POLARITY, &reg_value, 1 );
80000f4e:	4685                	li	a3,1
80000f50:	00710613          	addi	a2,sp,7
80000f54:	73600593          	li	a1,1846
80000f58:	8526                	mv	a0,s1
80000f5a:	3b55                	jal	80000d0e <sx126x_write_register>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:765
    return status;
80000f5c:	bf75                	j	80000f18 <sx126x_set_lora_pkt_params+0x5a>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:758
                reg_value |= ( 1 << 2 );  // Bit 2 set to 1 when using standard IQ polarity
80000f5e:	00714783          	lbu	a5,7(sp)
80000f62:	0047e793          	ori	a5,a5,4
80000f66:	00f103a3          	sb	a5,7(sp)
80000f6a:	b7d5                	j	80000f4e <sx126x_set_lora_pkt_params+0x90>

80000f6c <sx126x_tx_modulation_workaround>:
sx126x_tx_modulation_workaround():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1496
 * --- PRIVATE FUNCTIONS DEFINITION --------------------------------------------
 */

static sx126x_status_t sx126x_tx_modulation_workaround( const void* context, sx126x_pkt_type_t pkt_type,
                                                        sx126x_lora_bw_t bw )
{
80000f6c:	1101                	addi	sp,sp,-32
80000f6e:	ce06                	sw	ra,28(sp)
80000f70:	cc22                	sw	s0,24(sp)
80000f72:	ca26                	sw	s1,20(sp)
80000f74:	c84a                	sw	s2,16(sp)
80000f76:	892a                	mv	s2,a0
80000f78:	842e                	mv	s0,a1
80000f7a:	84b2                	mv	s1,a2
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1497
    uint8_t reg_value = 0;
80000f7c:	000107a3          	sb	zero,15(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1499

    sx126x_status_t status = sx126x_read_register( context, SX126X_REG_TX_MODULATION, &reg_value, 1 );
80000f80:	4685                	li	a3,1
80000f82:	00f10613          	addi	a2,sp,15
80000f86:	6585                	lui	a1,0x1
80000f88:	88958593          	addi	a1,a1,-1911 # 889 <STACK_SIZE+0x89>
80000f8c:	3721                	jal	80000e94 <sx126x_read_register>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1501

    if( status == SX126X_STATUS_OK )
80000f8e:	e115                	bnez	a0,80000fb2 <sx126x_tx_modulation_workaround+0x46>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1503
    {
        if( pkt_type == SX126X_PKT_TYPE_LORA )
80000f90:	4785                	li	a5,1
80000f92:	02f40663          	beq	s0,a5,80000fbe <sx126x_tx_modulation_workaround+0x52>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1516
                reg_value |= ( 1 << 2 );  // Bit 2 set to 1 for any other LoRa BW
            }
        }
        else
        {
            reg_value |= ( 1 << 2 );  // Bit 2 set to 1 for any (G)FSK configuration
80000f96:	00f14783          	lbu	a5,15(sp)
80000f9a:	0047e793          	ori	a5,a5,4
80000f9e:	00f107a3          	sb	a5,15(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1519
        }

        status = sx126x_write_register( context, SX126X_REG_TX_MODULATION, &reg_value, 1 );
80000fa2:	4685                	li	a3,1
80000fa4:	00f10613          	addi	a2,sp,15
80000fa8:	6585                	lui	a1,0x1
80000faa:	88958593          	addi	a1,a1,-1911 # 889 <STACK_SIZE+0x89>
80000fae:	854a                	mv	a0,s2
80000fb0:	3bb9                	jal	80000d0e <sx126x_write_register>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1522
    }
    return status;
}
80000fb2:	40f2                	lw	ra,28(sp)
80000fb4:	4462                	lw	s0,24(sp)
80000fb6:	44d2                	lw	s1,20(sp)
80000fb8:	4942                	lw	s2,16(sp)
80000fba:	6105                	addi	sp,sp,32
80000fbc:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1505
            if( bw == SX126X_LORA_BW_500 )
80000fbe:	4799                	li	a5,6
80000fc0:	00f48963          	beq	s1,a5,80000fd2 <sx126x_tx_modulation_workaround+0x66>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1511
                reg_value |= ( 1 << 2 );  // Bit 2 set to 1 for any other LoRa BW
80000fc4:	00f14783          	lbu	a5,15(sp)
80000fc8:	0047e793          	ori	a5,a5,4
80000fcc:	00f107a3          	sb	a5,15(sp)
80000fd0:	bfc9                	j	80000fa2 <sx126x_tx_modulation_workaround+0x36>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:1507
                reg_value &= ~( 1 << 2 );  // Bit 2 set to 0 if the LoRa BW = 500 kHz
80000fd2:	00f14783          	lbu	a5,15(sp)
80000fd6:	9bed                	andi	a5,a5,-5
80000fd8:	00f107a3          	sb	a5,15(sp)
80000fdc:	b7d9                	j	80000fa2 <sx126x_tx_modulation_workaround+0x36>

80000fde <sx126x_set_lora_mod_params>:
sx126x_set_lora_mod_params():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:669
{
80000fde:	1101                	addi	sp,sp,-32
80000fe0:	ce06                	sw	ra,28(sp)
80000fe2:	cc22                	sw	s0,24(sp)
80000fe4:	ca26                	sw	s1,20(sp)
80000fe6:	84aa                	mv	s1,a0
80000fe8:	842e                	mv	s0,a1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:670
    const uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = {
80000fea:	f8b00793          	li	a5,-117
80000fee:	00f10423          	sb	a5,8(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:671
        SX126X_SET_MODULATION_PARAMS, ( uint8_t )( params->sf ), ( uint8_t )( params->bw ),
80000ff2:	0005c783          	lbu	a5,0(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:670
    const uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = {
80000ff6:	00f104a3          	sb	a5,9(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:671
        SX126X_SET_MODULATION_PARAMS, ( uint8_t )( params->sf ), ( uint8_t )( params->bw ),
80000ffa:	0045c783          	lbu	a5,4(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:670
    const uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = {
80000ffe:	00f10523          	sb	a5,10(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:672
        ( uint8_t )( params->cr ),    params->ldro & 0x01,
80001002:	0085c783          	lbu	a5,8(a1)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:670
    const uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = {
80001006:	00f105a3          	sb	a5,11(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:672
        ( uint8_t )( params->cr ),    params->ldro & 0x01,
8000100a:	00c5c783          	lbu	a5,12(a1)
8000100e:	8b85                	andi	a5,a5,1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:670
    const uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = {
80001010:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:676
        ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_MODULATION_PARAMS_LORA, 0, 0 );
80001014:	4701                	li	a4,0
80001016:	4681                	li	a3,0
80001018:	4615                	li	a2,5
8000101a:	002c                	addi	a1,sp,8
8000101c:	3111                	jal	80000c20 <sx126x_hal_write>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:678
    if( status == SX126X_STATUS_OK )
8000101e:	c511                	beqz	a0,8000102a <sx126x_set_lora_mod_params+0x4c>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:686
}
80001020:	40f2                	lw	ra,28(sp)
80001022:	4462                	lw	s0,24(sp)
80001024:	44d2                	lw	s1,20(sp)
80001026:	6105                	addi	sp,sp,32
80001028:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:681
        status = sx126x_tx_modulation_workaround( context, SX126X_PKT_TYPE_LORA, params->bw );
8000102a:	4050                	lw	a2,4(s0)
8000102c:	4585                	li	a1,1
8000102e:	8526                	mv	a0,s1
80001030:	3f35                	jal	80000f6c <sx126x_tx_modulation_workaround>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:685
    return status;
80001032:	b7fd                	j	80001020 <sx126x_set_lora_mod_params+0x42>

80001034 <sx126x_get_status>:
sx126x_get_status():
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:840
{
80001034:	1101                	addi	sp,sp,-32
80001036:	ce06                	sw	ra,28(sp)
80001038:	cc22                	sw	s0,24(sp)
8000103a:	842e                	mv	s0,a1
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:841
    const uint8_t buf[SX126X_SIZE_GET_STATUS] = {
8000103c:	fc000793          	li	a5,-64
80001040:	00f10623          	sb	a5,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:844
    uint8_t status_local = 0;
80001044:	000105a3          	sb	zero,11(sp)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:847
        ( sx126x_status_t ) sx126x_hal_read( context, buf, SX126X_SIZE_GET_STATUS, &status_local, 1 );
80001048:	4705                	li	a4,1
8000104a:	00b10693          	addi	a3,sp,11
8000104e:	863a                	mv	a2,a4
80001050:	006c                	addi	a1,sp,12
80001052:	33ed                	jal	80000e3c <sx126x_hal_read>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:849
    if( status == SX126X_STATUS_OK )
80001054:	e911                	bnez	a0,80001068 <sx126x_get_status+0x34>
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:852
            ( sx126x_cmd_status_t )( ( status_local & SX126X_CMD_STATUS_MASK ) >> SX126X_CMD_STATUS_POS );
80001056:	00b14783          	lbu	a5,11(sp)
8000105a:	0017d713          	srli	a4,a5,0x1
8000105e:	8b1d                	andi	a4,a4,7
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:851
        radio_status->cmd_status =
80001060:	c018                	sw	a4,0(s0)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:854
            ( sx126x_chip_modes_t )( ( status_local & SX126X_CHIP_MODES_MASK ) >> SX126X_CHIP_MODES_POS );
80001062:	8391                	srli	a5,a5,0x4
80001064:	8b9d                	andi	a5,a5,7
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:853
        radio_status->chip_mode =
80001066:	c05c                	sw	a5,4(s0)
D:\workspace\NIIET\SX1262_test\Debug/../Src/sx126x.c:858
}
80001068:	40f2                	lw	ra,28(sp)
8000106a:	4462                	lw	s0,24(sp)
8000106c:	6105                	addi	sp,sp,32
8000106e:	8082                	ret

80001070 <gpio_init>:
gpio_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:75
void TMR32_IRQHandler();
void SPI0_IRQHandler();
void GPIO_IRQHandler();

void gpio_init()
{
80001070:	1141                	addi	sp,sp,-16
80001072:	c606                	sw	ra,12(sp)
80001074:	c422                	sw	s0,8(sp)
RCU_AHBClkCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448
__STATIC_INLINE void RCU_AHBClkCmd(uint32_t AHBClk, FunctionalState State)
{
    assert_param(IS_RCU_AHB_CLK(AHBClk));
    assert_param(IS_FUNCTIONAL_STATE(State));

    MODIFY_REG(RCU->CGCFGAHB, AHBClk, State ? AHBClk : 0);
80001076:	3000e7b7          	lui	a5,0x3000e
8000107a:	4398                	lw	a4,0(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448 (discriminator 4)
8000107c:	40076713          	ori	a4,a4,1024
80001080:	c398                	sw	a4,0(a5)
RCU_AHBRstCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476
__STATIC_INLINE void RCU_AHBRstCmd(uint32_t AHBRst, FunctionalState State)
{
    assert_param(IS_RCU_AHB_RST(AHBRst));
    assert_param(IS_FUNCTIONAL_STATE(State));

    MODIFY_REG(RCU->RSTDISAHB, AHBRst, State ? AHBRst : 0);
80001082:	4b98                	lw	a4,16(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476 (discriminator 4)
80001084:	40076713          	ori	a4,a4,1024
80001088:	cb98                	sw	a4,16(a5)
GPIO_OutCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:259
        WRITE_REG(GPIOx->OUTENSET, Pin);
8000108a:	280026b7          	lui	a3,0x28002
8000108e:	6741                	lui	a4,0x10
80001090:	177d                	addi	a4,a4,-1 # ffff <main.c.494f4ad7+0xcb5>
80001092:	d6d8                	sw	a4,44(a3)
RCU_AHBClkCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448
    MODIFY_REG(RCU->CGCFGAHB, AHBClk, State ? AHBClk : 0);
80001094:	4398                	lw	a4,0(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448 (discriminator 4)
80001096:	20076713          	ori	a4,a4,512
8000109a:	c398                	sw	a4,0(a5)
RCU_AHBRstCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476
    MODIFY_REG(RCU->RSTDISAHB, AHBRst, State ? AHBRst : 0);
8000109c:	4b98                	lw	a4,16(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476 (discriminator 4)
8000109e:	20076713          	ori	a4,a4,512
800010a2:	cb98                	sw	a4,16(a5)
GPIO_SyncCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:550
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GPIO_PIN(Pin));
    assert_param(IS_FUNCTIONAL_STATE(State));

    if (State == ENABLE)
        WRITE_REG(GPIOx->SYNCSET, Pin);
800010a4:	28001437          	lui	s0,0x28001
800010a8:	6585                	lui	a1,0x1
800010aa:	c06c                	sw	a1,68(s0)
gpio_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:83
    GPIO_OutCmd(GPIOC, GPIO_Pin_All, ENABLE);

    RCU_AHBClkCmd(RCU_AHBClk_GPIOB, ENABLE);
    RCU_AHBRstCmd(RCU_AHBRst_GPIOB, ENABLE);
    GPIO_SyncCmd(GPIOB, GPIO_Pin_12, ENABLE);
    GPIO_PullModeConfig(GPIOB, GPIO_Pin_12, GPIO_PullMode_PU);
800010ac:	4605                	li	a2,1
800010ae:	8522                	mv	a0,s0
800010b0:	a54ff0ef          	jal	80000304 <GPIO_PullModeConfig>
GPIO_OutCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:259
        WRITE_REG(GPIOx->OUTENSET, Pin);
800010b4:	04000793          	li	a5,64
800010b8:	d45c                	sw	a5,44(s0)
GPIO_ITTypeConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:577
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GPIO_PIN(Pin));
    assert_param(IS_GPIO_INT_TYPE(IntType));

    if (IntType == GPIO_IntType_Edge)
        WRITE_REG(GPIOx->INTTYPESET, Pin);
800010ba:	10000793          	li	a5,256
800010be:	d43c                	sw	a5,104(s0)
GPIO_ITCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:634
    assert_param(IS_GPIO_PERIPH(GPIOx));
    assert_param(IS_GPIO_PIN(Pin));
    assert_param(IS_FUNCTIONAL_STATE(State));

    if (State == ENABLE)
        WRITE_REG(GPIOx->INTENSET, Pin);
800010c0:	d03c                	sw	a5,96(s0)
gpio_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:90
    GPIO_OutCmd(NSSPort, NSSPin, ENABLE);

    GPIO_ITTypeConfig(DIO1Port, DIO1Pin, GPIO_IntType_Edge);
    GPIO_ITCmd(DIO1Port, DIO1Pin, ENABLE);

    PLIC_SetIrqHandler (Plic_Mach_Target, IsrVect_IRQ_GPIO, GPIO_IRQHandler);
800010c2:	80001637          	lui	a2,0x80001
800010c6:	0ea60613          	addi	a2,a2,234 # 800010ea <GPIO_IRQHandler>
800010ca:	4595                	li	a1,5
800010cc:	4501                	li	a0,0
800010ce:	adaff0ef          	jal	800003a8 <PLIC_SetIrqHandler>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:91
	PLIC_SetPriority   (IsrVect_IRQ_GPIO, 0x3);
800010d2:	458d                	li	a1,3
800010d4:	4515                	li	a0,5
800010d6:	aecff0ef          	jal	800003c2 <PLIC_SetPriority>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:92
	PLIC_IntEnable     (Plic_Mach_Target, IsrVect_IRQ_GPIO);
800010da:	4595                	li	a1,5
800010dc:	4501                	li	a0,0
800010de:	af0ff0ef          	jal	800003ce <PLIC_IntEnable>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:94

}
800010e2:	40b2                	lw	ra,12(sp)
800010e4:	4422                	lw	s0,8(sp)
800010e6:	0141                	addi	sp,sp,16
800010e8:	8082                	ret

800010ea <GPIO_IRQHandler>:
GPIO_ITStatusClear():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:663
  */
__STATIC_INLINE void GPIO_ITStatusClear(GPIO_TypeDef* GPIOx, uint32_t Pin)
{
    assert_param(IS_GPIO_PIN(Pin));

    WRITE_REG(GPIOx->INTSTATUS, Pin);
800010ea:	280017b7          	lui	a5,0x28001
800010ee:	10000713          	li	a4,256
800010f2:	08e7a023          	sw	a4,128(a5) # 28001080 <retarget.c.370f3c8d+0x27fed8ae>
GPIO_IRQHandler():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:270

void GPIO_IRQHandler() {

	GPIO_ITStatusClear(DIO1Port, DIO1Pin);

}
800010f6:	8082                	ret

800010f8 <SPI0_init>:
SPI0_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:115
void SPI0_init() {
800010f8:	7179                	addi	sp,sp,-48
800010fa:	d606                	sw	ra,44(sp)
800010fc:	d422                	sw	s0,40(sp)
800010fe:	d226                	sw	s1,36(sp)
RCU_AHBClkCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448
    MODIFY_REG(RCU->CGCFGAHB, AHBClk, State ? AHBClk : 0);
80001100:	3000e7b7          	lui	a5,0x3000e
80001104:	4398                	lw	a4,0(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448 (discriminator 4)
80001106:	20076713          	ori	a4,a4,512
8000110a:	c398                	sw	a4,0(a5)
RCU_AHBRstCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476
    MODIFY_REG(RCU->RSTDISAHB, AHBRst, State ? AHBRst : 0);
8000110c:	4b98                	lw	a4,16(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476 (discriminator 4)
8000110e:	20076713          	ori	a4,a4,512
80001112:	cb98                	sw	a4,16(a5)
RCU_AHBClkCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448
    MODIFY_REG(RCU->CGCFGAHB, AHBClk, State ? AHBClk : 0);
80001114:	4398                	lw	a4,0(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:448 (discriminator 4)
80001116:	02076713          	ori	a4,a4,32
8000111a:	c398                	sw	a4,0(a5)
RCU_AHBRstCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476
    MODIFY_REG(RCU->RSTDISAHB, AHBRst, State ? AHBRst : 0);
8000111c:	4b98                	lw	a4,16(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:476 (discriminator 4)
8000111e:	02076713          	ori	a4,a4,32
80001122:	cb98                	sw	a4,16(a5)
RCU_SPIClkConfig():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:798
{
    assert_param(IS_RCU_PERIPH_CLK(SPIClk));
    assert_param(IS_RCU_PERIPH_DIV(DivVal));
    assert_param(IS_FUNCTIONAL_STATE(DivState));

    MODIFY_REG(RCU->SPICLKCFG[SPIx_Num].SPICLKCFG, (RCU_SPICLKCFG_CLKSEL_Msk | RCU_SPICLKCFG_DIVN_Msk | RCU_SPICLKCFG_DIVEN_Msk),
80001124:	0947a703          	lw	a4,148(a5) # 3000e094 <retarget.c.370f3c8d+0x2fffa8c2>
80001128:	c0ed06b7          	lui	a3,0xc0ed0
8000112c:	16fd                	addi	a3,a3,-1 # c0ecffff <__data_source_start+0x40ece2b3>
8000112e:	8f75                	and	a4,a4,a3
80001130:	020106b7          	lui	a3,0x2010
80001134:	8f55                	or	a4,a4,a3
80001136:	08e7aa23          	sw	a4,148(a5)
RCU_SPIClkCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:812
  */
__STATIC_INLINE void RCU_SPIClkCmd(SPI_Num_TypeDef SPIx_Num, FunctionalState State)
{
    assert_param(IS_FUNCTIONAL_STATE(State));

    WRITE_REG(RCU->SPICLKCFG[SPIx_Num].SPICLKCFG_bit.CLKEN, State);
8000113a:	0947a703          	lw	a4,148(a5)
8000113e:	00176713          	ori	a4,a4,1
80001142:	08e7aa23          	sw	a4,148(a5)
RCU_SPIRstCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_rcu.h:825
  */
__STATIC_INLINE void RCU_SPIRstCmd(SPI_Num_TypeDef SPIx_Num, FunctionalState State)
{
    assert_param(IS_FUNCTIONAL_STATE(State));

    WRITE_REG(RCU->SPICLKCFG[SPIx_Num].SPICLKCFG_bit.RSTDIS, State);
80001146:	0947a703          	lw	a4,148(a5)
8000114a:	10076713          	ori	a4,a4,256
8000114e:	08e7aa23          	sw	a4,148(a5)
SPI0_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:126
	SPI0->CPSR_bit.CPSDVSR = 6;//Коэффициент деления первого делителя
80001152:	20050437          	lui	s0,0x20050
80001156:	4799                	li	a5,6
80001158:	00f40823          	sb	a5,16(s0) # 20050010 <retarget.c.370f3c8d+0x2003c83e>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:132
	SPI_StructInit(&spi_struct);
8000115c:	0064                	addi	s1,sp,12
8000115e:	8526                	mv	a0,s1
80001160:	a32ff0ef          	jal	80000392 <SPI_StructInit>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:134
	SPI_Init(SPI0, &spi_struct); // настройка режима работы SPI
80001164:	85a6                	mv	a1,s1
80001166:	8522                	mv	a0,s0
80001168:	9e6ff0ef          	jal	8000034e <SPI_Init>
GPIO_AltFuncCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:278
        WRITE_REG(GPIOx->ALTFUNCSET, Pin);
8000116c:	28001537          	lui	a0,0x28001
80001170:	45bd                	li	a1,15
80001172:	d94c                	sw	a1,52(a0)
SPI0_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:142
	GPIO_AltFuncNumConfig(
80001174:	4605                	li	a2,1
80001176:	99cff0ef          	jal	80000312 <GPIO_AltFuncNumConfig>
SPI_ITCmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:420
__STATIC_INLINE void SPI_ITCmd(SPI_TypeDef* SPIx, uint32_t ITSource, FunctionalState State)
{
    assert_param(IS_SPI_PERIPH(SPIx));
    assert_param(IS_SPI_IT_SOURCE(ITSource));

    MODIFY_REG(SPIx->IMSC, ITSource, State ? ITSource : 0);
8000117a:	485c                	lw	a5,20(s0)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:420 (discriminator 4)
8000117c:	0017e793          	ori	a5,a5,1
80001180:	c85c                	sw	a5,20(s0)
SPI0_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:150
	PLIC_SetIrqHandler (Plic_Mach_Target, IsrVect_IRQ_SPI0, SPI0_IRQHandler);
80001182:	80001637          	lui	a2,0x80001
80001186:	1b860613          	addi	a2,a2,440 # 800011b8 <SPI0_IRQHandler>
8000118a:	45ad                	li	a1,11
8000118c:	4501                	li	a0,0
8000118e:	a1aff0ef          	jal	800003a8 <PLIC_SetIrqHandler>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:151
	PLIC_SetPriority   (IsrVect_IRQ_SPI0, 0x2);
80001192:	4589                	li	a1,2
80001194:	452d                	li	a0,11
80001196:	a2cff0ef          	jal	800003c2 <PLIC_SetPriority>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:152
	PLIC_IntEnable     (Plic_Mach_Target, IsrVect_IRQ_SPI0);
8000119a:	45ad                	li	a1,11
8000119c:	4501                	li	a0,0
8000119e:	a30ff0ef          	jal	800003ce <PLIC_IntEnable>
SPI_Cmd():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:213
    WRITE_REG(SPIx->CR1_bit.SSE, State);
800011a2:	00445783          	lhu	a5,4(s0)
800011a6:	0027e793          	ori	a5,a5,2
800011aa:	00f41223          	sh	a5,4(s0)
SPI0_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:157
}
800011ae:	50b2                	lw	ra,44(sp)
800011b0:	5422                	lw	s0,40(sp)
800011b2:	5492                	lw	s1,36(sp)
800011b4:	6145                	addi	sp,sp,48
800011b6:	8082                	ret

800011b8 <SPI0_IRQHandler>:
SPI_ITStatusClear():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_spi.h:467
__STATIC_INLINE void SPI_ITStatusClear(SPI_TypeDef* SPIx, uint32_t ITSource)
{
    assert_param(IS_SPI_PERIPH(SPIx));
    assert_param(IS_SPI_IT_SOURCE(ITSource));

    WRITE_REG(SPIx->ICR, ITSource);
800011b8:	200507b7          	lui	a5,0x20050
800011bc:	4705                	li	a4,1
800011be:	d398                	sw	a4,32(a5)
SPI0_IRQHandler():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:264
}
800011c0:	8082                	ret

800011c2 <retarget_init>:
retarget_init():
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:31
#if defined RETARGET
    uint32_t baud_icoef = SystemCoreClock_uart / (16 * RETARGET_UART_BAUD);
    uint32_t baud_fcoef = ((SystemCoreClock_uart / (16.0f * RETARGET_UART_BAUD) - baud_icoef) * 64 + 0.5f);
    uint32_t uartclk_ref = 1;//RCU_UARTCFG_UARTCFG_CLKSEL_OSICLK;

    RCU->CGCFGAHB_bit.GPIOAEN = 1;
800011c2:	3000e7b7          	lui	a5,0x3000e
800011c6:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.370f3c8d+0x2fffa82e>
800011ca:	10076713          	ori	a4,a4,256
800011ce:	00e79023          	sh	a4,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:32
    RCU->RSTDISAHB_bit.GPIOAEN = 1;
800011d2:	0107d703          	lhu	a4,16(a5)
800011d6:	10076713          	ori	a4,a4,256
800011da:	00e79823          	sh	a4,16(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:33
    RCU->CGCFGAPB_bit.UART0EN = 1;
800011de:	4798                	lw	a4,8(a5)
800011e0:	04076713          	ori	a4,a4,64
800011e4:	c798                	sw	a4,8(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:34
    RCU->RSTDISAPB_bit.UART0EN = 1;
800011e6:	4f98                	lw	a4,24(a5)
800011e8:	04076713          	ori	a4,a4,64
800011ec:	cf98                	sw	a4,24(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:36

    RETARGET_UART_PORT->ALTFUNCNUM_bit.PIN0 = 1;
800011ee:	28000737          	lui	a4,0x28000
800011f2:	5f54                	lw	a3,60(a4)
800011f4:	9af1                	andi	a3,a3,-4
800011f6:	0016e693          	ori	a3,a3,1
800011fa:	df54                	sw	a3,60(a4)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:37
    RETARGET_UART_PORT->ALTFUNCNUM_bit.PIN1 = 1;
800011fc:	5f54                	lw	a3,60(a4)
800011fe:	9acd                	andi	a3,a3,-13
80001200:	0046e693          	ori	a3,a3,4
80001204:	df54                	sw	a3,60(a4)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:38
    RETARGET_UART_PORT->ALTFUNCSET = (1 << RETARGET_UART_PIN_TX_POS) | (1 << RETARGET_UART_PIN_RX_POS);
80001206:	468d                	li	a3,3
80001208:	db54                	sw	a3,52(a4)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:39
    RCU->UARTCLKCFG[RETARGET_UART_NUM].UARTCLKCFG = (uartclk_ref << RCU_UARTCLKCFG_CLKSEL_Pos) |
8000120a:	6741                	lui	a4,0x10
8000120c:	10170713          	addi	a4,a4,257 # 10101 <main.c.494f4ad7+0xdb7>
80001210:	dbb8                	sw	a4,112(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:42
                                              	  	  RCU_UARTCLKCFG_CLKEN_Msk |
													  RCU_UARTCLKCFG_RSTDIS_Msk;
    RETARGET_UART->IBRD = baud_icoef;
80001212:	300067b7          	lui	a5,0x30006
80001216:	4719                	li	a4,6
80001218:	d3d8                	sw	a4,36(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:43
    RETARGET_UART->FBRD = baud_fcoef;
8000121a:	02100713          	li	a4,33
8000121e:	d798                	sw	a4,40(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:44
    RETARGET_UART->LCRH = UART_LCRH_FEN_Msk | (3 << UART_LCRH_WLEN_Pos);
80001220:	07000713          	li	a4,112
80001224:	d7d8                	sw	a4,44(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:45
    RETARGET_UART->CR = UART_CR_TXE_Msk | UART_CR_RXE_Msk | UART_CR_UARTEN_Msk;
80001226:	30100713          	li	a4,769
8000122a:	db98                	sw	a4,48(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:47
#endif //RETARGET
}
8000122c:	8082                	ret

8000122e <periph_init>:
periph_init():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:162
{
8000122e:	1141                	addi	sp,sp,-16
80001230:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../main.c:163
	SystemInit();
80001232:	8fbff0ef          	jal	80000b2c <SystemInit>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:164
	SystemCoreClockUpdate();
80001236:	d9aff0ef          	jal	800007d0 <SystemCoreClockUpdate>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:166
	gpio_init();
8000123a:	3d1d                	jal	80001070 <gpio_init>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:167
	SPI0_init();
8000123c:	3d75                	jal	800010f8 <SPI0_init>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:168
	retarget_init();
8000123e:	3751                	jal	800011c2 <retarget_init>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:169
}
80001240:	40b2                	lw	ra,12(sp)
80001242:	0141                	addi	sp,sp,16
80001244:	8082                	ret

80001246 <retarget_put_char>:
retarget_put_char():
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:61 (discriminator 1)
}

int retarget_put_char(int ch)
{
#if defined RETARGET
    while (RETARGET_UART->FR_bit.BUSY) {
80001246:	300067b7          	lui	a5,0x30006
8000124a:	4f9c                	lw	a5,24(a5)
8000124c:	838d                	srli	a5,a5,0x3
8000124e:	8b85                	andi	a5,a5,1
80001250:	fbfd                	bnez	a5,80001246 <retarget_put_char>
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:63
    };
    RETARGET_UART->DR = ch;
80001252:	300067b7          	lui	a5,0x30006
80001256:	c388                	sw	a0,0(a5)
D:\workspace\NIIET\SX1262_test\Debug/../retarget.c:66
#endif //RETARGET
    return 0;
}
80001258:	4501                	li	a0,0
8000125a:	8082                	ret

8000125c <PrintChar>:
PrintChar():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:21
{
8000125c:	1141                	addi	sp,sp,-16
8000125e:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:22
	retarget_put_char(c);
80001260:	37dd                	jal	80001246 <retarget_put_char>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:23
}
80001262:	40b2                	lw	ra,12(sp)
80001264:	0141                	addi	sp,sp,16
80001266:	8082                	ret

80001268 <fputc>:
fputc():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:518
 * @param pStream  Output stream.
 * @param The character written if successful, or -1 if the output stream is
 *        not stdout or stderr.
 */
signed int fputc(signed int c, FILE *pStream)
{
80001268:	1141                	addi	sp,sp,-16
8000126a:	c606                	sw	ra,12(sp)
8000126c:	c422                	sw	s0,8(sp)
8000126e:	842a                	mv	s0,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:519
    if ((pStream == stdout) || (pStream == stderr)) {
80001270:	98818793          	addi	a5,gp,-1656 # 40000108 <r>
80001274:	479c                	lw	a5,8(a5)
80001276:	00b78763          	beq	a5,a1,80001284 <fputc+0x1c>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:519 (discriminator 1)
8000127a:	98818793          	addi	a5,gp,-1656 # 40000108 <r>
8000127e:	47dc                	lw	a5,12(a5)
80001280:	00b79b63          	bne	a5,a1,80001296 <fputc+0x2e>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:521

    	PrintChar(c);
80001284:	01841513          	slli	a0,s0,0x18
80001288:	8561                	srai	a0,a0,0x18
8000128a:	3fc9                	jal	8000125c <PrintChar>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:523

        return c;
8000128c:	8522                	mv	a0,s0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:529
    }
    else {

        return EOF;
    }
}
8000128e:	40b2                	lw	ra,12(sp)
80001290:	4422                	lw	s0,8(sp)
80001292:	0141                	addi	sp,sp,16
80001294:	8082                	ret
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:527
        return EOF;
80001296:	557d                	li	a0,-1
80001298:	bfdd                	j	8000128e <fputc+0x26>

8000129a <fputs>:
fputs():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:543
 *
 * @return  Number of characters written if successful, or -1 if the output
 *          stream is not stdout or stderr.
 */
signed int fputs(const char *pStr, FILE *pStream)
{
8000129a:	1141                	addi	sp,sp,-16
8000129c:	c606                	sw	ra,12(sp)
8000129e:	c422                	sw	s0,8(sp)
800012a0:	c226                	sw	s1,4(sp)
800012a2:	c04a                	sw	s2,0(sp)
800012a4:	842a                	mv	s0,a0
800012a6:	892e                	mv	s2,a1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:544
    signed int num = 0;
800012a8:	4481                	li	s1,0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:546

    while (*pStr != 0) {
800012aa:	a019                	j	800012b0 <fputs+0x16>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:552

        if (fputc(*pStr, pStream) == -1) {

            return -1;
        }
        num++;
800012ac:	0485                	addi	s1,s1,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:553
        pStr++;
800012ae:	0405                	addi	s0,s0,1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:546
    while (*pStr != 0) {
800012b0:	00040503          	lb	a0,0(s0)
800012b4:	c519                	beqz	a0,800012c2 <fputs+0x28>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:548
        if (fputc(*pStr, pStream) == -1) {
800012b6:	85ca                	mv	a1,s2
800012b8:	3f45                	jal	80001268 <fputc>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:548 (discriminator 1)
800012ba:	57fd                	li	a5,-1
800012bc:	fef518e3          	bne	a0,a5,800012ac <fputs+0x12>
800012c0:	a011                	j	800012c4 <fputs+0x2a>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:556
    }

    return num;
800012c2:	8526                	mv	a0,s1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:557
}
800012c4:	40b2                	lw	ra,12(sp)
800012c6:	4422                	lw	s0,8(sp)
800012c8:	4492                	lw	s1,4(sp)
800012ca:	4902                	lw	s2,0(sp)
800012cc:	0141                	addi	sp,sp,16
800012ce:	8082                	ret

800012d0 <vfprintf>:
vfprintf():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:404
{
800012d0:	7135                	addi	sp,sp,-160
800012d2:	cf06                	sw	ra,156(sp)
800012d4:	cd22                	sw	s0,152(sp)
800012d6:	842a                	mv	s0,a0
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:406
    char pError[] = "stdio.c: increase MAX_STRING_SIZE\n\r";
800012d8:	800027b7          	lui	a5,0x80002
800012dc:	bac78793          	addi	a5,a5,-1108 # 80001bac <_tdata_start+0x184>
800012e0:	0007ae83          	lw	t4,0(a5)
800012e4:	0047ae03          	lw	t3,4(a5)
800012e8:	0087a303          	lw	t1,8(a5)
800012ec:	00c7a883          	lw	a7,12(a5)
800012f0:	0107a803          	lw	a6,16(a5)
800012f4:	4bc8                	lw	a0,20(a5)
800012f6:	4f94                	lw	a3,24(a5)
800012f8:	4fd8                	lw	a4,28(a5)
800012fa:	539c                	lw	a5,32(a5)
800012fc:	c476                	sw	t4,8(sp)
800012fe:	c672                	sw	t3,12(sp)
80001300:	c81a                	sw	t1,16(sp)
80001302:	ca46                	sw	a7,20(sp)
80001304:	cc42                	sw	a6,24(sp)
80001306:	ce2a                	sw	a0,28(sp)
80001308:	d036                	sw	a3,32(sp)
8000130a:	d23a                	sw	a4,36(sp)
8000130c:	d43e                	sw	a5,40(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:409
    if (vsprintf(pStr, pFormat, ap) >= MAX_STRING_SIZE) {
8000130e:	1068                	addi	a0,sp,44
80001310:	cacff0ef          	jal	800007bc <vsprintf>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:409 (discriminator 1)
80001314:	06300793          	li	a5,99
80001318:	00a7d863          	bge	a5,a0,80001328 <vfprintf+0x58>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:411
        fputs(pError, stderr);
8000131c:	98818793          	addi	a5,gp,-1656 # 40000108 <r>
80001320:	47cc                	lw	a1,12(a5)
80001322:	0028                	addi	a0,sp,8
80001324:	3f9d                	jal	8000129a <fputs>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:412
        while (1); /* Increase MAX_STRING_SIZE */
80001326:	a001                	j	80001326 <vfprintf+0x56>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:416
    return fputs(pStr, pStream);
80001328:	85a2                	mv	a1,s0
8000132a:	1068                	addi	a0,sp,44
8000132c:	37bd                	jal	8000129a <fputs>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:417
}
8000132e:	40fa                	lw	ra,156(sp)
80001330:	446a                	lw	s0,152(sp)
80001332:	610d                	addi	sp,sp,160
80001334:	8082                	ret

80001336 <vprintf>:
vprintf():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:428
{
80001336:	1141                	addi	sp,sp,-16
80001338:	c606                	sw	ra,12(sp)
8000133a:	862e                	mv	a2,a1
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:429
    return vfprintf(stdout, pFormat, ap);
8000133c:	85aa                	mv	a1,a0
8000133e:	98818793          	addi	a5,gp,-1656 # 40000108 <r>
80001342:	4788                	lw	a0,8(a5)
80001344:	3771                	jal	800012d0 <vfprintf>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:430
}
80001346:	40b2                	lw	ra,12(sp)
80001348:	0141                	addi	sp,sp,16
8000134a:	8082                	ret

8000134c <printf>:
printf():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:461
{
8000134c:	7139                	addi	sp,sp,-64
8000134e:	ce06                	sw	ra,28(sp)
80001350:	d22e                	sw	a1,36(sp)
80001352:	d432                	sw	a2,40(sp)
80001354:	d636                	sw	a3,44(sp)
80001356:	d83a                	sw	a4,48(sp)
80001358:	da3e                	sw	a5,52(sp)
8000135a:	dc42                	sw	a6,56(sp)
8000135c:	de46                	sw	a7,60(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:466
    va_start(ap, pFormat);
8000135e:	104c                	addi	a1,sp,36
80001360:	c62e                	sw	a1,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:467
    result = vprintf(pFormat, ap);
80001362:	3fd1                	jal	80001336 <vprintf>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/printf.c:471
}
80001364:	40f2                	lw	ra,28(sp)
80001366:	6121                	addi	sp,sp,64
80001368:	8082                	ret

8000136a <trap_handler>:
trap_handler():
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:186
#define MCAUSE_EXCEPT_STAMOACCSFAULT    0x7
#define MCAUSE_EXCEPT_ECALLFRM_M_MODE   0xB

void trap_handler (void)
{
	uint32_t mcause_val = read_csr(mcause);
8000136a:	342027f3          	csrr	a5,mcause
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:188

	if((mcause_val & MCAUSE_INTERRUPT_FLAG) == 0) {
8000136e:	0007c363          	bltz	a5,80001374 <trap_handler+0xa>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:216
			default: // MCAUSE_EXCEPT UNKNOWN

				break;
		}

		while(1) {}; //TRAP
80001372:	a001                	j	80001372 <trap_handler+0x8>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:185
{
80001374:	1141                	addi	sp,sp,-16
80001376:	c606                	sw	ra,12(sp)
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:219
	} else {
		// handle interrupt
		PLIC_MachHandler();
80001378:	8b6ff0ef          	jal	8000042e <PLIC_MachHandler>
D:\workspace\NIIET\SX1262_test\Debug/../platform/source/plic.c:221
	}
}
8000137c:	40b2                	lw	ra,12(sp)
8000137e:	0141                	addi	sp,sp,16
80001380:	8082                	ret

80001382 <main>:
main():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:178
{
80001382:	1101                	addi	sp,sp,-32
80001384:	ce06                	sw	ra,28(sp)
80001386:	cc22                	sw	s0,24(sp)
D:\workspace\NIIET\SX1262_test\Debug/../main.c:179
  periph_init();
80001388:	355d                	jal	8000122e <periph_init>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:181
  InterruptEnable();
8000138a:	f7cff0ef          	jal	80000b06 <InterruptEnable>
GPIO_ClearBits():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:455
    WRITE_REG(GPIOx->DATAOUTCLR, Pin);
8000138e:	28002737          	lui	a4,0x28002
80001392:	67c1                	lui	a5,0x10
80001394:	17fd                	addi	a5,a5,-1 # ffff <main.c.494f4ad7+0xcb5>
80001396:	c75c                	sw	a5,12(a4)
main():
D:\workspace\NIIET\SX1262_test\Debug/../main.c:183
  led_shift = GPIO_Pin_10;
80001398:	40000713          	li	a4,1024
8000139c:	ace1a423          	sw	a4,-1336(gp) # 40000248 <led_shift>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:189
  printf("Starting SX126x TX sequence\n");
800013a0:	80002537          	lui	a0,0x80002
800013a4:	bdc50513          	addi	a0,a0,-1060 # 80001bdc <_tdata_start+0x1b4>
800013a8:	3755                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:192
  status = sx126x_get_status(context, &chip_status);
800013aa:	002c                	addi	a1,sp,8
800013ac:	4501                	li	a0,0
800013ae:	3159                	jal	80001034 <sx126x_get_status>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:193
  if (status == SX126X_STATUS_OK) {
800013b0:	0e051a63          	bnez	a0,800014a4 <main+0x122>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:194
	  printf("Initial chip mode: %d, cmd status: %d\n", chip_status.chip_mode, chip_status.cmd_status);
800013b4:	4622                	lw	a2,8(sp)
800013b6:	45b2                	lw	a1,12(sp)
800013b8:	80002537          	lui	a0,0x80002
800013bc:	bfc50513          	addi	a0,a0,-1028 # 80001bfc <_tdata_start+0x1d4>
800013c0:	3771                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:200
  status = sx126x_set_standby(context, SX126X_STANDBY_CFG_RC);
800013c2:	4581                	li	a1,0
800013c4:	4501                	li	a0,0
800013c6:	8cdff0ef          	jal	80000c92 <sx126x_set_standby>
800013ca:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:201
  printf("Set standby RC: %d\n", status);
800013cc:	80002537          	lui	a0,0x80002
800013d0:	c3c50513          	addi	a0,a0,-964 # 80001c3c <_tdata_start+0x214>
800013d4:	3fa5                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:204
  status = sx126x_cal(context, SX126X_CAL_ALL);
800013d6:	07f00593          	li	a1,127
800013da:	4501                	li	a0,0
800013dc:	8d7ff0ef          	jal	80000cb2 <sx126x_cal>
800013e0:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:205
  printf("Calibrate all: %d\n", status);
800013e2:	80002537          	lui	a0,0x80002
800013e6:	c5050513          	addi	a0,a0,-944 # 80001c50 <_tdata_start+0x228>
800013ea:	378d                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:208
  status = sx126x_set_pkt_type(context, SX126X_PKT_TYPE_LORA);
800013ec:	4585                	li	a1,1
800013ee:	4501                	li	a0,0
800013f0:	997ff0ef          	jal	80000d86 <sx126x_set_pkt_type>
800013f4:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:209
  printf("Set LoRa packet type: %d\n", status);
800013f6:	80002537          	lui	a0,0x80002
800013fa:	c6450513          	addi	a0,a0,-924 # 80001c64 <_tdata_start+0x23c>
800013fe:	37b9                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:212
  status = sx126x_set_rf_freq(context, rf_freq_hz);
80001400:	33bca5b7          	lui	a1,0x33bca
80001404:	10058593          	addi	a1,a1,256 # 33bca100 <retarget.c.370f3c8d+0x33bb692e>
80001408:	4501                	li	a0,0
8000140a:	963ff0ef          	jal	80000d6c <sx126x_set_rf_freq>
8000140e:	862a                	mv	a2,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:213
  printf("Set RF freq %u Hz: %d\n", rf_freq_hz, status);
80001410:	33bca5b7          	lui	a1,0x33bca
80001414:	10058593          	addi	a1,a1,256 # 33bca100 <retarget.c.370f3c8d+0x33bb692e>
80001418:	80002537          	lui	a0,0x80002
8000141c:	c8050513          	addi	a0,a0,-896 # 80001c80 <_tdata_start+0x258>
80001420:	3735                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:216
  status = sx126x_set_lora_mod_params(context, &mod_params);
80001422:	ab418593          	addi	a1,gp,-1356 # 40000234 <mod_params>
80001426:	4501                	li	a0,0
80001428:	3e5d                	jal	80000fde <sx126x_set_lora_mod_params>
8000142a:	87aa                	mv	a5,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:217
  printf("Set LoRa mod params (SF%d, BW%d, CR%d/ %d): %d\n", mod_params.sf, mod_params.bw, mod_params.cr + 4, mod_params.cr + 5, status);
8000142c:	ab418593          	addi	a1,gp,-1356 # 40000234 <mod_params>
80001430:	4594                	lw	a3,8(a1)
80001432:	00568713          	addi	a4,a3,5 # 2010005 <retarget.c.370f3c8d+0x1ffc833>
80001436:	0691                	addi	a3,a3,4
80001438:	41d0                	lw	a2,4(a1)
8000143a:	418c                	lw	a1,0(a1)
8000143c:	80002537          	lui	a0,0x80002
80001440:	c9850513          	addi	a0,a0,-872 # 80001c98 <_tdata_start+0x270>
80001444:	3721                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:220
  status = sx126x_set_lora_pkt_params(context, &pkt_params);
80001446:	aa818593          	addi	a1,gp,-1368 # 40000228 <pkt_params>
8000144a:	4501                	li	a0,0
8000144c:	a73ff0ef          	jal	80000ebe <sx126x_set_lora_pkt_params>
80001450:	86aa                	mv	a3,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:221
  printf("Set LoRa pkt params (preamble %d, explicit header, CRC %s): %d\n", pkt_params.preamble_len_in_symb, pkt_params.crc_is_on ? "on" : "off", status);
80001452:	aa818413          	addi	s0,gp,-1368 # 40000228 <pkt_params>
80001456:	00045583          	lhu	a1,0(s0)
8000145a:	00944783          	lbu	a5,9(s0)
8000145e:	cbb1                	beqz	a5,800014b2 <main+0x130>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:221 (discriminator 1)
80001460:	80002637          	lui	a2,0x80002
80001464:	bd060613          	addi	a2,a2,-1072 # 80001bd0 <_tdata_start+0x1a8>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:221 (discriminator 4)
80001468:	80002537          	lui	a0,0x80002
8000146c:	cc850513          	addi	a0,a0,-824 # 80001cc8 <_tdata_start+0x2a0>
80001470:	3df1                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:224
  status = sx126x_set_pa_cfg(context, &pa_cfg);
80001472:	88018593          	addi	a1,gp,-1920 # 40000000 <pa_cfg>
80001476:	4501                	li	a0,0
80001478:	85bff0ef          	jal	80000cd2 <sx126x_set_pa_cfg>
8000147c:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:225
  printf("Set PA config: %d\n", status);
8000147e:	80002537          	lui	a0,0x80002
80001482:	d0850513          	addi	a0,a0,-760 # 80001d08 <_tdata_start+0x2e0>
80001486:	35d9                	jal	8000134c <printf>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:228
  status = sx126x_set_tx_params(context, tx_power_dbm, ramp_time);
80001488:	4611                	li	a2,4
8000148a:	45d1                	li	a1,20
8000148c:	4501                	li	a0,0
8000148e:	919ff0ef          	jal	80000da6 <sx126x_set_tx_params>
80001492:	86aa                	mv	a3,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:229
  printf("Set TX params (%d dBm, ramp %d): %d\n", tx_power_dbm, ramp_time, status);
80001494:	4611                	li	a2,4
80001496:	45d1                	li	a1,20
80001498:	80002537          	lui	a0,0x80002
8000149c:	d1c50513          	addi	a0,a0,-740 # 80001d1c <_tdata_start+0x2f4>
800014a0:	3575                	jal	8000134c <printf>
800014a2:	a03d                	j	800014d0 <main+0x14e>
800014a4:	85aa                	mv	a1,a0
D:\workspace\NIIET\SX1262_test\Debug/../main.c:196
	  printf("Get status failed: %d\n", status);
800014a6:	80002537          	lui	a0,0x80002
800014aa:	c2450513          	addi	a0,a0,-988 # 80001c24 <_tdata_start+0x1fc>
800014ae:	3d79                	jal	8000134c <printf>
800014b0:	bf09                	j	800013c2 <main+0x40>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:221 (discriminator 2)
  printf("Set LoRa pkt params (preamble %d, explicit header, CRC %s): %d\n", pkt_params.preamble_len_in_symb, pkt_params.crc_is_on ? "on" : "off", status);
800014b2:	80002637          	lui	a2,0x80002
800014b6:	bd860613          	addi	a2,a2,-1064 # 80001bd8 <_tdata_start+0x1b0>
800014ba:	b77d                	j	80001468 <main+0xe6>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:235 (discriminator 1)
	  pb12_state = GPIO_ReadBit(GPIOB, GPIO_Pin_12);
800014bc:	acf1a223          	sw	a5,-1340(gp) # 40000244 <pb12_state>
D:\workspace\NIIET\SX1262_test\Debug/../main.c:237
	  if (pb12_state == SET) {
800014c0:	4705                	li	a4,1
800014c2:	00e78f63          	beq	a5,a4,800014e0 <main+0x15e>
GPIO_ClearBits():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:455
800014c6:	280027b7          	lui	a5,0x28002
800014ca:	40000713          	li	a4,1024
800014ce:	c7d8                	sw	a4,12(a5)
GPIO_ReadBit():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:310
    return (BitState)READ_BIT(GPIOx->DATA, (uint32_t)Pin);
800014d0:	280017b7          	lui	a5,0x28001
800014d4:	439c                	lw	a5,0(a5)
800014d6:	6705                	lui	a4,0x1
800014d8:	8ff9                	and	a5,a5,a4
800014da:	d3ed                	beqz	a5,800014bc <main+0x13a>
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:310 (discriminator 1)
800014dc:	4785                	li	a5,1
800014de:	bff9                	j	800014bc <main+0x13a>
GPIO_SetBits():
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:441
    WRITE_REG(GPIOx->DATAOUTSET, Pin);
800014e0:	280027b7          	lui	a5,0x28002
800014e4:	40000713          	li	a4,1024
800014e8:	c798                	sw	a4,8(a5)
D:\workspace\NIIET\SX1262_test\plib015\inc/plib015_gpio.h:442
}
800014ea:	b7dd                	j	800014d0 <main+0x14e>

800014ec <memset>:
memset():
800014ec:	433d                	li	t1,15
800014ee:	872a                	mv	a4,a0
800014f0:	02c37363          	bgeu	t1,a2,80001516 <memset+0x2a>
800014f4:	00f77793          	andi	a5,a4,15
800014f8:	efbd                	bnez	a5,80001576 <memset+0x8a>
800014fa:	e5ad                	bnez	a1,80001564 <memset+0x78>
800014fc:	ff067693          	andi	a3,a2,-16
80001500:	8a3d                	andi	a2,a2,15
80001502:	96ba                	add	a3,a3,a4
80001504:	c30c                	sw	a1,0(a4)
80001506:	c34c                	sw	a1,4(a4)
80001508:	c70c                	sw	a1,8(a4)
8000150a:	c74c                	sw	a1,12(a4)
8000150c:	0741                	addi	a4,a4,16 # 1010 <STACK_SIZE+0x810>
8000150e:	fed76be3          	bltu	a4,a3,80001504 <memset+0x18>
80001512:	e211                	bnez	a2,80001516 <memset+0x2a>
80001514:	8082                	ret
80001516:	40c306b3          	sub	a3,t1,a2
8000151a:	068a                	slli	a3,a3,0x2
8000151c:	00000297          	auipc	t0,0x0
80001520:	9696                	add	a3,a3,t0
80001522:	00a68067          	jr	10(a3)
80001526:	00b70723          	sb	a1,14(a4)
8000152a:	00b706a3          	sb	a1,13(a4)
8000152e:	00b70623          	sb	a1,12(a4)
80001532:	00b705a3          	sb	a1,11(a4)
80001536:	00b70523          	sb	a1,10(a4)
8000153a:	00b704a3          	sb	a1,9(a4)
8000153e:	00b70423          	sb	a1,8(a4)
80001542:	00b703a3          	sb	a1,7(a4)
80001546:	00b70323          	sb	a1,6(a4)
8000154a:	00b702a3          	sb	a1,5(a4)
8000154e:	00b70223          	sb	a1,4(a4)
80001552:	00b701a3          	sb	a1,3(a4)
80001556:	00b70123          	sb	a1,2(a4)
8000155a:	00b700a3          	sb	a1,1(a4)
8000155e:	00b70023          	sb	a1,0(a4)
80001562:	8082                	ret
80001564:	0ff5f593          	zext.b	a1,a1
80001568:	00859693          	slli	a3,a1,0x8
8000156c:	8dd5                	or	a1,a1,a3
8000156e:	01059693          	slli	a3,a1,0x10
80001572:	8dd5                	or	a1,a1,a3
80001574:	b761                	j	800014fc <memset+0x10>
80001576:	00279693          	slli	a3,a5,0x2
8000157a:	00000297          	auipc	t0,0x0
8000157e:	9696                	add	a3,a3,t0
80001580:	8286                	mv	t0,ra
80001582:	fa8680e7          	jalr	-88(a3)
80001586:	8096                	mv	ra,t0
80001588:	17c1                	addi	a5,a5,-16 # 28001ff0 <retarget.c.370f3c8d+0x27fee81e>
8000158a:	8f1d                	sub	a4,a4,a5
8000158c:	963e                	add	a2,a2,a5
8000158e:	f8c374e3          	bgeu	t1,a2,80001516 <memset+0x2a>
80001592:	b7a5                	j	800014fa <memset+0xe>

80001594 <memcpy>:
memcpy():
80001594:	00a5c7b3          	xor	a5,a1,a0
80001598:	8b8d                	andi	a5,a5,3
8000159a:	00c508b3          	add	a7,a0,a2
8000159e:	e7b1                	bnez	a5,800015ea <memcpy+0x56>
800015a0:	478d                	li	a5,3
800015a2:	04c7f463          	bgeu	a5,a2,800015ea <memcpy+0x56>
800015a6:	00357793          	andi	a5,a0,3
800015aa:	872a                	mv	a4,a0
800015ac:	e7dd                	bnez	a5,8000165a <memcpy+0xc6>
800015ae:	ffc8f613          	andi	a2,a7,-4
800015b2:	40e606b3          	sub	a3,a2,a4
800015b6:	02000793          	li	a5,32
800015ba:	04d7c463          	blt	a5,a3,80001602 <memcpy+0x6e>
800015be:	86ae                	mv	a3,a1
800015c0:	87ba                	mv	a5,a4
800015c2:	02c77163          	bgeu	a4,a2,800015e4 <memcpy+0x50>
800015c6:	0006a803          	lw	a6,0(a3)
800015ca:	0791                	addi	a5,a5,4
800015cc:	0691                	addi	a3,a3,4
800015ce:	ff07ae23          	sw	a6,-4(a5)
800015d2:	fec7eae3          	bltu	a5,a2,800015c6 <memcpy+0x32>
800015d6:	167d                	addi	a2,a2,-1
800015d8:	8e19                	sub	a2,a2,a4
800015da:	9a71                	andi	a2,a2,-4
800015dc:	0591                	addi	a1,a1,4
800015de:	0711                	addi	a4,a4,4
800015e0:	95b2                	add	a1,a1,a2
800015e2:	9732                	add	a4,a4,a2
800015e4:	01176663          	bltu	a4,a7,800015f0 <memcpy+0x5c>
800015e8:	8082                	ret
800015ea:	872a                	mv	a4,a0
800015ec:	ff157ee3          	bgeu	a0,a7,800015e8 <memcpy+0x54>
800015f0:	0005c783          	lbu	a5,0(a1)
800015f4:	0705                	addi	a4,a4,1
800015f6:	0585                	addi	a1,a1,1
800015f8:	fef70fa3          	sb	a5,-1(a4)
800015fc:	fee89ae3          	bne	a7,a4,800015f0 <memcpy+0x5c>
80001600:	8082                	ret
80001602:	5194                	lw	a3,32(a1)
80001604:	0005a383          	lw	t2,0(a1)
80001608:	0045a283          	lw	t0,4(a1)
8000160c:	0085af83          	lw	t6,8(a1)
80001610:	00c5af03          	lw	t5,12(a1)
80001614:	0105ae83          	lw	t4,16(a1)
80001618:	0145ae03          	lw	t3,20(a1)
8000161c:	0185a303          	lw	t1,24(a1)
80001620:	01c5a803          	lw	a6,28(a1)
80001624:	02470713          	addi	a4,a4,36
80001628:	fed72e23          	sw	a3,-4(a4)
8000162c:	fc772e23          	sw	t2,-36(a4)
80001630:	40e606b3          	sub	a3,a2,a4
80001634:	fe572023          	sw	t0,-32(a4)
80001638:	fff72223          	sw	t6,-28(a4)
8000163c:	ffe72423          	sw	t5,-24(a4)
80001640:	ffd72623          	sw	t4,-20(a4)
80001644:	ffc72823          	sw	t3,-16(a4)
80001648:	fe672a23          	sw	t1,-12(a4)
8000164c:	ff072c23          	sw	a6,-8(a4)
80001650:	02458593          	addi	a1,a1,36
80001654:	fad7c7e3          	blt	a5,a3,80001602 <memcpy+0x6e>
80001658:	b79d                	j	800015be <memcpy+0x2a>
8000165a:	0005c683          	lbu	a3,0(a1)
8000165e:	0705                	addi	a4,a4,1
80001660:	00377793          	andi	a5,a4,3
80001664:	fed70fa3          	sb	a3,-1(a4)
80001668:	0585                	addi	a1,a1,1
8000166a:	d3b1                	beqz	a5,800015ae <memcpy+0x1a>
8000166c:	0005c683          	lbu	a3,0(a1)
80001670:	0705                	addi	a4,a4,1
80001672:	00377793          	andi	a5,a4,3
80001676:	fed70fa3          	sb	a3,-1(a4)
8000167a:	0585                	addi	a1,a1,1
8000167c:	fff9                	bnez	a5,8000165a <memcpy+0xc6>
8000167e:	bf05                	j	800015ae <memcpy+0x1a>

80001680 <__udivdi3>:
__udivdi3():
80001680:	8832                	mv	a6,a2
80001682:	88aa                	mv	a7,a0
80001684:	872e                	mv	a4,a1
80001686:	ead5                	bnez	a3,8000173a <__udivdi3+0xba>
80001688:	0ec5ff63          	bgeu	a1,a2,80001786 <__udivdi3+0x106>
8000168c:	67c1                	lui	a5,0x10
8000168e:	18f66c63          	bltu	a2,a5,80001826 <__udivdi3+0x1a6>
80001692:	010007b7          	lui	a5,0x1000
80001696:	46e1                	li	a3,24
80001698:	00f67363          	bgeu	a2,a5,8000169e <__udivdi3+0x1e>
8000169c:	46c1                	li	a3,16
8000169e:	00d65333          	srl	t1,a2,a3
800016a2:	00000797          	auipc	a5,0x0
800016a6:	38678793          	addi	a5,a5,902 # 80001a28 <_tdata_start>
800016aa:	979a                	add	a5,a5,t1
800016ac:	0007c783          	lbu	a5,0(a5)
800016b0:	02000313          	li	t1,32
800016b4:	97b6                	add	a5,a5,a3
800016b6:	40f306b3          	sub	a3,t1,a5
800016ba:	00f30b63          	beq	t1,a5,800016d0 <__udivdi3+0x50>
800016be:	00d59733          	sll	a4,a1,a3
800016c2:	00f557b3          	srl	a5,a0,a5
800016c6:	8f5d                	or	a4,a4,a5
800016c8:	00d61833          	sll	a6,a2,a3
800016cc:	00d518b3          	sll	a7,a0,a3
800016d0:	01085613          	srli	a2,a6,0x10
800016d4:	02c75533          	divu	a0,a4,a2
800016d8:	01081693          	slli	a3,a6,0x10
800016dc:	82c1                	srli	a3,a3,0x10
800016de:	0108d793          	srli	a5,a7,0x10
800016e2:	02c77733          	remu	a4,a4,a2
800016e6:	02a685b3          	mul	a1,a3,a0
800016ea:	0742                	slli	a4,a4,0x10
800016ec:	8fd9                	or	a5,a5,a4
800016ee:	00b7fa63          	bgeu	a5,a1,80001702 <__udivdi3+0x82>
800016f2:	97c2                	add	a5,a5,a6
800016f4:	fff50713          	addi	a4,a0,-1
800016f8:	0107e463          	bltu	a5,a6,80001700 <__udivdi3+0x80>
800016fc:	30b7ee63          	bltu	a5,a1,80001a18 <__udivdi3+0x398>
80001700:	853a                	mv	a0,a4
80001702:	8f8d                	sub	a5,a5,a1
80001704:	02c7d733          	divu	a4,a5,a2
80001708:	08c2                	slli	a7,a7,0x10
8000170a:	0108d893          	srli	a7,a7,0x10
8000170e:	02c7f7b3          	remu	a5,a5,a2
80001712:	02e686b3          	mul	a3,a3,a4
80001716:	07c2                	slli	a5,a5,0x10
80001718:	00f8e8b3          	or	a7,a7,a5
8000171c:	00d8fb63          	bgeu	a7,a3,80001732 <__udivdi3+0xb2>
80001720:	98c2                	add	a7,a7,a6
80001722:	fff70793          	addi	a5,a4,-1
80001726:	0108e563          	bltu	a7,a6,80001730 <__udivdi3+0xb0>
8000172a:	1779                	addi	a4,a4,-2
8000172c:	00d8e363          	bltu	a7,a3,80001732 <__udivdi3+0xb2>
80001730:	873e                	mv	a4,a5
80001732:	0542                	slli	a0,a0,0x10
80001734:	8d59                	or	a0,a0,a4
80001736:	4581                	li	a1,0
80001738:	8082                	ret
8000173a:	00d5f563          	bgeu	a1,a3,80001744 <__udivdi3+0xc4>
8000173e:	4581                	li	a1,0
80001740:	4501                	li	a0,0
80001742:	8082                	ret
80001744:	67c1                	lui	a5,0x10
80001746:	18f6e863          	bltu	a3,a5,800018d6 <__udivdi3+0x256>
8000174a:	01000737          	lui	a4,0x1000
8000174e:	47e1                	li	a5,24
80001750:	00e6f363          	bgeu	a3,a4,80001756 <__udivdi3+0xd6>
80001754:	47c1                	li	a5,16
80001756:	00f6d833          	srl	a6,a3,a5
8000175a:	00000717          	auipc	a4,0x0
8000175e:	2ce70713          	addi	a4,a4,718 # 80001a28 <_tdata_start>
80001762:	9742                	add	a4,a4,a6
80001764:	00074703          	lbu	a4,0(a4)
80001768:	02000813          	li	a6,32
8000176c:	973e                	add	a4,a4,a5
8000176e:	40e808b3          	sub	a7,a6,a4
80001772:	18e81763          	bne	a6,a4,80001900 <__udivdi3+0x280>
80001776:	28b6e363          	bltu	a3,a1,800019fc <__udivdi3+0x37c>
8000177a:	00c53533          	sltu	a0,a0,a2
8000177e:	00153513          	seqz	a0,a0
80001782:	4581                	li	a1,0
80001784:	8082                	ret
80001786:	c655                	beqz	a2,80001832 <__udivdi3+0x1b2>
80001788:	67c1                	lui	a5,0x10
8000178a:	26f67163          	bgeu	a2,a5,800019ec <__udivdi3+0x36c>
8000178e:	10063713          	sltiu	a4,a2,256
80001792:	00173713          	seqz	a4,a4
80001796:	070e                	slli	a4,a4,0x3
80001798:	00e656b3          	srl	a3,a2,a4
8000179c:	00000797          	auipc	a5,0x0
800017a0:	28c78793          	addi	a5,a5,652 # 80001a28 <_tdata_start>
800017a4:	97b6                	add	a5,a5,a3
800017a6:	0007c783          	lbu	a5,0(a5)
800017aa:	02000693          	li	a3,32
800017ae:	97ba                	add	a5,a5,a4
800017b0:	40f68eb3          	sub	t4,a3,a5
800017b4:	08f69f63          	bne	a3,a5,80001852 <__udivdi3+0x1d2>
800017b8:	40c587b3          	sub	a5,a1,a2
800017bc:	01065693          	srli	a3,a2,0x10
800017c0:	0642                	slli	a2,a2,0x10
800017c2:	8241                	srli	a2,a2,0x10
800017c4:	4585                	li	a1,1
800017c6:	02d7d533          	divu	a0,a5,a3
800017ca:	0108d713          	srli	a4,a7,0x10
800017ce:	02d7f7b3          	remu	a5,a5,a3
800017d2:	02c50333          	mul	t1,a0,a2
800017d6:	07c2                	slli	a5,a5,0x10
800017d8:	8fd9                	or	a5,a5,a4
800017da:	0067fa63          	bgeu	a5,t1,800017ee <__udivdi3+0x16e>
800017de:	97c2                	add	a5,a5,a6
800017e0:	fff50713          	addi	a4,a0,-1
800017e4:	0107e463          	bltu	a5,a6,800017ec <__udivdi3+0x16c>
800017e8:	2267e563          	bltu	a5,t1,80001a12 <__udivdi3+0x392>
800017ec:	853a                	mv	a0,a4
800017ee:	406787b3          	sub	a5,a5,t1
800017f2:	02d7d733          	divu	a4,a5,a3
800017f6:	08c2                	slli	a7,a7,0x10
800017f8:	0108d893          	srli	a7,a7,0x10
800017fc:	02d7f7b3          	remu	a5,a5,a3
80001800:	02c70633          	mul	a2,a4,a2
80001804:	07c2                	slli	a5,a5,0x10
80001806:	00f8e8b3          	or	a7,a7,a5
8000180a:	00c8fb63          	bgeu	a7,a2,80001820 <__udivdi3+0x1a0>
8000180e:	98c2                	add	a7,a7,a6
80001810:	fff70793          	addi	a5,a4,-1
80001814:	0108e563          	bltu	a7,a6,8000181e <__udivdi3+0x19e>
80001818:	1779                	addi	a4,a4,-2
8000181a:	00c8e363          	bltu	a7,a2,80001820 <__udivdi3+0x1a0>
8000181e:	873e                	mv	a4,a5
80001820:	0542                	slli	a0,a0,0x10
80001822:	8d59                	or	a0,a0,a4
80001824:	8082                	ret
80001826:	10063693          	sltiu	a3,a2,256
8000182a:	0016b693          	seqz	a3,a3
8000182e:	068e                	slli	a3,a3,0x3
80001830:	b5bd                	j	8000169e <__udivdi3+0x1e>
80001832:	4681                	li	a3,0
80001834:	00000797          	auipc	a5,0x0
80001838:	1f478793          	addi	a5,a5,500 # 80001a28 <_tdata_start>
8000183c:	97b6                	add	a5,a5,a3
8000183e:	0007c783          	lbu	a5,0(a5)
80001842:	4701                	li	a4,0
80001844:	02000693          	li	a3,32
80001848:	97ba                	add	a5,a5,a4
8000184a:	40f68eb3          	sub	t4,a3,a5
8000184e:	f6f685e3          	beq	a3,a5,800017b8 <__udivdi3+0x138>
80001852:	01d61833          	sll	a6,a2,t4
80001856:	00f5d333          	srl	t1,a1,a5
8000185a:	01085693          	srli	a3,a6,0x10
8000185e:	02d35e33          	divu	t3,t1,a3
80001862:	01081613          	slli	a2,a6,0x10
80001866:	01d595b3          	sll	a1,a1,t4
8000186a:	8241                	srli	a2,a2,0x10
8000186c:	00f557b3          	srl	a5,a0,a5
80001870:	8fcd                	or	a5,a5,a1
80001872:	0107d713          	srli	a4,a5,0x10
80001876:	01d518b3          	sll	a7,a0,t4
8000187a:	02d37333          	remu	t1,t1,a3
8000187e:	03c605b3          	mul	a1,a2,t3
80001882:	0342                	slli	t1,t1,0x10
80001884:	00676733          	or	a4,a4,t1
80001888:	00b77b63          	bgeu	a4,a1,8000189e <__udivdi3+0x21e>
8000188c:	9742                	add	a4,a4,a6
8000188e:	fffe0513          	addi	a0,t3,-1
80001892:	17076c63          	bltu	a4,a6,80001a0a <__udivdi3+0x38a>
80001896:	16b77a63          	bgeu	a4,a1,80001a0a <__udivdi3+0x38a>
8000189a:	1e79                	addi	t3,t3,-2
8000189c:	9742                	add	a4,a4,a6
8000189e:	8f0d                	sub	a4,a4,a1
800018a0:	02d75533          	divu	a0,a4,a3
800018a4:	07c2                	slli	a5,a5,0x10
800018a6:	83c1                	srli	a5,a5,0x10
800018a8:	02d77733          	remu	a4,a4,a3
800018ac:	02a60333          	mul	t1,a2,a0
800018b0:	0742                	slli	a4,a4,0x10
800018b2:	8fd9                	or	a5,a5,a4
800018b4:	0067fb63          	bgeu	a5,t1,800018ca <__udivdi3+0x24a>
800018b8:	97c2                	add	a5,a5,a6
800018ba:	fff50713          	addi	a4,a0,-1
800018be:	1507e263          	bltu	a5,a6,80001a02 <__udivdi3+0x382>
800018c2:	1467f063          	bgeu	a5,t1,80001a02 <__udivdi3+0x382>
800018c6:	1579                	addi	a0,a0,-2
800018c8:	97c2                	add	a5,a5,a6
800018ca:	010e1593          	slli	a1,t3,0x10
800018ce:	8dc9                	or	a1,a1,a0
800018d0:	406787b3          	sub	a5,a5,t1
800018d4:	bdcd                	j	800017c6 <__udivdi3+0x146>
800018d6:	1006b793          	sltiu	a5,a3,256
800018da:	0017b793          	seqz	a5,a5
800018de:	078e                	slli	a5,a5,0x3
800018e0:	00f6d833          	srl	a6,a3,a5
800018e4:	00000717          	auipc	a4,0x0
800018e8:	14470713          	addi	a4,a4,324 # 80001a28 <_tdata_start>
800018ec:	9742                	add	a4,a4,a6
800018ee:	00074703          	lbu	a4,0(a4)
800018f2:	02000813          	li	a6,32
800018f6:	973e                	add	a4,a4,a5
800018f8:	40e808b3          	sub	a7,a6,a4
800018fc:	e6e80de3          	beq	a6,a4,80001776 <__udivdi3+0xf6>
80001900:	00e65e33          	srl	t3,a2,a4
80001904:	011696b3          	sll	a3,a3,a7
80001908:	00de6e33          	or	t3,t3,a3
8000190c:	00e5d833          	srl	a6,a1,a4
80001910:	010e5e93          	srli	t4,t3,0x10
80001914:	03d857b3          	divu	a5,a6,t4
80001918:	010e1313          	slli	t1,t3,0x10
8000191c:	011595b3          	sll	a1,a1,a7
80001920:	01035313          	srli	t1,t1,0x10
80001924:	00e55733          	srl	a4,a0,a4
80001928:	8f4d                	or	a4,a4,a1
8000192a:	01075693          	srli	a3,a4,0x10
8000192e:	01161633          	sll	a2,a2,a7
80001932:	03d87833          	remu	a6,a6,t4
80001936:	02f305b3          	mul	a1,t1,a5
8000193a:	0842                	slli	a6,a6,0x10
8000193c:	0106e6b3          	or	a3,a3,a6
80001940:	00b6fb63          	bgeu	a3,a1,80001956 <__udivdi3+0x2d6>
80001944:	96f2                	add	a3,a3,t3
80001946:	fff78813          	addi	a6,a5,-1
8000194a:	0dc6e263          	bltu	a3,t3,80001a0e <__udivdi3+0x38e>
8000194e:	0cb6f063          	bgeu	a3,a1,80001a0e <__udivdi3+0x38e>
80001952:	17f9                	addi	a5,a5,-2
80001954:	96f2                	add	a3,a3,t3
80001956:	8e8d                	sub	a3,a3,a1
80001958:	03d6d833          	divu	a6,a3,t4
8000195c:	0742                	slli	a4,a4,0x10
8000195e:	8341                	srli	a4,a4,0x10
80001960:	03d6f6b3          	remu	a3,a3,t4
80001964:	030305b3          	mul	a1,t1,a6
80001968:	06c2                	slli	a3,a3,0x10
8000196a:	8f55                	or	a4,a4,a3
8000196c:	00b77b63          	bgeu	a4,a1,80001982 <__udivdi3+0x302>
80001970:	9772                	add	a4,a4,t3
80001972:	fff80693          	addi	a3,a6,-1
80001976:	09c76863          	bltu	a4,t3,80001a06 <__udivdi3+0x386>
8000197a:	08b77663          	bgeu	a4,a1,80001a06 <__udivdi3+0x386>
8000197e:	1879                	addi	a6,a6,-2
80001980:	9772                	add	a4,a4,t3
80001982:	07c2                	slli	a5,a5,0x10
80001984:	01081693          	slli	a3,a6,0x10
80001988:	01061313          	slli	t1,a2,0x10
8000198c:	0107e7b3          	or	a5,a5,a6
80001990:	82c1                	srli	a3,a3,0x10
80001992:	01035313          	srli	t1,t1,0x10
80001996:	0107d813          	srli	a6,a5,0x10
8000199a:	8241                	srli	a2,a2,0x10
8000199c:	02680e33          	mul	t3,a6,t1
800019a0:	8f0d                	sub	a4,a4,a1
800019a2:	02668333          	mul	t1,a3,t1
800019a6:	02c686b3          	mul	a3,a3,a2
800019aa:	01035593          	srli	a1,t1,0x10
800019ae:	96f2                	add	a3,a3,t3
800019b0:	96ae                	add	a3,a3,a1
800019b2:	02c80833          	mul	a6,a6,a2
800019b6:	01c6f463          	bgeu	a3,t3,800019be <__udivdi3+0x33e>
800019ba:	6641                	lui	a2,0x10
800019bc:	9832                	add	a6,a6,a2
800019be:	0106d613          	srli	a2,a3,0x10
800019c2:	9642                	add	a2,a2,a6
800019c4:	02c76063          	bltu	a4,a2,800019e4 <__udivdi3+0x364>
800019c8:	00c70563          	beq	a4,a2,800019d2 <__udivdi3+0x352>
800019cc:	853e                	mv	a0,a5
800019ce:	4581                	li	a1,0
800019d0:	8082                	ret
800019d2:	0342                	slli	t1,t1,0x10
800019d4:	01035313          	srli	t1,t1,0x10
800019d8:	06c2                	slli	a3,a3,0x10
800019da:	01151533          	sll	a0,a0,a7
800019de:	969a                	add	a3,a3,t1
800019e0:	fed576e3          	bgeu	a0,a3,800019cc <__udivdi3+0x34c>
800019e4:	fff78513          	addi	a0,a5,-1
800019e8:	4581                	li	a1,0
800019ea:	8082                	ret
800019ec:	010007b7          	lui	a5,0x1000
800019f0:	02f67763          	bgeu	a2,a5,80001a1e <__udivdi3+0x39e>
800019f4:	01065693          	srli	a3,a2,0x10
800019f8:	4741                	li	a4,16
800019fa:	b34d                	j	8000179c <__udivdi3+0x11c>
800019fc:	4581                	li	a1,0
800019fe:	4505                	li	a0,1
80001a00:	8082                	ret
80001a02:	853a                	mv	a0,a4
80001a04:	b5d9                	j	800018ca <__udivdi3+0x24a>
80001a06:	8836                	mv	a6,a3
80001a08:	bfad                	j	80001982 <__udivdi3+0x302>
80001a0a:	8e2a                	mv	t3,a0
80001a0c:	bd49                	j	8000189e <__udivdi3+0x21e>
80001a0e:	87c2                	mv	a5,a6
80001a10:	b799                	j	80001956 <__udivdi3+0x2d6>
80001a12:	1579                	addi	a0,a0,-2
80001a14:	97c2                	add	a5,a5,a6
80001a16:	bbe1                	j	800017ee <__udivdi3+0x16e>
80001a18:	1579                	addi	a0,a0,-2
80001a1a:	97c2                	add	a5,a5,a6
80001a1c:	b1dd                	j	80001702 <__udivdi3+0x82>
80001a1e:	01865693          	srli	a3,a2,0x18
80001a22:	4761                	li	a4,24
80001a24:	bba5                	j	8000179c <__udivdi3+0x11c>
